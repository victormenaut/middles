

PREFACE
Purpose
This User Guide explains how to use LIFESPAN ABLE, the ASSISTED BULK LIFESPAN ENTRY Program, which allows a user to enter large volumes of software directly into LIFESPAN.
Where necessary, LIFESPAN ABLE reserves module names and creates active Design Changes to allow the module entries to take place.
Audience
This User Guide provides all the knowledge required to operate LIFESPAN ABLE effectively.
It is intended for all levels of user, however it is assumed that the reader is familiar with LIFESPAN and its operation.
If more information is required, reference should be made to the manuals in the References section.
Manual Structure
Section 1 gives an overview of LIFESPAN ABLE and specifies the conditions that have to be satisfied before the software can be entered into LIFESPAN.
The subsequent section explains how to run LIFESPAN ABLE.
The appendices provide references to useful documents, help on solving errors and an example of the output from running LIFESPAN ABLE.
Overview of LIFESPAN ABLE
The LIFESPAN ABLE program can only be run when LIFESPAN is shut down and should only be used by LIFESPAN Managers.
It allows LIFESPAN Managers to enter large volumes of software into LIFESPAN with minimal effort.
LIFESPAN ABLE is divided into two phases: a prepass phase which will validate the modules to be entered and a module entry phase which will enter the validated modules into LIFESPAN.
LIFESPAN ABLE will keep the user informed of progress during both phases and will also maintain a hard copy report file, ABLE_REPORT.LOG.
Any errors or warnings produced will be written to the screen and to this report file.
LIFESPAN ABLE will also produce a hierarchical listing of the structures being entered into LIFESPAN, in the file ABLE_LIST.LOG.
Both files will be created in the user's current directory ie. the directory from which LIFESPAN ABLE is being run.
At the end of the prepass phase, the user will be given the option to proceed to the next phase, if no serious errors have occurred, or to terminate without entering the modules into LIFESPAN.
LIFESPAN ABLE can be run interactively or from batch.
In interactive mode, a dynamic pause facility is provided to interrupt the program at any point and allow the user to terminate execution or to continue, as required.
Before using LIFESPAN ABLE, the user should take a safe copy of the LIFESPAN database files in the LIFESPAN process account.
This will allow regression should LIFESPAN ABLE fail at any stage.
After LIFESPAN ABLE has been run, it is recommended that the LIFESPAN Validation program is executed, to check that the storage directories and database files are consistent.
Preparation for LIFESPAN ABLE
Prior to running LIFESPAN ABLE, the user must set up an empty directory (the primary directory) and copy all modules to be entered into LIFESPAN to this directory.
These modules must contain a LIFESPAN module header and must SCAN successfully.
If the list of modules to be entered include FOREIGN modules, then the files associated with the FOREIGN modules must be transferred to a separate directory (the secondary directory).
The modules to be entered can contain modules known and unknown to LIFESPAN, subject to the conditions specified below, but all modules must be at development versions (ie. LIFESPAN ABLE will not allow approved modules to be entered directly into LIFESPAN).
All modules to be entered into LIFESPAN must either be contained in an existing LIFESPAN PACKAGE module or they must be contained in a user-supplied PACKAGE module in the primary directory.
Any module not satisfying one of these conditions will be reported as a ‘non-referenced’ module and will not be entered into LIFESPAN.
Prepass Phase
To run LIFESPAN ABLE, the user must supply certain information, among them the name of a LIFESPAN user to be the manager and owner of the modules to be entered.
During the prepass phase, LIFESPAN ABLE will scan each file in the primary directory and establish the hierarchies to be entered into LIFESPAN from the user-supplied packages.
LIFESPAN ABLE will check that:
no multiple versions of the same file specification exist on the primary directory
no filename length exceeds the limit for a LIFESPAN module filename (maximum of 64 characters)
each module SCANs successfully
any associated foreign files are present in the secondary directory
no two files have the same module name.
If any of these conditions are not satisfied, an appropriate error message will be generated and LIFESPAN ABLE will stop after all files have been scanned.
Next, LIFESPAN ABLE will attempt to determine whether each module in the primary directory is eligible for entry into LIFESPAN, depending on whether the module name is known to LIFESPAN or not.
Module Unknown to LIFESPAN
If the module name is unknown to LIFESPAN and the module is contained within a user-supplied package, the module will be eligible for entry into LIFESPAN.
If the module is not contained within a user-supplied package, a warning will be generated.
The module will not be entered into LIFESPAN but this will not prevent the user proceeding to the module entry phase.
Module Known to LIFESPAN
If the module name is known to LIFESPAN, the module must satisfy the following conditions:
The version number of the module on the primary directory must be later than that known to LIFESPAN.
If not an error message will be generated and LIFESPAN ABLE will stop after all files have been scanned.
The module type in LIFESPAN must be the same as the module type on the primary directory.
If the module types differ, an error message will be generated and LIFESPAN ABLE will stop at the end of the prepass phase.
If these checks are successful, LIFESPAN ABLE will then check whether or not the module is on an ‘active’ Design Change (DC).
Module on a working DC
If the module is on a working DC (ie. a DC in state ACTIVE or in state IN APPROVAL), LIFESPAN ABLE will ensure that the module is contained within a suitable package, that the user specified (at the beginning of the run) is the one responsible for the DC and that the DC is in the ‘active’ state.
LIFESPAN ABLE will check that the module is contained as a CONTAINS-SOURCE-OF relation in a user-supplied package (if any) or in the latest issue in LIFESPAN of the package through which the DC has been activated.
If not, an error message will be generated and LIFESPAN ABLE will stop at the end of the prepass phase.
If the user is not responsible for the DC, an error message will be generated and LIFESPAN ABLE will stop at the end of the prepass phase.
If the user is responsible for the DC, a check will be made to ensure that the DC is in the ACTIVE state.
If the state of the DC is not ACTIVE, an error message will be generated and LIFESPAN ABLE will stop at the end of the prepass phase.
If these checks are satisfied, the module will be eligible for entry into LIFESPAN and LIFESPAN ABLE will write a message to the report file giving the name of the package and associated DC the module will be entered through.
Module not on a working DC
If the module is not on a working DC, it must be contained in a user-supplied package.
If it is not, the module will not be entered into LIFESPAN and a warning message will be generated but this will not prevent the user proceeding to the module entry phase.
If it is contained in a user-supplied package, it must satisfy the following conditions:
The user name specified at the start of the run must be the manager of the module.
If not, an error message will be generated and LIFESPAN ABLE will stop at the end of the prepass phase.
No other user may have an interest in the module ie. no other LIFESPAN user may have a package which references this module as this would involve more than module baselining.
If another user has an interest in the module, an error message will be generated and LIFESPAN ABLE will stop at the end of the prepass phase.
If these checks are successful, the module will be eligible for entry into LIFESPAN and LIFESPAN ABLE will write a message to the report file giving the name of the package the module will be entered through and indicating that a DC is required.
If the maximum number of DCs on a package is reached, a message will be written to the report file and LIFESPAN ABLE will stop at the end of the prepass phase.
During this phase, LIFESPAN ABLE will produce the hierarchical report of the structures to be entered into LIFESPAN.
If no serious errors were reported, the user will be given the choice to proceed with the module entry phase or to stop.
Hierarchical Listing
This report will give a structured listing of the user-supplied packages to be entered into LIFESPAN.
For each module in the package structures, there will be an entry in the report which will give:
the module name
the relationship; this will be one of the following:
r — the package is a root package ie. there is no user-supplied package in the primary directory which contains this package, except itself.
s — the module is contained as SELECTED-ISSUE
p — the module is contained as PREFERRED-ISSUE
l — the module is contained as LATEST-ISSUE
the version number; if ‘none’ is displayed, no module of that name was found in the primary directory or a preferred version of a module was selected.
the destination file specification (as obtained from the package relationships).
the module type; this will be one of the following:
P — PACKAGE
S — SOURCE
F — FOREIGN
M — PMODEL
?— Missing Module
the entry file specification; if the filename of the module in the primary directory is different from the destination file specification, the entry filename will be displayed here, otherwise the field will be left blank.
An ‘E’ will be displayed at the start of a line to indicate that the module will be entered through this package.
The report will then list out any ‘Missing Modules’.
These are modules which are referenced from packages in the primary directory but for which there is no corresponding file in the primary directory.
Finally, the report will list out any ‘Non-referenced Modules’.
These are SOURCE, PMODEL or FOREIGN modules which appear in the primary directory but which are not contained within any user-package.
Module Entry Phase
This phase will only be entered if no errors were detected during the prepass phase and the user has selected to continue at the end of the prepass phase.
First, LIFESPAN ABLE will reserve all new module names in LIFESPAN.
Next, it will enter all new modules into LIFESPAN.
New SOURCE and FOREIGN modules will be entered through the ‘best fit’ package.
This package will be determined in the following order of precedence:
the lowest level package in the structure which selects the module as LATEST
the lowest level package in the structure which selects the module as PREFERRED
the lowest level package in the structure which selects the module as SELECTED
For each package in the structure, LIFESPAN ABLE will create automatic Design Changes referencing the modules to be entered through this package.
These DCs will be marked as having been created by ABLE.
The DCs will then be activated through this package by the user specified at the start of the run.
Then, the new modules will be entered.
Finally, LIFESPAN ABLE will enter all modules which are already known to LIFESPAN and are on active DCs.
Dynamic Pause
A dynamic pause facility is provided when LIFESPAN ABLE is invoked interactively.
The dynamic pause will allow the user to interrupt the program at the next convenient safe point.
LIFESPAN ABLE will ask the user to confirm that the facility is to be terminated and, if confirmed, will terminate with an appropriate message.
Otherwise, processing will continue.
Note, if the dynamic pause facility is used during the module entry phase and the program is terminated, the database may be left in an inconsistent state.
It is recommended in this case that the user regresses to the safe copy taken before LIFESPAN ABLE was executed.
USING LIFESPAN ABLE
This section explains how to run LIFESPAN ABLE.
The user should close down the LIFESPAN system if it is running and ensure that none of the other stand-alone LIFESPAN utilities are running.
The program operates directly on the database files and LIFESPAN must not be restarted nor the stand-alone utilities run until the LIFESPAN ABLE program has finished.
It is recommended that a copy of the LIFESPAN database files be taken prior to running the program.
This will allow the user to regress should the program terminate unexpectedly during the module entry phase.
The user must log onto the LIFESPAN installation account with the default directory and UIC set to that of the process directory.
To do this, the following commands should be issued:
The following assignment must then be issued: where <config> is the name of the LIFESPAN configuration file.
Batch Mode
The program may be run in batch mode by submitting a command file.
This file should contain the responses the user would have given to the prompts had the system been used interactively, as described below.
The equivalent of each ‘response’ expected from the input page must be entered as there are no defaults; each entry must be on a separate line.
Interactive Mode
To run LIFESPAN ABLE the following command must be issued:
where <inst> is the device and directory of the LIFESPAN installation directory.
The user will now be presented with an input screen, as shown in Figure 2.1.
The following information is required:
User Name A valid LIFESPAN user name through which ABLE will access LIFESPAN, up to 28 characters long.
This user will be the manager and owner of all new modules entered into LIFESPAN.
Charge Code A valid LIFESPAN charge code to be used to reserve new module names.
Primary Directory The primary directory containing the modules to be entered into LIFESPAN, up to 50 characters long.
This directory must exist and the user must have at least read and write access to it.
Secondary Directory The secondary directory containing the files associated with FOREIGN modules, up to 50 characters long.
This field is optional and need only be specified if there are any FOREIGN modules to be entered.
If specified, the directory must exist and the user must have at least read and write access to it.
It must also be different from the Primary Directory.
Module Password The module password to be associated with new modules, up to 8 characters long.
This field is optional and if the user does not enter a password, no password will be used to protect new modules.
The above inputs will be validated in the order presented when RETURN has been pressed.
If a validation error occurs this will be reported and the remainder of the inputs will not be validated.
In batch, LIFESPAN ABLE will terminate immediately if the validation of the user input fails.
Interactively, a message will be displayed on the form and the cursor returned to the offending field.
After entering the required information, a terminator must be pressed as described below.
If the information entered into any field is invalid, an error message will be displayed at the foot of the page.
TAB and BACKSPACE
To move between fields on a page, the user should press TAB to go forwards and BACKSPACE to go backwards.
More specifically, the user should press TAB to move to the next field when input at the current field is complete.
However, LIFESPAN ABLE will display a warning message and the cursor will remain where it is if:
TAB is pressed when the cursor is positioned on the last input field of a page;
BACKSPACE is pressed when the cursor is positioned on the first input field of the page.
RETURN
The RETURN key should be used to tell the system that all necessary information has been entered and the report should be produced using the supplied data.
If all fields have been completed correctly, the input screen will be removed and LIFESPAN ABLE will start processing.
If any information has been entered incorrectly, an appropriate error message will be displayed and the cursor will move to the field in error.
Similarly, if a field that requires input (mandatory field) has not been completed, the message:
Input required
will be displayed and the cursor will stay on the field to be completed.
ABORT
The PF1/6 keys can be used to ABORT from the input page.
This will cause the message:
Do you wish to try again (Y/N)?
to be displayed and the user can either press RETURN, leaving the default of N (No), or overtype the default with Y (Yes) and press RETURN.
In the former case, the user will be returned to VMS.
HELP
The PF2 key can be used to obtain help if the user is in any doubt about what to do next, what to enter or does not understand what is being displayed on a page.
The PF2 key is called the HELP key.
The help facility is multi-level.
Information about a specific field is displayed at the bottom of the page, if the cursor is positioned on a field and HELP is pressed.
If this does not give enough information, more is available by pressing the HELP key again.
In this case, whole pages of help information temporarily replace the original; pressing RETURN will take the user back to the input page.
Dynamic Pause
The user can interrupt the program during the prepass and the module entry phases by pressing CTRL/C or CTRL/Y.
The user will then be asked:
Do you wish to terminate the session (Y/N)?
To terminate the program immediately, the user should enter Y (Yes) and press RETURN.
To continue, the user should enter N (No).
Continuation to Module Entry Phase
If, by the end of the prepass phase, no errors have occurred then the user will be asked:
Do you wish to proceed to the Module Entry phase (Y/N)?
To continue, the user should enter Y (Yes) and press RETURN; to stop without proceeding to the module entry phase, the user should enter N (No).
In the latter case, the program will then terminate with a suitable message.
REFERENCES
You may find it useful to refer to the latest issues of the following manuals if you want more detailed information about using LIFESPAN.
These are
’ Introduction to LIFESPAN’, Issue 9, R645/56, Sema Software Technology.
’ Creating and Controlling Modules and Packages with LIFESPAN’, Issue 9, R645/57, Sema Software Technology.
’ Installation and Management of LIFESPAN’, Issue 10, R645/60, Sema Software Technology
’ Operations Guide to LIFESPAN’, Issue 3, R645/61, Sema Software Technology.
’ User's Guide to LIFESPAN’, Issue 2, R645/58, Sema Software Technology.
exit
’ Reference Guide to LIFESPAN’, Issue 2, R645/59, Sema Software Technology.
ERROR DETAILS
During the execution of LIFESPAN ABLE certain errors and warnings may occur.
This Appendix lists each of these with an explanation and recovery action (if appropriate).
If the specified explanation does not resolve the error then contact SST for assistance.
Warning Messages
Any warnings issued by LIFESPAN ABLE will not prevent the user from proceeding to the module entry phase but no further processing of the associated module will take place.
Warnings are identified by the text ‘%ABLE-W’ preceeding the warning message.
message severity=warning source=able 
<filename> contains subtype, process model is not triggered on entry through ABLE.
Action: This informs the user that a module has been detected with a subtype definition under the MODULE-SUB-TYPE-IS keyword of the LIFESPAN module header.
ABLE however, is unable to trigger the corresponding process model and so the module will not follow the associated process model.
message severity=warning source=able 
No new issue of referenced module: X
Action: This merely informs the user of a ‘missing module’, X. i.e. a module is referenced by a user-package for which there is no new issue.
message severity=warning source=able 
Unreferenced module is known to LIFESPAN and not on a DC: X
Action: A module X, which is not referenced by a user package and is known to LIFESPAN must be on an active DC in LIFESPAN to allow entry of the module.
message severity=warning source=able 
Unreferenced module is unknown to LIFESPAN: X
Action: A module X, which is not referenced by a user package must be known to LIFESPAN (and on an active DC) to allow entry of the module.
Error Messages
Any errors issued by LIFESPAN ABLE will prevent the user from proceeding to the module entry phase until the error has been rectified.
Errors are identified by the text ‘%ABLE-E’ preceeding the error message.
message severity=error source=able 
A higher version exists of file X
Action: LIFESPAN ABLE does not permit multiple versions of a file.
The user should ensure that only one version of each filename is supplied for processing.
message severity=error source=able 
X has scan errors.
Action: File X, failed to scan.
The user should take the appropriate action to enable the file to scan successfully.
message severity=error source=able 
X does not contain a development module.
Action: File X is currently at an approved issue.
LIFESPAN ABLE will not allow entry of approved software.
message severity=error source=able 
X filename part exceeds LIFESPAN maximum.
Action: The filename supplied is too long to allow entry into LIFESPAN.
The user should rename the file so that it does not exceed the LIFESPAN maximum filename length.
message severity=error source=able 
Module name X encountered more than once.
Action: Module X exists in more than one user-supplied file.
The user should ensure that a module name is not contained in more than one file.
message severity=error source=able 
Module type is not the same as the module in LIFESPAN: X
Action: The user-supplied module X is not the same type as that known to LIFESPAN.
The user should ensure that the module types are the same.
message severity=error source=able 
Module issue is not greater than the latest in LIFESPAN: X
Action: The user issue of module X is lower than the latest known to LIFESPAN.
The user should ensure that the module issue is greater than the latest issue in LIFESPAN.
message severity=error source=able 
Specified user is not associated with DC Y on module X
Action: The LIFESPAN user specified is not associated with the working DC Y on module X. The user should enter the module using the correct LIFESPAN username.
message severity=error source=able 
DC Y is currently being approved for module: X
Action: The working DC Y on module X is currently ‘in approval’.
The user may not enter this module until the associated package is either approved or approval is denied (which will return the DC state to ‘active’).
message severity=error source=able 
DC package, P does not contain module: X
Action: Neither the user issue of package P (which has the DC for module X activated) nor the latest issue of package P in LIFESPAN reference module X as a CONTAINS-SOURCE-OF relation.
The user should ensure that the user issue of package P references module X to allow its entry.
message severity=error source=able 
Module requires assessment by other users: X
Action: Module X requires assessment by other LIFESPAN users as well as the LIFESPAN user specified.
LIFESPAN ABLE will not enter such a module.
message severity=error source=able 
Specified user is not the manager of module: X
Action: The LIFESPAN user specified is not the manager of module X. The user should enter the module using the correct LIFESPAN user.
message severity=error source=able 
Y DCs required, exceeds the LIFESPAN maximum for package: P
Action: If the user were to proceed to the module entry phase, Y DCs would be required for modules in package P. This number of DCs exceeds the LIFESPAN maximum.
The user should amalgamate any existing DCs on package P to prevent this overflow.
message severity=error source=able 
Referenced module has no new issue and is unknown to LIFESPAN: X
Action: A module, X, is referenced by a user-package for which there is no new issue and the module is unknown to LIFESPAN.
The user should either remove any references to this module from all user packages or alternatively reserve its name in LIFESPAN.
LIFESPAN Errors
LIFESPAN errors are unlikely to occur in normal use of LIFESPAN ABLE.
However, if they do occur LIFESPAN ABLE will stop immediately with an appropriate error message.
In this situation:
Ensure that LIFESPAN is not running.
Also ensure that all of the stand-alone programs are not running.
Check that the logical name LIFESPANCONFIGURATION has been set up correctly.
For more information on this subject, please see the ‘Installation and Management of LIFESPAN’ manual.
Check the report log file, ABLE_REPORT.LOG, for errors which may have occurred earlier and resolve these.
This may in turn cure any subsequent errors.
Ensure that LIFESPAN ABLE is invoked from the directory containing the LIFESPAN process files (the LIFESPAN process directory).
EXAMPLE OF RUNNING ABLE
This appendix provides an example of the use of ABLE.
The three structures above are to be entered into LIFESPAN.
The following active DCs exist:-
The files for the modules to be entered are copied to the primary and secondary directory as shown below.
Note, that MODULE7, MODULE9 and LFPACK2 are not to be entered at this time.
The following file, ABLE_REPORT.LOG, is generated when trying to enter this structure into LIFESPAN.
(a)This denotes the start of the prepass phase
(i)First, all files in the primary directory are scanned and the result of the scans reported.
(ii)Next, a check is made that all referenced files are present.
A warning is generated for each missing module.
(iii)This denotes the start of the validation section of the prepass phase.
(iv)DIRPACK1 is already known to LIFESPAN and on active DC 1069.
(v)DIRPACK3 is not known to LIFESPAN.
It will require a DC to be created to allow its entry to proceed.
(b)This denotes the start of the Bulk LIFESPAN Entry Phase
(i)First, all new module names are reserved.
(ii)Next, all new modules are entered into LIFESPAN.
This is carried out on a package basis.
A DC is created to allow the module(s) to be entered and activated through the relevant package.
Then the new module(s) are entered into LIFESPAN.
(iii)Step (ii) is repeated for each new module.
(iv)Finally, all modules already known to LIFESPAN and on active DCs are entered.
The following hierachical listing file, ABLE_LIST.LOG, is created during the Prepass Phase.
PREFACE
Purpose
This manual has as its objectives:
to define modules and packages and explain how to create them
to define the LIFESPAN performance and status reporting system (Software Performance Reports (SPRs) and Software Status Reports (SSRs))
to define Design Changes (DCs) and the Quality Assurance (QA) operations in terms of how module development can be controlled
to define the LIFESPAN offline system
to define the LIFESPAN product system.
audience
Most LIFESPAN users would benefit from reading this manual: programmers for practical information on how to create modules, module headers and packages; project leaders for advice on handling the controlled development of modules and packages; system designers and quality assurers for background information on project planning.
Manual Structure
Sections 2 and 3 define modules and packages and give detailed information about creating modules, module headers and packages.
All this information is based on LIFESPAN procedures for controlling software production and development.
Section 4 describes the handling of SPRs and SSRs by both LIFESPAN users and LIFESPAN itself.
Section 5 describes how the development of all modules and packages can be carefully controlled and monitored by using DCs and QA.
Section 6 describes the offline system and the safety checks made to ensure that the integrity of modules is maintained when they are offlined.
Section 7 describes the marketing facility of LIFESPAN, the product system, and gives detailed information about creating products.
It also delineates the relationship between packages, products and issues.
INTRODUCTION
Support of production control and configuration control are the two primary functions of LIFESPAN.
Modules and packages are two of the basic elements handled by these functions — modules as the unit of software, packages as the unit of control.
After reading this manual, the reader should have an understanding, not only of LIFESPAN's low level functions, but of how best to put them to use.
This is the first essential step towards practical project planning and development.
LIFESPAN MODULES AND USER HIERARCHY
Definition
Modules are LIFESPAN's fundamental building blocks.
All software, of whatever form or kind, is submitted to LIFESPAN, stored and retrieved as one or more LIFESPAN modules.
A LIFESPAN module is a set of characters which are administered as a single unit throughout the lifetime of the software, and which:
can be identically stored within the computer
can be understood, written and maintained by users
contains an administrative block of data known as a ‘module header’, formatted so that it can be read and analysed by LIFESPAN.
Informally, LIFESPAN modules are simply files of text which include a module header block.
The header need not necessarily be at the beginning of the file.
Several example headers are provided in Appendix A and a syntactic description of a module header is given in Appendix B.
There are four types of module:
SOURCE the most common type which covers a very broad range of software, not necessarily restricted to programming code.
Other examples include text describing software design, command files for compiling and issuing software, test data sets and actual data sets, instructions for carrying out manual procedures, and source text for word processing.
PACKAGE its main function is to specify a set of modules which are ‘contained’ in the package.
Refer to Section 3.
A subset of the module type package is the ‘package intended for issue as a product’; for more information on this type of package, refer to section 7 of this manual.
FOREIGN this points to between 1 and 30 other files which, with the module header, are treated as a single entity within LIFESPAN, but when read out are expanded into the original file set.
It is strongly recommended that this module type is used only when it is totally impractical to embed a header in a file to be controlled by LIFESPAN (e.g. in binary files), since:
The referenced files are treated as unreadable and are never made available for viewing, i.e. during approval or hard copying.
It is impossible to read any one of such referenced files from LIFESPAN without all the others.
PMODEL its main function is to define a process model using the Process Model Definition Language (PMDL).
The addition of a module header to a piece of software is the only requirement for storage in LIFESPAN.
The module header can be identified by LIFESPAN in a very wide range of contexts.
What is a Module Header?
A module header provides information to LIFESPAN and to LIFESPAN users about the module of which it is part.
It is the sole source of information about the module, so that:
All the information needed to manage a module throughout its lifetime is in the header.
Typical of this information is the history of the module, with a record of the different versions, when it was modified, and by whom.
Other entries in the header provide useful information to the module's users about the type of contents, details of the coding (language used, dependency on a particular system) and the test status of the module.
All this information is visible and always remains part of the module itself.
Adding a module header to a file is the only step necessary to make its contents eligible for control by LIFESPAN.
In order to cope with a wide variety of programming languages, data definition languages, and computers, the module header should be formatted as one comment (or a series of comments) in the language of the module.
Creating Modules
Every module which is contained in LIFESPAN must have a module header.
At the start of each project, it is wise to begin modularisation as soon as possible by planning how a hierarchy of modules and packages is to be set up.
Once established, names should be reserved in LIFESPAN for each module, whether the modules do in fact exist at this stage or not.
Module headers can be generated and duplicated quickly on the user's account, perhaps with standard information related to the project in hand supplied in certain fields.
Once added to the relevant files, they can be brought immediately under LIFESPAN's control.
In the case of FOREIGN modules, only one module header needs to be created to point to the associated foreign files.
Since these may be binary files or indexed files, the header file is created separately.
Note that all the files referenced by the FOREIGN module, and the header file itself, must be in the same account and in the same directory before they can be entered into LIFESPAN.
Modules of type PACKAGE are given skeleton module headers automatically by LIFESPAN, as explained in Section 3 of this manual.
It is recommended that all new modules (including edited PACKAGE modules) are given an initial issue number of 1.1A, where A is known as the development code.
Scanning
Before a module is accepted by LIFESPAN, its header is checked to ensure that all its constituent keywords are present and that they contain at least the minimum amount of information required.
This process, called Scanning , is carried out automatically every time a module is about to be entered into LIFESPAN, whether the module is new or a modified version of an existing one.
LIFESPAN will not accept a module if it does not scan correctly.
Users may also scan modules themselves by selecting the appropriate LIFESPAN option or by using the stand-alone scanner program to check the module header before reaching this stage.
Entering and Reading Modules
When modules are entered into LIFESPAN, they are not automatically deleted from the user's account.
It is the user's responsibility to do this if required.
This also applies to the files referenced in a FOREIGN module.
When modules are read from LIFESPAN, they are transferred to the account from which LIFESPAN is currently being accessed, not to the account where the modules were held originally (if these are different).
However, the Read from Root Package facility allows modules to be directed to a different directory.
For FOREIGN modules only, there are a few other important points to note.
No attempt should be made to enter directory files, i.e. those files with extension.
DIR created by CREATE/DIRECTORY DCL command since, when these are later read from LIFESPAN, it is unlikely that any of the files originally contained in these directories will still be on the system.
When reading FOREIGN modules from LIFESPAN:
all the files specified in the module header will be transferred.
the File Identification and Extension File Identification will be different on return to that on entry.
These are the numbers by which the file is known in RMS.
the file generation number will be one greater than the highest generation of any file with the same name and extension as the outcoming binary file, held in the user's account.
The File Revision Number and check sum will also be updated.
The File Revision Number is the number of times that the file has been opened for ‘write’.
the File Protection is updated to include System:Read and Owner:Delete.
Module Header
A description follows of a typical module header, as shown in figure 2.1.
A module header is made up of a series of keywords (upper case) and their associated fields in which the user may supply some information.
The description follows sequentially through the keywords and the entries required, explaining the type of information required.
A definition of the exact syntax to be used (e.g. the number of characters allowed in fields) is given in Appendix B.
The following points should be noted:
Throughout the module header, the user-supplied information is enclosed in square brackets.
Everything outside the square brackets is a keyword, i.e. part of a standard word or phrase which forms the structure of the module header and which must be upper case.
The exception to this rule is the entry supplied under DESCRIPTION-LINES-ARE, which is not contained in brackets, and may be free-format text.
The start of the module header is denoted by the keyword HEADER-FORMAT-IS.
This may start at any position in the line.
Thereafter, however, all subsequent initial keywords must start at the same position in the line as HEADER-FORMAT-IS.
The order of the keywords cannot be changed.
The use of the tab character should be avoided in the module header; it is treated as a single character and may cause error reports about the indenting of keywords.
Keywords cannot be used as part of the user-supplied information (e.g. within COMMENT fields).
Each user-supplied entry line (except for the keywords HEADER-FORMAT-IS, MODULE-TYPE-IS, MODULE-NAME-IS, TITLE-IS and DESCRIPTION-LINES-ARE) must be indented by at least two spaces from the initial keyword position, but there is no restriction on the position of other fields within the same entry.
Entries which may take up more than one line must end with an END-OF keyword related to the initial keyword; e.g. END-OF-CLASSIFICATIONS.
It is recommended that at the start of a particular project, the project manager should draw up a set of guidelines for filling in module headers.
These may include definitions of the classifications to be used, suggestions of what type of information is required in the DESCRIPTION field, and naming conventions for modules.
HEADER-FORMAT-IS
This denotes the version of the header format for the particular module being submitted to LIFESPAN.
However, since it is possible that there will be future changes either to the format or the contents of the module header, LIFESPAN will allow the entry and approval of modules which contain at least the latest and the immediately preceding version of the module header.
Users are, however, urged always to use the latest version of the header when entering modules.
If a module is undergoing modification, it is strongly advised to raise the version of the header to the latest available, at the same time as the other modifications are being made.
The recommended version of the header format for a LIFESPAN release is indicated on the log on form.
MODULE-TYPE-IS
Every module is one of a restricted set of types.
There are four standard types accepted in a module header:
PACKAGE specifies a set of modules, which may include other modules of type PACKAGE, modules of type SOURCE or modules of type FOREIGN.
It may also be intended for issue in the future as a product.
SOURCE a broad category which may refer to, for example, program code, command files, text describing software design, or even source text for word processing.
FOREIGN a module pointing to a set of files which should not contain module headers.
PMODEL a module containing a process model definition.
MODULE-SUB-TYPE-IS
This is user definable and determines which process model the module is to follow.
It may be left blank if desired.
MODULE-NAME-IS
This is the unique name by which the module will be known throughout its life.
When a module name is first entered into LIFESPAN, it is checked to ensure that the same name has not already been chosen for another module.
This name, combined with the issue number, e.g. CLIENTFILEBUILD 1.1, ensures the unique identity of the module in LIFESPAN.
Restrictions may be placed on module names for particular environments by using a development discipline.
It is always advisable to choose names which are as descriptive as the number of characters will allow, avoiding the ever popular INPUT, OUTPUT and TEST.
If the function of a new module is similar, but not identical to, an existing module, then a name should be chosen which identifies the difference.
Experience suggests that the use of project numbers or names for module names should be avoided, as this may lead to confusion if the module is used for other projects in the future.
TITLE-IS
The title of the module provides a concise one-line description of the module.
Its principal use is in identifying the module when examining lists of modules, so it is advisable to make it as descriptive as possible, within the space allowed.
The title is considered by LIFESPAN to be public domain (ie. all LIFESPAN users may see it) so it is important to keep its secure content down to the minimum.
MODIFICATION-RECORDS-ARE
This contains a history of the development of the module.
All the versions of the module which have been entered into LIFESPAN should be shown here, with the latest version at the top of the list.
Each entry is divided into four sections:
ISSUE — the unique issue number of the module, to which the remainder of the entry applies.
When a module is first created, its issue number will normally be 1.1A.
During development, new modification records may be added, with the sequence 1.1B, 1.1C, 1.1D, etc.
It is possible to leave gaps in this record, but Z is the last.
Before reaching Z, the module should be approved.
During the approval process LIFESPAN adds a modification record identifying the approval.
In the case of the sequence above, it would add 1.1.
Note that only LIFESPAN can add modules to LIFESPAN whose latest modification record contains an approved issue number.
Users may only add development versions.
It is possible to start with 1.2A after 1.1Z, but this is symptomatic of too long a period between approvals.
(Refer to Section 5 for a description of the approval process.)
The second section shows the action taken on the particular version of the module, and the name of the LIFESPAN user who carried out the action.
The LIFESPAN user name should be used if it identifies the individual uniquely.
If, however, it is the individual's position in a team which is reflected by the LIFESPAN user name, then personal initials or name should be used.
The four possible keywords are:
CREATED-BY the first version of the module
MOD-BY the module has been modified in some way
CHECKED-BY a check has been carried out on the module at this point, probably as part of a quality inspection
APPROVED-BY the module has been formally approved and can be issued as part of a product.
Note that this keyword is normally only entered by LIFESPAN as part of the approval process.
ON — the date when the module was created, modified, checked or approved.
Additional information — this is entirely optional but, if provided, should follow one of the three possible keywords:
COMMENT The normal use for this is to describe the modification.
It is advisable not to enter too much information here, but to refer instead to further information contained in the DESCRIPTION part of the header.
FOR-JOB If required, a contract or job reference may be supplied.
IN-PACKAGE The module was approved as part of the named package.
This should only be entered by LIFESPAN during the approval process.
Examples are:
NOTE: The above example shows the use of continuation lines indicated by hyphens immediately following the closing square brackets.
CLASSIFICATIONS-ARE
This entry denotes the security classification of the constituent parts of the module.
It is recommended that the actual classification codes are defined as a set by the individual organisation concerned; e.g. UNCLASSIFIED, RESTRICTED.
The principal use is in connection with the hard copy system in which a particular medium may be suitable for a specified set of classifications.
For example, UNCLASSIFIED and RESTRICTED may be defined by some organisations to be suitable for microfiching.
The hard copy system will also put the classifications at the head and tail of each page.
LIFESPAN recognises the possibility that the header, body and translated body (binary) may have different security classifications.
Thus, up to three separate classifications are allowed:
DESCRIPTION-IS Classification of the module header
CODE-IS Classification of the information outwith the module header, including any files pointed to by FOREIGN modules
BINARY-IS Classification for a translated version of the module
Any omitted classifications default to UNCLASSIFIED.
Note also that it is assumed that the description contained in TITLE-IS is UNCLASSIFIED, since the title will appear whenever lists of modules are sent to a printer or viewed on a screen.
TYPES-AND-NAMES-OF-CONTENTS-ARE
This entry contains two fields.
The first field provides a type, and it is recommended that the types are defined as a restricted set by the individual organisation concerned.
In modules of type SOURCE, for example, these lines can be used to list the names of the procedures in the source program.
The second field contains their names.
For example:
[PROCEDURE][ERROR REPORT]
The main use of this entry is as a quick reference to the contents of a module.
When creating a module of type PACKAGE, LIFESPAN automatically inserts an entry of [PACKAGE]<name of package> here.
It is recommended that users insert an entry of [PRODUCT]<name of product> here to identify packages intended for issue as products.
DESCRIPTION-LINES-ARE
This entry must contain all the information required to understand the purpose of the module and how to use it.
It is free-format text, and can be any number of lines long.
In the case where the description is very long, it is recommended that there should be a brief summary of the function of the module in the first 20 lines.
The range of information may include pseudo code, outlined design structure, and comments and assistance on using the module (including pitfalls and restrictions on its use).
These are merely suggested guidelines, and individual organisations may find other uses for the description section.
As a rule, though, experience has shown that in the case of modules containing program code, the description lines should be used to describe the purpose of the code and not as a substitute for good in-line comments.
Note that the character string END-OF must not appear in the description in such a way that it is aligned with the other keywords in the header, or a scanner error will result.
ERRORS-REPORTED-ARE
This entry is used to list any known reported errors which relate to the module.
In order to make this facility useful, it is recommended that an organisation-wide policy be adopted; e.g. ‘Errors reported always apply to the module which first detects the error, not the reporting module’.
CODING-DETAILS-ARE
This section concerns modules which contain source code.
It provides information on the code itself, and will be used in later versions of LIFESPAN to gather statistics on the typical kinds of modules stored.
It is broken down into three categories:
LANGUAGE-IS the language used for the source code
CODE-CHARACTERISTIC special features, such as‘overlayable’
IS-DEPENDENT-ON usually the operating system and computer type
The LANGUAGE-IS field gives the language in which the body of the module is written.
It is recommended that this is defined as a fixed set by the Project Manager concerned.
In some cases there may be more than one entry.
CORAL66 for example, allows sections of assembly code to be inserted.
The CODE-CHARACTERISTIC field gives any special features of the code.
It is recommended that this should be defined as a fixed set by the Project Manager; e.g. whether the code is re-entrant, position independent or overlayable.
If the module contains no code or if there is no special code-characteristic, then the keyword CODE-CHARACTERISTIC need not be entered.
The IS-DEPENDENT-ON field should list all software directly required by this module which is not covered by MODULE-RELATIONS-ARE; i.e. software which has no module header associated with it.
This will normally be computer manufacturer's software, device handlers etc.
The field could also be used to list all hardware on which the module is dependent for its operation.
It is recommended that entries for this field be taken from a restricted set defined by the Project Manager; e.g. an entry may be the computer, the operating system and the version of the operating system in use (for example, VAX 11/785 VMS V5.2).
REFERENCES-ARE
This entry consists of optional free-format lines for cross-references to relevant manuals and documents (not under LIFESPAN control) which provide additional help and information to the user of the module (e.g. system requirements diagrams, programming manuals).
TEST-STATUS-ARE
This entry provides information about the known test status of the module.
If a module's status is untested, this can be as significant as being tested, so either should be noted here.
Each entry consists of three sections:
ENVIRONMENT A brief description of the software and/or hardware environment in which the module was tested.
STATUS The current state of the testing.
It is recommended that these entries be defined by the individual organisation.
Suggested entries are UNTESTED, PARTTESTED, VALIDATED.
In some cases this field is inappropriate, e.g. in a design document, so it is recommended that in this case the status should, for example, read ‘INAPPLICABLE’.
ON The date on which this entry was made.
MODULE-RELATIONS-ARE
This part of the module header specifies the other modules that are in some way related to this module.
The nature of the relationships is defined by a set of keywords followed by the name of the related module.
There are two classes of relationships: loose coupling and tight coupling.
Loose coupling
A loose coupling relation links one module to another module without specifying a particular version.
Typically such relations would refer to modules describing subroutines, further descriptive modules, test harnesses etc.
Such relations only refer to the name of the referenced module.
It is recognised however that some reference to a version may be worthwhile, in that the producer of a module may well have been using a specific version of a referenced module during initial design.
It is possible, though not mandatory, to record this version for user information only using the LAST-CHECKED-ISSUE keyword.
LIFESPAN will report discrepancies between this reference and the versions called up by a package during QA checking.
If this keyword is not used, LIFESPAN stores the module version as 0.0 and will never report discrepancies.
The keyword LAST-CHECKED-ISSUE does not necessarily relate to the CHECKED-BY keyword in the MODIFICATIONS-RECORDS field of the module referenced, but is purely for the user's information.
The suggested use is as follows: at certain stages during development, a module is in a ‘known state’ and it is this known issue number that should be entered after LAST-CHECKED-ISSUE.
It allows the developer to back-track to a ‘known state’ if necessary.
Note: The specification of loose coupling relations will not stop the module referenced from being changed or set to hard copy only.
Loose coupling relations are there to make quality assurance inspections practicable.
A description of the different loose coupling relations follows.
In order to construct the binaries of a package, in cases where the package is made up of software modules (e.g. modules that contain CORAL66, COBOL etc.), there should be an entry under the keyword MODULE-RELATIONS-ARE:
BUILT-BY [module name]LAST-CHECKED-ISSUE [issue number]
This is a loose coupling relation.
The module referred to by the keyword BUILT-BY is the command file which builds i.e compiles, links etc. the package.
This identifies which of the modules called up in CONTAINS-SOURCE-OF should be used to build the package.
It is recommended that the build file should describe how to build the package and reference either another module or a document/manual which instructs the user how to run the software once it has been built.
The module referred to by BUILT-BY should define the file names which are a result of the building process.
In order to describe the immediate environment of a module, some reference must be made to modules which are required by the module under construction.
If the module requires the entire source of another module for successful operation or understanding, then the loose coupling keyword REQUIRES-SOURCE-OF should be used:
REQUIRES-SOURCE-OF [module name]LAST-CHECKED-ISSUE [issue number]
If there is a module which is specifically for testing the module under construction, then the loose coupling relation IS-TESTED-BY should be used:
IS-TESTED-BY [module name]LAST-CHECKED-ISSUE [issue number]
If a test module exists, then it is also recommended that the TEST-STATUS-ARE field should be filled in.
The loose coupling relation IS-DESCRIBED-BY should be used when there is a separate text module that describes the current module:
IS-DESCRIBED-BY [module name]LAST-CHECKED-ISSUE [issue number]
The loose coupling relation REQUIRES-BINARY-OF should be used if a module requires only the binary of another during a build.
In this case, it is the PACKAGE binary itself, not the source modules which make up the package binary, which is required.
REQUIRES-BINARY-OF [module name]LAST-CHECKED-ISSUE [issue number]
If it is necessary to create two modules which are very closely related (usually providing the same user interface), then the loose coupling relation VARIANT-OF should be used in both modules:
VARIANT-OF [module name]LAST-CHECKED-ISSUE [issue number]
Note that this is for the user's purpose only, since LIFESPAN does not make any checks on the connections between the two modules.
Tight coupling
Tight coupling relations may be used only in a module of type PACKAGE and must refer to a PREFERRED, LATEST or SELECTED version of the referenced module.
Tight coupling relations automatically stop the referenced versions of the modules from being:
Modified without agreement
Set to hard copy only
In modules of type PACKAGE, the keywords LATEST-ISSUE-IN-FILE,SELECTED-ISSUE [issue number]-IN-FILE,and PREFERRED-ISSUE-IN-FILE are used to ensure that the appropriate version of the module specified is included in the package.
The keyword SELECTED-ISSUE requires the issue number to be stated, and it is that named ‘selected’ module with the stated issue number that is contained within the package.
The keyword PREFERRED-ISSUE-IN-FILE relates to the version of the module recommended for use by its module manager (using the Update Module Details option in LIFESPAN).
This should be the latest fully tested version, but it need not necessarily be the latest version.
Note that if this keyword is used without the module's manager having set a PREFERRED version, an error message will be displayed the next time an attempt is made to read the module out of LIFESPAN.
The keyword LATEST-ISSUE-IN-FILE relates to the most recent version, i.e. the one with the highest issue number, of that module known to LIFESPAN.
Only in the case of SELECTED-ISSUE, therefore, can the person creating the module header stipulate a specific version.
For PREFERRED-ISSUE, the version is chosen by the module's manager, and for LATEST-ISSUE the version is picked out by LIFESPAN.
The relation CONTAINS-SOURCE-OF is a tight coupling relation and can only be used in a module of type PACKAGE.
Modules specified in this way appear when the contents of a package are displayed using LIFESPAN, and can be marked for transfer to and from a VMS account.
Valid VMS file names must be supplied for this purpose.
Note that a package must also contain itself using this relation, specified as a SELECTED version.
The relationships are:
CONTAINS-SOURCE-OF[module name]—
LATEST-ISSUE-IN-FILE[file name]
CONTAINS-SOURCE-OF[module name]—
SELECTED-ISSUE[issue number]-IN-FILE[file name]
CONTAINS-SOURCE-OF[module name]—
PREFERRED-ISSUE-IN-FILE[file name]
When work is not in progress on a module but the module must be accessed by a package, the module must be locked against being set to hard copy only and against modification.
For example, a superior variant of a module may exist but not be used in a package and consequently may not require to be transferred as part of the package.
In this case, the tight-coupling relation REQUIRES-ACCESS-TO is used in one of the following forms:
REQUIRES-ACCESS-TO[module name]PREFERRED-ISSUE
REQUIRES-ACCESS-TO[module name]LATEST-ISSUE
REQUIRES-ACCESS-TO[module name]SELECTED-ISSUE[issue number]
Note that no file name is specified since no modules are transferred.
It is possible to acquire binaries from a package in place of the source modules.
In this case the transfer results in one or more files being moved into the user's account; file names are specified by a module which defines the binary construction commands attached to the referenced package.
The relationship used for this purpose is CONTAINS-BINARY-OF which is tight coupling and takes one of three forms:
CONTAINS-BINARY-OF[module name]PREFERRED-ISSUE
CONTAINS-BINARY-OF[module name]LATEST-ISSUE
CONTAINS-BINARY-OF[module name]SELECTED-ISSUE[issue number]
Note the lack of the IN-FILE keyword, since, in general, the user concerned does not know how many binaries will be delivered as a result of the transfer.
There are therefore two networks of modules within LIFESPAN i.e. the tight and loose coupling relations.
The definitive set is that of the tight coupling relations.
For a particular package of software which is to be assessed for quality assurance, LIFESPAN will produce a discrepancy list between the tight and loose coupling relations in order to show to the assessor those modules which the designer thought were necessary but which are not however called up by the package.
This may be quite legitimate in cases where it is possible to use one module with any one or more modules, all of which may be referred to in loose coupling relations but only one may need to be called up from within the package.
FOREIGN-SET-IS
This keyword is valid only in modules of type FOREIGN.
The foreign set comprises the names of files which are to be included as part of the module, but which have no module headers themselves.
Each entry consists of two fields, both of which are mandatory.
The first field provides a file name, and the second provides a comment:
CONTAINS-FILE[nam.typ] COMMENT[User image]
CONTAINS-FILE[nam2.typ] COMMENT[User image after paging]—
COMMENT[modifications incorporated]
Note that nam.typ and nam2.typ are file names only and do not specify a device or directory.
The comment may be continued over more than one line, and in order for the header to scan successfully, the files and the module header file must be on the same account.
In addition, the file names specified in the foreign set must be unique within the module header and within the set of file names used in any package which contains the foreign module.
When the module is entered into LIFESPAN, the files in the FOREIGN-SET are held with the module header file and are treated as a single module.
When a FOREIGN module is read from LIFESPAN, the files are re-created with the same file names as they were given in the module header.
EOMD
This denotes the end of the module header definition.
Creating Headers
The only requirement for bringing software under LIFESPAN control is that each source file (except for those in the FOREIGN-SET) must contain a module header.
How the header is created, and when, depends on whether the software is new or already exists.
New Software
It is recommended that module names should be reserved for all software as it is being created.
This includes source programs, text files and package modules — anything in fact which is to be brought under LIFESPAN configuration control.
By reserving the module names at an early stage, their unique identity is immediately assured and module headers can be added when convenient.
The source modules can then be entered into LIFESPAN as soon as they have module headers, by including their module names into a package module header.
Existing Software
Usually there is a need, on first acquiring LIFESPAN, to bring an existing software project under its control in order to gain operational experience.
It is recommended, however, that the existing software should not be re-modularised prior to its initial entry into LIFESPAN.
It is preferable to add module headers to all the software, bringing it under LIFESPAN's immediate control and grouping modules into convenient packages.
Thereafter, re-modularisation can take place systematically, by booking out the necessary modules and reconstituting them into new modules as required.
Several attempts at achieving a satisfactory structure may be necessary.
However, once modules are under LIFESPAN control, all subsequent modifications will be recorded in the ‘MODIFICATION-RECORDS-ARE’ section of the module header, providing invaluable help in the development of all future software.
Inevitably there will be some instances where installation in LIFESPAN is required urgently.
In this case, no time can even be spared to create full module headers.
It is recommended that skeleton headers be mass-produced, specifying only the module name, issue number and type, and those modules be entered into LIFESPAN.
This will provide the basic framework for the necessary software re-organisation at a later stage.
Access to Modules — The User Hierarchy
Whenever a module is created in LIFESPAN it is assigned to a module manager, who remains responsible for it as long as it exists (or until another user is assigned to the module).
The module manager always has access privileges to the module, and in addition, he is ultimately responsible for its modification as part of a Design Change (DC), its storage off-line and eventual deletion.
To allow other users access to modules, LIFESPAN provides a facility for setting up a hierarchy of users.
In many respects similar to family trees, hierarchies can be set up with ‘parents’ and ‘descendants’.
In terms of LIFESPAN privileges, a parent may assign equal or lower privileges to his immediate descendants.
For example, the ability to create new users is a privilege which, if granted by a parent to a descendant, allows that descendant to create other new users.
In terms of access to modules, the user hierarchy should be made to reflect the project or organisational structure in operation, since only members of the same branch of a family automatically have access to each other 's software.
Consider the following examples.
Figure 2.2 reflects an organisation without a strict hierarchy where everyone is working quite independently.
Modules produced by Frank, if protected by password, can only be accessed by Frank himself and the LIFESPAN manager (who is always at the top of all user hierarchies).
However, if at some later stage Jane required access to Frank's modules, a special link could be set up, as shown in figure 2.3.
The special link allows Jane access to all of Frank's modules, but not vice versa.
LIFESPAN assumes that the parent of a user is the person to whom information is to be sent if the user is in some way deficient in the activities to be undertaken; e.g. failing to make a DC assessment.
In the above organisation, with only one parent, the LIFESPAN manager would soon become overburdened.
At the other extreme, it is possible to create a very deep tree of users, as in figure 2.4.
In this case, all deficiencies would be notified more sensibly up the tree from user to parent, and so on.
However, it allows all users to access each others modules, since everyone is part of the one family.
While perhaps reasonable for a very small group, it could soon become a ‘free for all’ in a larger organisation.
Generally, an organisational structure will lie somewhere between these two extremes and should be reflected in LIFESPAN.
Figure 2.5 is a typical example.
In this tree Jane and Frank may access each other 's modules, but Frank and Bill may not.
Any deficiencies on the part of Frank or Bill are reported to Jane, who now need not be concerned with Mick, Sally or Joan.
Once again, a special link can be set up across the project teams; in this example allowing Sally to access all of Frank's modules.
Sometimes organisations have two separate hierarchies; one for line management, the other for projects.
However, there is no reason why one person may not be in two (or more) guises within LIFESPAN.
Typically, a project organisation might be set up in which LIFESPAN users are given positions in the hierarchy according to their work and may assume an appropriate pseudonym.
At the same time another hierarchy might be set up for line management.
Refer to figure 2.6.
In this case Sally and Mick are working in two guises.
However, it is strongly recommended that:
two people should never share a LIFESPAN user name
each person should have as many LIFESPAN user names as are required to keep the activities separate.
Summary
When setting up a user hierarchy within LIFESPAN, it is advisable to bear in mind the following points:
Reflect as closely as possible the normal reporting structure of the organisation.
If necessary, create a separate project-oriented reporting hierarchy.
Do not allow two people to use the same LIFESPAN user name.
Set up special links only as necessary and cancel them as soon as they have served their purpose.
LIFESPAN PACKAGES
Definition
LIFESPAN packages form the basis of software control in LIFESPAN.
Each module can only be entered, modified and approved in the context of a package.
However, a module may be a member of any number of different packages.
The formal definition is: A LIFESPAN package is a set of LIFESPAN modules which are controlled as a single unit for the lifetime of the package.
It is represented in LIFESPAN by:
a LIFESPAN module of type PACKAGE 
a set membership within the PACKAGE module specified by MODULE-RELATIONS with the stem CONTAINS .
This set may include other packages, i.e. also ‘CONTAINS’ modules of type PACKAGE.
Packages are LIFESPAN's way of controlling the links between its users and the modules stored in LIFESPAN.
Modules are grouped into packages by links which vary according to the particular requirements of the project.
Some of the same modules may also belong to other packages, in combination with different modules.
Modules of Type PACKAGE
The most important aspect of the package definition is the fact that a package is a type of module.
As defined in Section 2, there are three types of module accepted in LIFESPAN, one of which is PACKAGE.
A subset of this module type is known as a PRODUCT package as it is a package intended for issue as a product.
A module of type ‘PACKAGE’ is essentially a module header, created by LIFESPAN when the name is reserved.
At this stage it is a skeleton header with a version number of 00.00Z and a bare minimum of information in the other fields.
The user must enter all the other details to fill in the history and description of the package.
In particular, users are recommended to include [PRODUCT]<name of product> under TYPES-AND-NAMES-OF-CONTENTS-ARE for packages intended for issue.
However, there is one part of the package header which differs from other module headers — Module Relations.
Module Relations
For packages, this section is used primarily to specify the modules which are ‘contained’ in the package, i.e. set membership.
It lists the modules in the form:
where ‘User Procedure’ is the name of the module and ‘usproc.crl’is the file name used when the module is transferred to or from the user's account.
The information provided here must be accurate, as the relationship of the package to such modules is tight coupling.
There are two reasons for this:
If the user has the authority to do so, modules may be entered into LIFESPAN after including them in the module header of a package and instructing LIFESPAN to enter them.
None of the modules specified by CONTAINS-SOURCE-OF can be removed from magnetic storage as long as the package exists in magnetic form.
Also included in Module Relations is the package module itself and its corresponding file name, to ensure that package operations are consistent; i.e. so that the module header of the package can be updated, along with any text contained in the body of the module.
The package module must contain itself as a SELECTED version, and the issue number must match the last entry in the MODIFICATION-RECORDS-ARE field.
It is recommended, though not compulsory, that the package module should be the first entry in the Module Relations section, so that it is easy to find and update.
Relationships with Other Packages
Set membership of a package need not comprise only source modules and the package module itself; other packages may also be specified.
This provides the framework for establishing strong links between large amounts of inter-dependent software, without the need to list too many individual modules.
Setting Up a Package
The following paragraphs describe the sequence of steps to follow when setting up a package.
The instructions on how to use LIFESPAN for these steps can be found in the ‘Reference Guide to LIFESPAN’.
Reserve module names for the package and the new modules which it is to contain.
Take note of the DC identifiers that LIFESPAN has supplied for the package and the new modules.
When a package module is created, the user must also supply a file name, so that the skeleton package can be created properly, with the correct file name for the package.
LIFESPAN then creates a skeleton module header for it, containing (amongst other things):
the package module name
the issue number (00.00Z)
the user name and date
the package name again, together with the specified file name, in the ‘MODULE-RELATIONS-ARE’ section (a package always contains itself).
Activate the DCs via the package name reserved above.
Transfer the package out of LIFESPAN.
By reading the package from LIFESPAN, the package module is transferred to the user's account, into the file name specified when it was created.
The user must now edit the module header to include all the other modules which the package is to contain and to replace the dummy entries which were added to the header as defaults by LIFESPAN.
If the package is to contain new modules, their names must be added to the ‘MODULE-RELATIONS-ARE’ section in the form:
If the package is to contain modules which already exist, then each one must be specified in one of the following ways:
The user may make other additions to the module header, including the description, references etc.
The issue number of the package module and the Modification Record must be updated from 00.00Z.
Enter the package into LIFESPAN.
The package module can now be entered into LIFESPAN again.
When this is done, the LIFESPAN display of the package contents will show the constituent modules (even though the new ones exist in name only at this point).
Enter the new modules into LIFESPAN.
If all the new modules are marked for entry, LIFESPAN will scan all the new module headers.
Provided that they contain no errors, the modules are then transferred from the user's account into LIFESPAN.
Note that all the files to be included as part of a FOREIGN module must be on the user's account before it can be entered.
The scanner checks this.
Once all the modules have been entered, the package is then established.
Package Control
At the start of this section it was stated that packages form the basis of software control in LIFESPAN.
This statement can now be amplified by examining the control of three of the most important LIFESPAN activities; user access, Design Changes and software approval.
User Access
All user access to modules is based on packages and is subject to the rigorous security checks built into LIFESPAN.
A user can only enter or retrieve a module, or collection of modules, by reference to a LIFESPAN package which contains them and to which the user has appropriate access privileges.
For all modules a user can only enter a new module or access an existing module by quoting a package that has that module name already in its Module Relations ‘CONTAINS’ list, and via which the user has the authority to modify that module.
It should be noted that each time a module is transferred from LIFESPAN, it is copied to the account from which LIFESPAN is currently being accessed.
Likewise, modules are entered into LIFESPAN from this account.
Therefore, while the user is moving in and out of various accounts in the course of normal work, LIFESPAN can be accessed at any time from any account which contains the relevant modules.
Design Changes
Software modification is also controlled by packages.
When a Design Change is proposed, all the modules which are to be modified must be referenced as such by the DC.
After the DC is agreed, a user may attach the DC to a package.
If the modules to be modified are not currently in a single package the user must do one of the following:
create a new package for the DC, by including these modules together with any other modules needed to test the modified modules
modify an existing package to contain all modules.
All the proposed software modifications take place by reading the modules out of LIFESPAN by way of this package and entering successive ‘development’ versions into the package.
There is no restriction on the number of development versions of modules which can be entered into LIFESPAN in this manner.
Software Approval
Modules can only be approved via a package, not individually.
Once modifications are complete and the approver registers his approval of the package, LIFESPAN then automatically confers approval on every module in that package for which approval is sought.
It does this by adding an ‘APPROVED-BY’ record to the module header, under ‘MODIFICATION-RECORDS-ARE’, along with the initials of the approver, the date and any caveat supplied by the approver.
A new issue number is also added to signify an approved version; e.g. version 01.02C is approved as 01.02.
This issue number control of modules lies at the heart of LIFESPAN and offers the framework for a highly reliable basic level of software management.
REPORTING DEFICIENCIES
Definition
LIFESPAN recognises two types of report which are used to record information about the past, current and future states of one or more modules:
A Software Performance Report (SPR)is used by anyone, even if they are not a LIFESPAN user, to report suspected or real faults and failures, suggestions, observations or any other comments pertinent to modules stored in LIFESPAN.
A Software Status Report (SSR)is used by any LIFESPAN user to provide information to other users about one or more modules in LIFESPAN.
An SSR is used to reply to an SPR, but it can also be used simply as a means of disseminating information about one or more modules, in which case it need not refer to an SPR.
Software Performance Reports
An SPR consists of:
a unique identifier
a title
details of the user from whom the SPR originated (e.g. name, address)
a description, either self-contained or referencing other paperwork which provides further information
references to issues and module versions affected by the report.
An SPR may either be generated by a user entirely within LIFESPAN or be received from an external client in paper form and subsequently transcribed into LIFESPAN.
It is advisable for each group of LIFESPAN users to set up a software performance reporting mechanism pertinent to their own environment, based on a pre-printed form which gathers information from the originators.
The forms, known as Paper SPRs,must each have a unique identifier stamped on them.
This identifier will be used as their LIFESPAN identifier when they are entered into LIFESPAN.
The user can reserve the identifiers allocated to paper SPRs within LIFESPAN by editing the keyword PAPER_RANGES in the configuration file to include the required range.
Any SPR identifiers allocated by LIFESPAN are guaranteed not to clash with LIFESPAN identifiers reserved for paper SPRs.
Great care must be taken when printing SPR forms that each identifier is unique and has been reserved, as LIFESPAN will not accept paper SPRs with unreserved identifiers.
As the people from whom paper SPRs originate may range from software developers with an intimate knowledge of the software to users with only a rudimentary understanding of computers, it is advisable to route incoming SPRs through a single responsible authority, or one per project, associated with the LIFESPAN manager.
This authority would not make changes to the software, but would be responsible for pursuing the SPR to a satisfactory conclusion.
The first task is to enter the SPR, or a summary of it, into LIFESPAN.
It is best if the actual words written by the originator can be used, but if they are too extensive the paper copy should be filed under its SPR identifier, and a summary indicating that the full report exists in paper form should be entered into LIFESPAN.
It is best not to rely entirely on the paper copy since continual cross-referencing is tedious.
As much detail as possible should be entered into LIFESPAN.
LIFESPAN treats SPRs as objects to which some sort of response must be made.
Generally they are the result of a user finding a deficiency or making a suggestion, and it is therefore important to keep track of whether appropriate action has been taken.
In order to do this, LIFESPAN defines a series of states through which an SPR progresses:
Cr — Created:The SPR is in the process of being entered into LIFESPAN and may be modified by the user creating it.
The SPR can be viewed by all users, but no response is required to it yet.
O — Outstanding:All details of the SPR have been entered and the SPR has been submitted for distribution to affected users.
A user has been allocated responsibility for replying to it but no SSR has been sent in response to the SPR.
The originator of the SPR still has no indication of what to do to avoid or correct the problem.
R — Replied to:An SSR has been generated in response to the SPR and the user who entered it has been informed, but the problem is not yet fully resolved.
The SSR will have re-stated the problem and possibly suggested some temporary avoiding action.
C — Closed:The contents of the SPR have now been acted upon and the problem has either been fixed, or cleared for some other reason, for example the problem did not really exist at all, or there was a misunderstanding on the part of the originator.
Details of SPRs can be produced in various ways to determine which SPRs are not being ‘replied to’ or ‘closed’within a reasonable time period.
These details can be viewed or transferred to a file for subsequent printing.
Once an SPR has been submitted, all users who may be affected by it are informed, via the mail system, of its existence.
It is often difficult to determine whether the SPR is reporting a failure in the software, a misunderstanding, or a failure in delivered instructions.
It is very likely that the original SPR:
will be inaccurate
will only describe the effect of the problem and not its cause
will not interpret the visible effects to cover all possible causes and occasions of the problem.
It is therefore not usually appropriate for the original SPR to be circulated widely before considerable interpretation of it has been made.
The users deemed to be affected by an SPR are:
the managers of the product packages associated with any issues referenced by the SPR
the managers of all modules referenced by the SPR
the managers of the packages containing referenced modules.
Although these managers are not expected to take any responsibility for it, this does mean that notification of a failure in a module is passed through the LIFESPAN system, and individual managers can decide what impact the reported failure has on their modules and packages.
As well as informing users of the receipt and content of an SPR, a LIFESPAN user must be nominated to pursue the SPR.
As it is often difficult for users to give accurate references to the area of software to which their report applies, the nominated user depends on any software issues or modules referenced by the SPR.
If the originator has provided some issue identifiers in the SPR, it is sent to the manager of the package associated with the first valid issue referenced.
If no valid issues are mentioned, the SPR is sent to the manager of the first module referenced.
If the SPR does not reference any modules, it is automatically sent to the LIFESPAN manager.
A user who has been nominated to pursue the SPR should either:
decide whether the report is sensible, relevant and accurate, and generate an appropriate response in the form of an SSR, or
pass the SPR on to a different, more appropriate user who will answer it.
To a certain extent, this mechanism allows users to shift responsibility for SPRs onto other users, but as users who receive SPRs are informed of the sender, it is easy to identify those who do so.
An SPR may only be passed on a limited number of times; once this limit has been reached a user must be forced, by a privileged user, to accept the SPR.
The ‘force’ facility may be used as often as required, for example, to re-assign responsibility if the recipient of a previously forced SPR does not wish to take resposibility for it, or a user has accepted responsibility and has then passed it on to someone else.
After the SPR has been submitted, it is still possible to add modules to the original SPR and also to extend the range of versions of a module specified by the SPR.
For example, in a large system it is unlikely that the originator will be able immediately to pinpoint the modules which are the root cause of the problem.
It is more likely that a high-level package will be identified initially, and then after some investigation this will be refined to one or more lower level packages.
Note, however, that you can only add a maximum of 10 modules to any one SPR.
Additional modules and new versions may only be added by the user responsible for the SPR.
Such modules may not subsequently be deleted from the SPR.
If an error is made this should be made clear via an SSR replying to the SPR.
The managers of any newly referenced modules and any packages containing them are notified of the SPR.
During the refinement stage, it may be found that the wording of the SPR is inappropriate and does not describe the failure in detail.
In this case a new SPR should be generated, based on the old one but with further details added; the old SPR may be ‘closed’ via an SSR.
Once the refining process is complete, the user who has accepted responsibility for the SPR must choose one of the following courses of action:
re-state the failure by way of an SSR, suggesting some sort of avoiding action or solution, but leaving the SPR in a ‘Replied to’ state until the problem has been fixed.
dismiss the SPR as inappropriate, wrong or incomprehensible, producing an SSR which ‘closes off’ the SPR without doing anything to modify the items reported on.
In the former case, it is likely that a Design Change will be raised to authorise work to be carried out to fix the reported problem.
This means that the SPR is left in the ‘Replied to’ state until the authorised work has been completed, at which time an SSR should be generated to close off the SPR and inform users of the change.
In the latter case, this is the end of the cycle.
Software Status Reports
An SSR consists of:
a unique identifier
a title
details of the user originating the SSR (e.g. name, address)
a description, either self-contained or referencing other paperwork providing further information
references to module versions affected by the report
details of any SPRs to which the SSR responds and whether it closes these SPRs or just replies to them.
An SSR is always generated by a user entirely within LIFESPAN.
Its identifier is allocated automatically by LIFESPAN on creation.
As with SPRs it may not always be possible to enter a complete description of the report into LIFESPAN although it is advisable.
It is recommended that a complex SSR is split into a number of smaller SSRs, each addressing a single point so that all the details may be retained by LIFESPAN.
If, however, the description is still too extensive, a summary should be entered into LIFESPAN noting that further documentation exists which fully specifies the report.
This documentation should be filed under the SSR identifier.
In a similar manner to the procedure for SPRs, once an SSR has been fully entered into LIFESPAN it should be submitted for distribution to all affected users.
In order to ensure that users are not flooded with badly described and inappropriate SSRs, SSR submission is a privileged facility.
It is recommended that a number of privileged users are set up to reflect the LIFESPAN user hierarchy, for example one per project using LIFESPAN.
These users would be responsible for checking any SSRs generated for their project and only submitting them once they were satisfied that they correctly and adequately reported the status of an area of software.
Users defined to be affected by an SSR are:
the LIFESPAN users who submitted referenced SPRs
the managers of all modules referenced by the SSR
the managers of the packages containing referenced modules.
These users are notified of the SSR via the mail system.
If an SSR responds to an SPR which originated from an external client, then it is the responsibility of the LIFESPAN user who submitted the SPR in LIFESPAN to arrange for a copy of the SSR to be sent to the client.
If there is any further documentation referenced by the SSR then this must also be sent.
It is important that users of LIFESPAN packages are kept as up to date as possible with the current status of those packages.
In order to propagate this knowledge, whenever a module is referenced by an SSR the managers of all packages containing the module are asked to consider whether:
the SSR applies to the package and whether it would be understandable to users of the package.
If so, then the package is added to the SSR.
the SSR applies, but the wording would be too obscure for users: a new SSR should be sent, paraphrasing the original to make it clear how it applies to the content of the package.
the SSR does not apply: no action is required.
This process, referred to as Endorsement , is repeated up the tree of packages until it is decided that the SSR no longer applies.
This ensures that all affected users are notified of problems, and can take the necessary steps to correct any problems with individual modules.
When asked to endorse an SSR, managers are informed whether the package is intended for eventual issue as a product, so that they know if an SSR is liable to be sent to clients or if it is purely internal.
The speed at which SSRs are propagated within LIFESPAN depends entirely on the speed of responses to endorsement requests.
Whenever a package is issued as a product, all SSRs which reference the version of the package being issued must be distributed with the product.
To ease this distribution a facility for listing appropriate SSRs is provided.
If further SSRs are written referencing the product once the issue is complete, then these should be distributed to all clients who have received the product.
Package modules are added to SSRs by LIFESPAN as a result of endorsement.
Modules of any type may also be added to an SSR, after it has been submitted, by its submitter and the range of module versions to which an SSR refers may be extended.
This will normally be due to a later version of a module being created which contains the same problem as one previously reported, or the realisation that a module which is a variation of another contains the same problem as its variant.
It is recommended that the number of modules referred to by an SSR are kept to a minimum: it is unlikely that one report can adequately describe the status of many modules.
If the same fault is found in more than one module then it is probable that its consequences and any avoidance action will be different for each module and one SSR should be raised to address each individual area.
An SPR may report a fault which has previously been reported and replied to via an SSR.
Instead of creating another SSR to reply to the new SPR, it is possible in this case to add the SPR to the SSR which already responds to the problem.
However, modules and SPRs may not be deleted from an SSR once the SSR has been submitted.
If a mistake has been made then new SPRs and SSRs should be generated as necessary to correctly define the status of the affected modules.
For example, if an SSR incorrectly refers to an SPR and closes it, then it will be necessary to create a new SPR based on the old one and also a new SSR which correctly responds to that SPR.
If an SSR incorrectly refers to a module then a new SSR should be generated.
This should be based on the first SSR but should reference the correct module, or all the modules on the SSR.
Also, an SSR based on the first SSR should be generated without reference to the offending module and stating that it supersedes the first.
It should be noted that whenever a new module or SPR is added to an SSR, further distribution of the SSR takes place via the new relationship.
SPRs, SSRs and Module Versions
Unlike Design Changes, SPRs and SSRs are related to specific versions of a module and not to a module name.
Distribution, however, takes place via module names.
For example, if a package contains a particular module, regardless of version, then its manager is informed of all SPRs and SSRs which are submitted and which reference the module.
If a module is modified without correcting a known fault then, theoretically, the SPR reporting the fault and any responding SSRs should be updated to reference the new version of the module.
It is recognised, however, that this would be an extremely laborious task and unlikely to be fulfilled.
As distribution is on a module name basis, the addition of a new version causes no further distribution.
So, although it is good practice to do so, it is not normally essential to add new module versions to SPRs and SSRs.
There is one important exception to this which is related to the approval process.
Whenever a package is being approved, the approver is presented with a list of all SPRs and SSRs which apply to the modules in the package in order to judge the quality of the package.
These SPRs and SSRs are defined to be:
all non-closed SPRs referring to all the modules in the package being approved (not just those which specifically apply to the versions being approved)
those SSRs which reference each of the SPRs listed above, presented as a list of identifiers
all SSRs which apply to the approved versions selected by the package of any modules which are not being approved
all SSRs which apply to the latest version of the modules being approved.
To be able to assess and verify the current status of the software which is approved, the approver must be aware of which SSRs will still apply to the package and its contents once approval is granted.
To achieve this a user can reference the next approved version of a module in anticipation of that module's approval.
All SSRs which will still apply to a module once it is approved should reference the anticipated approval version of that module.
If an SSR refers to a number of modules but will only be applicable to some of them after approval, then a new SSR should be created referencing only those modules to which the report still applies.
The module versions specified in the SSR must include the anticipated approved versions.
Common Problems
A common situation which creates problems is the use of a single report to identify a large number of failures, or to mix a number of failures in with a variety of suggestions.
This effectively nullifies the use of the ‘upwards reporting’ of SPRs and SSRs, since it makes it difficult for the recipients to see the extent of the problem.
Users are strongly recommended to report only one failure or suggestion on a single SPR, however, if they do not, the solution is to create a number of new SPRs to handle the topics individually.
A single SSR can then be used to close off the original SPR when the originator is satisfied that all useful information has been extracted and transferred onto the new SPRs.
Occasionally, responsibility within the SPR system is shifted from user to user without any action being taken.
LIFESPAN itself cannot identify the reasons why this should be so, since under some circumstances the identification of faults can be quite difficult.
If this situation occurs for the majority of SPRs, it is important to examine the organisation of the various teams and groups of users.
This problem is often associated with a lack of clear guidance as to who is responsible for a particular software area, rather than any mischievous intent on behalf of the recipients.
CHANGING MODULES
Terminology
In order to modify one or more modules which constitute a baseline, a package is required which:
contains the modules to be changed.
has attached to it one or more Design Changes (DCs) which refer to the modules to be changed and which have been agreed by all the other module managers likely to be affected.
Different organisations may refer to DCs by other names; for example, Engineering Change Proposals, Program Maintenance and Change Requests.
Their operation, however, is very similar to (and modelled on) conventional change control procedures.
In order to prevent LIFESPAN from being specific to an organisation, the term Design Change (DC)was chosen.
A further possible area of confusion is the terminology associated with quality assurance.
This activity is variously known as ‘Quality Control’, ‘Quality Assessment’ or simply Approval and Checking.
LIFESPAN always uses the term Quality Assurance (QA)to mean the act of assessing something for its fitness for a specified purpose.
A DC goes through a variety of states from its creation to final approval as indicated by the list below.
CRE — being created:Only the originator is aware of the contents of the DC.
The originator may alter the contents of the DC any number of times while in this state.
PRO — proposed:Other users likely to be affected by the change have been shown the DC and may agree or reject it, with an optional comment.
The originator can no longer alter the contents of the DC.
AGR — agreed:All affected users have agreed that the DC is acceptable.
REJ — rejected:One or more users has rejected the DC.
The proposed changes must be re-considered.
ABO — cancelled:For some reason, it has been decided not to proceed with the DC.
ACT — active:The DC is currently active on a package.
This allows the modules to be modified by the authorised user.
IAP — being approved:Work is complete and the results are being subjected to quality approval.
APD — approved:The modified modules have been accepted as embodying the DC.
Changes to New Modules
In order to make the modification of modules consistent, DCs are automatically generated as ‘Agreed’ DCs for all new module names which are created in a single transaction with LIFESPAN.
These DCs can be activated immediately to allow work to proceed.
The Overall Cycle
The cycle of modification starting from one agreed baseline and ending at another agreed baseline will be used to explain the operation of DCs.
It is assumed that the modification cycle goes quite smoothly, that the modifier is available throughout to do the work, and that the assessors are reasonable.
Passing reference will also be made to Software Performance Reports and Software Status Reports, although their link with DCs within LIFESPAN is tenuous.
As an example, let us assume that a package exists and that some of the constituent modules are also contained in other packages which have different managers.
To complicate the situation, let us assume that the package under consideration is itself called up from a higher package with a different manager.
During the use of the package, several customers have reported faults by means of SPRs, and have requested different facilities.
The SPRs were investigated as they arrived, and one or more answering SSRs has been completed and returned to the originators of the SPRs, as well as to other users where appropriate.
In the course of this work, the investigator identified the location of two faults and thought out suitable modifications to the code, although there was no directive to apply the modifications immediately.
In order not to forget the solution, two DCs were proposed, referring to the modules which would need to be modified.
One of the modules was also contained in a package managed by someone else.
As a result, one of the DCs was submitted for assessment to this person; the other DC was agreed immediately since it affected no other package.
In due course the manager of the affected package responded favourably and as a result both DCs moved to the ‘agreed’ state.
In addition to modifications arising out of SPRs, it was decided to significantly enhance the functionality of the package, which would involve modifying five other modules.
Several of these were also in packages managed by other people and it was realised that two new modules would be required.
One DC was proposed for the existing modules and for the containing package.
(The package would also have to change, both to contain the new modules and, when approved, to refer to the modified modules.)
Later, after various discussions had taken place, and LIFESPAN mail messages had been sent to a manager who had failed to respond, the originator of the latest DC received two agreements and one rejection.
This meant that the proposed modification could not proceed as stated.
The substance of the rejection was that the proposed modifications to one of the modules referenced would not be compatible with future versions of a different product.
The rejection notice attached to the DC suggested that if, instead of modifying one of the public data structures of the module, a new data structure was defined and used, then all would be well.
The originator of the DC therefore created a new DC by copying the old one, applying the suggested modifications and submitting the new DC.
This time all the recipients responded promptly and agreed to the DC.
The person in charge of product development decided to carry out all the modifications simultaneously (although not forced to by LIFESPAN), made a senior programmer the user associated with the DCs and instructed him to activate the DCs on the main package and set to work.
The DCs were attached to the package under the name of the senior programmer, and became ‘active’, thereby allowing the modification to proceed.
A number of modification versions of the modules were entered into LIFESPAN by the authorised user.
(Note that LIFESPAN would allow other users, with the appropriate access rights, to read the modules out, but would prevent them from being re-entered.)
After further work, it became apparent that two other modules, one a test harness, would also have to be modified to complete the work.
As a result, another DC was raised describing those modifications.
In this particular case, no other packages were affected and the DC was agreed immediately and activated on the same package.
Subsequently the modifications were completed and all the modified modules were entered into LIFESPAN, albeit with development codes.
The developer asked for a set of QA listings to assess for himself if the person assigned to QA would approve the package.
Two other modifications to the description resulted which were entered into LIFESPAN, and it was decided to carry out the quality approval.
The package was submitted for approval, and all the DCs moved to a state of ‘being approved’, thereby preventing any further modifications.
The person responsible for QA (who was already known to LIFESPAN and had the necessary privileges for QA work) logged on to LIFESPAN and requested the QA listings as a file into his personal account.
They comprised:
listings of all the modules in the package to be assessed
a list of all the related DC identifiers and their details
a list of all the related SPR and SSR numbers.
The responsibility of the quality approver is to judge fitness for purpose.
To this end, he assessed whether the modifications carried out were in the spirit of the DCs, that the modifications were adequate to cope with the SPRs submitted by clients, and that the quality of the total package satisfied the quoted project standards.
After studying the listings he decided that all the criteria had been met and witnessed a demonstration of the package build and test, entirely from the sources of the modules within LIFESPAN.
Both he and the developer signed off the test record and he allowed all the modules in the package with development versions to be given a fully approved status.
The DCs became ‘approved’, and would be, probably within a few months, candidates for being hard copied.
The cycle of modification was thus completed with approved modules of acceptable quality returned to LIFESPAN.
Other activities to complete the issue of the package would still, of course, remain, but these are not part of the DC cycle.
To highlight the salient points, the following recommendations are made:
Produce DCs as proposed modifications are thought out.
Do not activate them on a package until it is intended to proceed with the work.
Do not necessarily try to get DCs agreed at the first attempt.
LIFESPAN is there to help re-submit requests.
Make the description of the DC as clear as possible, stating why it is being proposed, how it will be implemented and what effect the modification is going to have.
Remember that, if working in a large organisation, then someone might be asked to assess the DC who has no clue as to why the change is being proposed.
Common Problems
LIFESPAN attempts to discipline and regularise the modification of modules.
It must be recognised that, apart from the most minor changes, such modifications are ‘design’ in the widest sense and are therefore subject to the uncertainty of success which accompanies most design work.
By its very nature, therefore, things tend to go wrong; from the original modifier with all the ideas leaving the company, to the clients changing their minds about the facilities required.
The most common request is that everything should be set back the way it was at time X and it should appear as though the work carried out on package Y never happened at all!
In configuration control systems this is an extremely difficult and dangerous thing to do and is the root cause of many manual systems failing.
The reason is that, as work is executed, so the results thereof are assigned identifiers (e.g. module name and version number, DC number), and objects attached.
Many such objects are quickly generated, and copies may be held offline, as security backups, microfiche, etc.
The probability of successful removal of all such objects in a short space of time tends to be very low and, on some types of storage, extremely difficult or impossible.
Therefore, if an attempt is made to erase an object, the easiest and quickest thing to do would be to remove the identifier in LIFESPAN.
Unfortunately this would also allow its immediate re-use, and so there is a possibility that this would cause a different object with the same identifier to be entered into the system.
Such an occurrence guarantees disaster within a configuration control system, which is why identifiers can never be removed from LIFESPAN.
Abandoning Work
All users are asked to adjust to the idea that work, once entered into LIFESPAN, cannot be retracted but must be made harmless in some other way.
In some cases it is easy.
For example, a DC which has been entered but not assessed by everybody can easily be removed by persuading someone to reject it, or by aborting it immediately after it has been agreed.
It will still appear in the hard copy system but will be unavailable for work.
A far more serious problem is when DCs have been activated on a package and some new versions of modules have been re-entered before deciding that they are useless and that the whole modification programme should be abandoned.
The recommended action is:
Abort the original DCs.
Raise a new DC explaining that the modifications are to be abandoned and the old modules re-submitted to QA for a later revision.
Delete any copies of the modules held in personal work accounts.
Retrieve, using the previously approved package, the original approved modules.
Enter a modification record explaining what has happened.
Note that the modification record must have a later issue number than the original modification.
Submit the package for QA in the normal way, generating new versions of the modules, identical in all but modification records.
This might seem onerous but it guarantees that configuration control is maintained and, with some care, should be a very unusual occurrence.
Approval Refused
What happens if the person responsible for QA refuses to approve a package?
In a similar manner to many real-life problems, there is no absolute statement of quality.
LIFESPAN is only a recorder and does not replace negotiations between developers and QA personnel.
In this case, there are three options:
The person assigned to QA agrees to let the package be approved with a caveat saying, for example, ‘for experimental flight trials only’.
The developer carries out more work on the package.
The modifications are abandoned (as above).
Remember that LIFESPAN does not replace normal development procedures.
A paper system should still be used for the retention of signatures on test results, development plans etc.
LIFESPAN does not decide which users are qualified to modify or assess a package for QA; it is up to the management to determine appropriate personnel, timing, quality, and so on.
LIFESPAN will record what has happened and inform other affected personnel so that they can initiate the appropriate action (LIFESPAN assumes an interface with a disciplined and sensible development environment).
Therefore, if the wrong person has been assigned to approve a package and the user who should have done so does not agree to the approval, the following steps must be taken:
Create a DC explaining what has happened.
Generate another version of the module(s) which does satisfy the approver.
Submit the new modules to the correct approver.
Uncertainty over Development Requirements
The overall DC cycle briefly mentioned the problem of not knowing exactly what modifications are needed to which modules when raising a DC.
This is not, in fact, a problem, since LIFESPAN provides the tools for creating other DCs as the need arises and attaching them to the same package.
In the end, it is the responsibility of QA to assess whether the modifications are in the spirit of the DCs being worked upon.
If it is decided that other work must be done (even on the same modules), then it is advisable to propose a DC promptly and obtain agreement before doing the work.
If this is not done, then there is a risk that the person assigned to QA will reject the modifications until the DC which describes the later modifications has been agreed.
Modification Clash
A common problem is a clash between two people modifying modules; that is, one person is unable to activate a DC because it refers to a module which is also part of a DC activated by someone else on another package.
There are a number of choices:
Wait until the other modifier is finished.
Abort the offending DC and raise another minus the module, explaining why.
Raise a DC on the offending module and persuade the other developer to activate that DC on the package being worked on.
Although the above might seem a little onerous, remember that the problem it is addressing, that of parallel modification, is of great importance and the difficulty of trying to cope with parallel modification is reflected in LIFESPAN.
Incomplete Modifications
What happens to partially completed modifications if the developer is no longer available?
The LIFESPAN recommendation is to use another person in the developer's role, using their user name at least until that particular modification is completed.
Obviously, the ability to continue someone else's work is very dependent on how disciplined they have been in identifying work to be done and returning successful work to LIFESPAN.
It is recommended, however, to compare all the modules in the working account with the ones stored in LIFESPAN.
This should show how much of the work has been carried out.
Evil Intent
What can be done about persons of malicious or mischievous intent?
LIFESPAN is unable to determine whether modified modules are sensible or contain character pictures of pin-ups!
It does, however, try to record who entered information to allow LIFESPAN managers and other users to identify the culprit and take appropriate action.
In any case, the original module will still exist, since users are only ever given copies from LIFESPAN to modify.
No system is safe from such tampering and LIFESPAN is no exception.
Passwords should be changed regularly and mail messages regularly read to determine if spurious or malicious mail is being sent.
When you undertake any procedure which causes modules to be moved between locations, a Cyclic Redundancy Check will be performed on each of the modules which have been moved.
This ensures that the modules have not been inadvertently or maliciously tampered with or corrupted and gives you confidence in their integrity.
Advice for Recipients of Requests for Assessment
If you are asked to assess a Design Change, it is because you are manager of one or more of the modules referenced, or manager of a package containing one or more of these modules.
Try to respond as quickly as possible, especially if you are likely to reject the DC, since the developer may (against all advice) have proceeded with the modifications (although unable to enter the modules into LIFESPAN).
When deciding whether to accept or reject the DC, bear in mind that acceptance means that you are agreeing either:
to use the modified modules in any subsequent modifications to your package, or
to generate new modules (with new names and version numbers) from the current versions of the modules in the DC.
If you decide to accept the modification, then you should consider what effect, if any, it has on your package and raise a DC of your own.
If the original modification has only minor effect, then it may be safe to agree it immediately; otherwise, you should wait for the agreement to the DC you have just raised.
Advice for Quality Assurers
Your principal task is to decide whether a package is fit for the purpose intended.
LIFESPAN provides a tool to ensure that you know what you are inspecting, i.e. that no-one can modify the modules you are inspecting.
To this end, it insists that you obtain directly from LIFESPAN the modules which you are to inspect and you must enter your agreement under your own LIFESPAN user name.
In general it is not sufficient to inspect only the results of tests.
You should also be concerned with:
The previously approved package (if any).
The latest versions of the modules in the package to be approved.
The DCs describing the difference between the above.
Any SPRs and SSRs which apply to the modules in the package.
The standards in force.
Witnessing the construction of the object from the modules in the package and its execution under test (if appropriate).
QA activities may not necessarily only be at the end of the implementation phase.
It is worthwhile carrying out QA on packages before major review points such as a critical design review.
The standards acceptable during such an assessment may be considerably different from those required of the final system, so adjust your assessment to the fitness for purpose of the results.
There are several reasons why it is worth carrying out such intermediate reviews:
They constitute a recognisable baseline for the later review.
They reduce the number of development modules which must be maintained in magnetic form.
They provide an identified and secure milestone in the development path.
If you feel concerned that there could be confusion between such an intermediate approval and final approvals, then apply the caveat facility in the approval agreement.
This marks the approval record in each module, with the caveat as part of the modification record.
Long Term Archiving
Unlike modules, DCs are not subject to revision once they have been approved.
Information is only appended to them in the form of agreement comments during their various states.
At the end of their lives they are subject to hard copying, and the only thing which remains on-line is a record of the fact that they existed and the reference into the hard copy system for long term reference.
OFFLINE
Introduction
The offline system is used to reduce the quantity of online magnetic storage allocated to modules inside LIFESPAN, in the directories and devices determined by the charge codes.
Operation of the system by LIFESPAN users such as programmers, who are able to control what is online and what is offline, and by the offline manager who is responsible for the administration of the offline system, is designed to be as automatic and simple as possible.
It is necessary to designate one LIFESPAN user to be responsible for the operation and control of the offline system, since the activities carried out by this person are significantly more complicated than those met by most LIFESPAN users.
Throughout this document this person will be referred to as the Offline Manager and will be the LIFESPAN user who is responsible for entering information such as the number and type of media available for offline storage, and the availability of units for mounting offline media.
The day-to-day running of the offline operations is carried out by the Offline Operator who requires no knowledge of LIFESPAN itself.
In fact, LIFESPAN does not implement a role playing model and the Offline Manager privilege can be given to any LIFESPAN user.
However it is recommended that this privilege should be assigned to one individual in order to avoid any conflict of activity.
Typically the results of an offline operation are returned to the last LIFESPAN user to set an operation in motion so it is possible, for example, that two users could share the workload on alternate months.
What Offline Means to Most Users
Most LIFESPAN users need little knowledge of the offline system.
Their interaction with it is limited to:
Requesting that all the modules in a package are sent offline.
Realising that if any modules which they want to read are offline, then this will result in a delay to all modules requested at the same time while those offline are brought back online.
No modules will be transferred out of LIFESPAN until this has been done.
The Responsibilities of the Offline Manager
It is the responsibility of the offline manager to log on to LIFESPAN and to set up various parameters for the offline run.
These parameters include:
The terminal, known as the operator terminal,which the operator will use to monitor the offline run and to indicate success or failure of requests to mount or dismount the appropriate offline media items.
The start time and duration of the next offline run.
The verification minimum and maximum periods.
Whether Primary, Secondary or Both types of media can be used for the offline run.
Whether Primary and Secondary copies must be split between different types of media.
These terms and the various types of media available are described later in this section under ‘Operation of the Offline System’.
The availability of units and media items.
The types of media in the system.
Additionally, the offline manager must respond to any mail sent regarding failures or unavailability of media items or units.
The Responsibilities of the Offline Operator
The offline operator need not be a LIFESPAN user having a LIFESPAN name.
The offline operator is responsible for mounting and dismounting the offline media and inspecting media items for physical damage.
Background to the Offline System
The goal of offline is to reduce the online storage requirements by means of offline media without risking the integrity of the modules.
Online media items are checked by the nature of their operation; that is, they are generally used on a regular basis and any degradation is noticed immediately.
However, it is much more difficult to ensure that media which are remote from a computer are still intact and safe.
Many failures are caused by operational mishandling and other physical problems associated with the constant mounting and dismounting of media.
Furthermore, some media such as magnetic tapes are subject to storage degradation if they are not regularly used.
Another major area of risk with an offline storage system is encountered during the actual transfer.
For example, if an offline system were designed which destroyed all offline copies when bringing a module back online, then there is a possibility that files could be lost if the system crashes immediately following the restore before the online version had been safely backed up using the normal VMS system back-up procedures.
It is therefore the task of an offline system not only to copy an online file to an offline media of the manager's choosing, but to build in a number of safety checks to take account of the situations described above.
Operation of the Offline System
The operation of the offline system is designed on the assumption that any media used to retain offline files are of the nature of ‘write-once’ media.
This means that:
a particular version of a module is moved from online to offline storage once only, although within the offline system the module may be duplicated and may be moved between media items.
When a module is subsequently brought online it is a non-destructive read from the offline storage.
After an online to offline operation for a particular version of a module, subsequent offline requests simply cause the online copy to be deleted, since the offline system is known to hold a copy already.
it permits the use of storage media such as magnetic tapes and optical disks which are essentially write-once media.
it does not prohibit the use of items such as magnetic disks.
Note that the ‘write-once’ nature of the assumptions does not mean that an item may never be re-used.
As modules are set into ‘hard-copy only’ state, indicating that the offline magnetic copy is no longer required, the system calculates how many modules are still needed on a particular media item.
A mechanism of transferring any remaining useful modules to new media items, releases media items either to be destroyed, in the case of optical disks, or returned to the system as ‘new’ media items, in the case of reusable media items such as magnetic disks.
The offline operations are designed on the assumption that there will not be constant manning of the physical units used to mount the offline media.
The offline process is carried out as a ‘run’ at a specified time and of specified duration, during which period the offline operator must be present to fulfil the demands for mounting and dismounting the offline media.
During normal operation of LIFESPAN, the requests for offlining modules are queued on a first-come-first-served basis.
Offlining then takes place on as many media units as there are available (up to a maximum of six at any one time).
The operation of these media units is fully overlapped.
The operation of the offline system cannot be completely divorced from manual procedures associated with the offline media items.
It is necessary to designate items as primary and secondary storage items.
The offline system ensures that a copy of every module sent offline exists on a primary and a secondary media item before the online copy can be destroyed.
When bringing a module back online, LIFESPAN makes no distinction as to whether recovery is carried out from primary or secondary media items.
It will seek to make maximum use of the units it has been given for offlining.
If all offline media items can be mounted on all offline units, the primary media items will be used.
If a failure occurs when a primary media item is being used, the corresponding secondary media item will be used instead.
When various media types and units are being used, particularly if primary and secondary media items have been forced to different media types, a unit which is only able to handle secondary items will attempt to do so in order to contribute to the workload.
To avoid having both primary and secondary media items mounted simultaneously, it is possible for the offline manager to instruct LIFESPAN not to allow this.
For an installation to be secure against fire, flood and other disasters it is essential for the primary and secondary items to be stored in different locations so that the chances of their simultaneous destruction are minimised.
The offline manager must specify for each media item whether it is to be used for primary or secondary purposes, although there is no absolute requirement to make them of different media types.
For example, if there is a single optical disk emulating a normal disk drive (but write-once only), the offline manager may choose to make the optical disk for primary stores and some other large magnetic disk for secondary stores.
This may result in the offlined modules being stored on a single, immediately available, large optical disk and ten magnetic disks.
In general, all restores would then be carried out from the optical disk, minimising the number of mounts needed for the magnetic media.
Some magnetic mounts could be done in order to fully utilise all available units but with a larger proportion of the work going to the faster unit.
However, there is no underlying reason why two optical disks designated for primary and secondary storage should not be used, except that the offline process is likely to be somewhat slower, since all primary stores would be performed first on the primary media item, followed by a dismount, then a secondary media item would be mounted on the same media unit, followed by all the secondary stores.
The offline system has also been designed to take account of the situation in which units such as magnetic disk drives may not always be available during a particular offline run.
It is therefore the responsibility of the offline manager to allocate particular units for particular purposes although it is the software that actually assigns the devices.
During an offline run a particular unit may become unavailable, either because it is required for some other purpose, or due to physical breakdown.
It is possible for the offline operator to indicate this at the operator terminal when asked to mount a media item on the unit, and no further requests will be made of that unit during that particular offline run.
Verification
LIFESPAN permits the definition of two periods of time associated with the verification cycle of the offline system:
the minimum latency time which is the period during which an offlined module will definitely not be reverified.
a maximum latency period after which time any unverified modules may be the subject of two discrepancy reports, one to the offline manager and the other to the LIFESPAN manager.
In order to maintain the integrity of the offlined files, each file is verified at a rate determined for a particular installation.
Obviously, a very high verification rate (for example, every week) is likely to result in:
A high confidence that the offlined files are secure.
A high probability that media damage will result from mishandling by operators, owing to the number of mounts and dismounts required.
A high offline operator workload.
Conversely, a low verification rate (for example, every two years) will result in:
Little or no confidence in the integrity of the offlined files.
Low probability of damage associated with operator mishandling.
A modest offline operator workload.
If any discrepancy reports are received it will usually mean that insufficient time or resources have been allocated for the offline system to carry out its verification cycle successfully (or those resources are not appropriate to the maximum latency time).
The minimum and maximum periods for verification can only be determined for a particular installation.
It is dependent upon the quality of the operational staff, the importance of the information being offlined and the type of media used.
The recommended guidance for the choice of minimum and maximum latency times is as follows:
the maximum latency should be no greater than that determined by any decay mechanism in the media in use but may be shorter depending upon the arguments above on confidence.
the minimum period should be about one-tenth of the maximum latency period to permit about 10% of the offlined information to be verified during that minimum latency period.
The minimum latency period should be not much less than ten times the period between offline runs.
Notwithstanding the above, considerable variation is permitted as long as the maximum remains reasonably above the minimum (ie. at least twice).
Setting Up Offline
LIFESPAN identifies its offline media by a character string set up in the configuration file.
These must be different for each LIFESPAN system.
The volume identifiers used by LIFESPAN consist of the character string concatenated with the media item number allocated by the offline manager in LIFESPAN.
This volume identifier must be the one used with the VMS INITIALIZE command and must not be changed thereafter.
It must also be clearly visible on the media items since the offline operator is instructed to mount volumes on units using this volume identifier.
When random access media items are being used, the media items must contain a directory which has the same name as the LIFESPAN process directory.
It is recommended that the offline manager introduces new media items when the offline system is not running, since LIFESPAN may attempt to use the media item as soon as it knows about it.
The manager must arrange to have the items initialised with appropriate volume identifiers.
Running More Than One Offline System
If more than one LIFESPAN system is running simultaneously on a computer it will be necessary for each one to operate its own independent offline system using different media items.
Furthermore, if both LIFESPANs are instructed to use the same units simultaneously, they will compete for access to those units (on a first-come first-served basis).
This may lead to confusion so unless it is critical to maximise the use of an operator it is recommended that the offline runs are scheduled at different times.
For more information on the Offline System, the reader is referred to the ‘Operations Guide to LIFESPAN’.
PRODUCTS
Introduction
A LIFESPAN package is a set of modules which are controlled as a single unit throughout their lifetime.
There are, however, two uses to which a package can be put:
it can be used in-house for development and testing.
at some future date it can be released internally or to an external client.
In this case, the package has an additional reference attached to it and the whole article is known as a Product.
When the package is released as a product in this way it is known as an Issue of the software.
A package is always created in the same way by reserving its name using Option 1.1.1.
However, if it is known that in the future the package will be issued as a product, this must be indicated to LIFESPAN at the time of creation.
A package cannot be issued as a finished product if this is not done, and it cannot be converted into a product at a later stage.
The indication that the package will be issued as a product serves a useful function for Quality Assurance, as more stringent quality checks can be performed if it is known that the package is intended for issue.
Products
Usually the product package is created for use when software development is completed and the software is ready for issue.
A package to contain the issue software is created, and when the package itself is ready, a Product is created.
A product is not a module and does not contain the package.
It acts merely as an easily identified and meaningful reference to the version of the package which is to be issued.
In order to create a product the user must supply a title for it and LIFESPAN allocates an identifier to it.
It must then be updated in order to associate it with the name and issue number of the product package for which it is to provide a reference.
It is recommended that this is an approved version, although a development version may be used if necessary.
Finally, the product is registered which means that its details will be stored permanently and cannot be altered afterwards.
Clients
The client who receives the product can be any external source buying the software, or an in-house party.
The Client is created in the same way as a product, with the user supplying a title for it and LIFESPAN allocating an identifier to it.
It must then be updated to provide further details such as the clients's name and address and the name of a general contact within the organisation.
Issues
As the product can be released many times to different clients, on each release of the product to a specific client an Issue is created, to act as a cross-reference delineating the relationship between the product and the client.
It also provides a record of the order, despatch and maintenance contract dates of the issued product.
The name of a person within the client organisation may be supplied to act as a specific contact for any queries regarding the issue of the product.
This creates a personal link between those issuing and those receiving the product, and makes it clear to those issuing the product who is responsible for it once it has been received by the client.
Unlike products and clients, an issue is created by the user supplying a unique identifier for it; this acts as a further reference to the product.
The client receives this reference which is used in Software Performance Reports, marketing support and as the unique reference for software issued within a project or organisation.
At the same time, the details of the product and client with which it is associated are entered, together with the order, despatch and maintenance contract dates.
The issue can be created after the actual product has been despatched; the issue can also be updated prior to despatch in order to associate a different product or client with the issue.
However, once the issue has been despatched, only the order, despatch and maintenance contract dates can be updated.
EXAMPLE MODULE HEADERS
The following example module headers are intended to provide some guidelines on how the various fields might be filled in.
The five examples are of module headers for a package module, a source file, a command file, a text file and a foreign module.
MODULE HEADER DEFINITION
This section defines the structure of a module header, and an example is shown in figure B.1.
A module header consists of keywords and user-supplied entries.
The following information specifies all the keywords of a module header, and the required and optional user-supplied information.
The following points should be noted:
The order of the initial keywords in the header is fixed.
It corresponds to the order in which they are described, otherwise the module header will not scan.
All the initial keywords are compulsory with the exception of FOREIGN-SET-IS which must be omitted if the module type is not foreign.
However, within entries, certain other keywords and some user-supplied information can be omitted.
This is indicated in the following definition.
All user-supplied information must be included in square brackets, except the entry under DESCRIPTION-LINES-ARE.
For those entries indicated, hyphen signs may also be used immediately after closing square brackets to indicate continuation of the same entry on the next line.
Blank lines must not be inserted between keywords.
Keywords are not included in square brackets and must be upper case.
They should not be used as part of the user-supplied entries (e.g. in comment fields).
The module header may start at any position on the line.
The start is denoted by the keyword HEADER-FORMAT-IS.
Thereafter, however, all subsequent initial keywords must start at the same position in the line as HEADER-FORMAT-IS.
Certain initial keywords have corresponding closing keywords; e.g. END-OF-CLASSIFICATIONS.
These are compulsory.
Each user-supplied entry line (except for the keywords HEADER-FORMAT-IS, MODULE-TYPE-IS, MODULE-NAME-IS, TITLE-IS, and DESCRIPTION-LINES-ARE) must be indented by at least two spaces from the initial keyword position, but there is no restriction on the position of other fields within the same entry.
HEADER-FORMAT-IS
Denotes the issue number of the header format of the module.
An entry here is compulsory.
The recommended version of the header format for a LIFESPAN release is indicated on the log on form.
one or two-digit version number
the ‘.’
character
one or two-digit edition number
e.g. [2.4]
MODULE-TYPE-IS
One of a restricted set.
An entry here is compulsory.
There are three types:
PACKAGE
SOURCE
FOREIGN
PMODEL
e.g. [PACKAGE]
MODULE-SUB-TYPE-IS
The subtype of the module.
This is user definable and determines which process model the module is to follow.
Up to 28 alphanumeric characters are allowed.
An entry here is NOT compulsory.
e.g. [PASCALSOURCE]
MODULE-NAME-IS
The unique name of the module.
An entry here is compulsory.
Minimum length is one character, and maximum length is 28 characters.
These must either be upper case alphanumeric characters, spaces or one of the characters ‘.’,
‘$’, ‘—’, ‘-’, or ‘!’.
Spaces are included in the count of name length but are, otherwise, insignificant and will be removed during referencing.
e.g. [LIFESPAN-MANUAL-PACK]
TITLE-IS
A brief description of the module.
An entry here is compulsory.
Minimum length is one character and maximum length is 52 characters.
These may only be printable ASCII characters, including space and tab.
e.g. [MANUALS FOR LIFESPAN]
MODIFICATION-RECORDS-ARE
Contains a recent history of the module, with the most recent version of the module shown first.
There must be at least one entry, but there is no upper limit to the number of entries.
However, only the latest 30 are significant.
As the entries may not necessarily fit on one physical line, they may be continued by following any closing square bracket with a minus sign (as shown in the example).
Each entry must have the same format, as follows:
There are three compulsory fields in each entry with standard keywords which must be supplied, and up to two optional fields.
The compulsory fields are:
ISSUE keyword plus the appropriate issue number:
one or two-digit version number
the ‘.’
character
one or two-digit edition number
an optional development code, which, if used, is an upper case A to Z character
History keyword which must be one of:
MOD-BY
APPROVED-BY
CHECKED-BY
CREATED-BY
followed by a field of up to 12 upper case alphanumeric characters defining the creator, modifier, checker or approver of the module.
ON keyword followed by the date, supplied in the format: dd-MMM-yyyy where
dd is a one or two-digit day
MMM is a three-character upper case abbreviation of the month (JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC)
yyyy is a four-digit year specification e.g. 31-JAN-1990, 24-DEC-1999, etc.
Note that the date must not be later than the system date when the module is next scanned or entered into LIFESPAN.
Following the date field there are three optional fields.
The keywords are:
COMMENT — Up to 48 printable characters.
This field may be repeated as many times as necessary.
FOR-JOB — Up to 48 printable characters.
This field may be repeated as many times as necessary
IN-PACKAGE — Module name.
Each of these may be entered on its own, and in addition, the following combinations are allowed:
CLASSIFICATIONS-ARE
Up to three entries are allowed but are not compulsory.
If supplied, each entry must be divided into two parts, the first of which must contain one of the following keywords:
DESCRIPTION-IS
CODE-IS
BINARY-IS
The second part must contain a classification code of maximum length 40 printable characters, including spaces.
e.g. DESCRIPTION-IS [UNCLASSIFIED]
TYPES-AND-NAMES-OF-CONTENTS-ARE
Up to 70 entries are allowed but are not compulsory.
If supplied, each entry must consist of two parts.
The first part must be a Type of up to 24 printable characters, including spaces.
The second part must contain the item name.
Up to 28 printable characters are allowed, including spaces.
e.g. [PROCEDURE][STRANALYSEDESC]
DESCRIPTION-LINES-ARE
There is no restriction on the format and number of lines which may be included under this heading.
They need not be contained within square brackets.
Blank lines may be included.
ERRORS-REPORTED-ARE
Up to 10 entries are allowed but are not compulsory.
If supplied, each entry may contain up to 100 printable characters, including spaces.
e.g. [Overflow error on string size reported using ERREP]
CODING-DETAILS-ARE
Up to 12 entries are allowed but are not compulsory.
If supplied, each entry must be divided into two parts, the first of which must contain one of the following keywords:
LANGUAGE-IS
CODE-CHARACTERISTIC
IS-DEPENDENT-ON
The second part provides information about these keywords, and can be up to 100 printable characters long, including spaces.
e.g. LANGUAGE-IS [CORAL 66]
REFERENCES-ARE
Up to 10 entries are allowed but are not compulsory.
If supplied, each entry may contain up to 100 printable characters, including spaces.
e.g. [VAX 11 Run time library reference manual]
TEST-STATUS-ARE
Up to 15 entries are allowed but are not compulsory.
If supplied, each entry must be divided as follows:
ENVIRONMENT — description of the environment.
Maximum of 24 printable characters, including spaces.
STATUS — a test status code.
Maximum of 20 printable characters.
ON — date of testing.
The same format as the MODIFICATION-RECORDS-ARE date.
It must not be later than the system date when the module is next scanned or entered into LIFESPAN.
e.g. ENVIRONMENT[VAX/VMS] STATUS[UNTESTED] ON[24-FEB-1990]
MODULE-RELATIONS-ARE
This part of the header describes all the modules which are related in some way to this specifying module; up to 70 records are allowed but are not compulsory.
There are two classes of relationships; loose coupling and tight coupling.
Note that continuation lines may be indicated by entering a hyphen sign after any of the closing square brackets.
Loose coupling relations do not refer to a specific version of a module — only to its name.
However, it is possible to indicate the last known checked version of the module, for user information only.
If used, this is done by adding LAST-CHECKED-ISSUE [issue number]to any of the loose coupling keywords, which are as follows:
BUILT-BY [module name]
REQUIRES-SOURCE-OF [module name]
IS-TESTED-BY [module name]
IS-DESCRIBED-BY [module name]
REQUIRES-BINARY-OF [module name]
VARIANT-OF [module name]e.g. IS-TESTED-BY [INTERFACETEST3]LAST-CHECKED-ISSUE [2.1]
Tight coupling relations may only be used in a package module.
They must always refer to PREFERRED, LATEST or SELECTED versions of the referenced module.
To specify modules which are part of a package and which are to be transferred from LIFESPAN to the user's account, the following relationships must be used:
CONTAINS-SOURCE-OF [module name]
CONTAINS-BINARY-OF [module name]
followed by one of:
SELECTED-ISSUE [issue number]
PREFERRED-ISSUE
LATEST-ISSUE
Note that a maximum of 30 modules can be contained in a package.
In the case of CONTAINS-SOURCE-OF only, this relationship must be completed by specifying the file name into which the module is to be transferred on the user's account, thus:IN-FILE [file name]where file name must have a minimum of one character in both the name and the extension, but must not exceed 64 characters, nor contain spaces.
The characters must be legal to VMS file names.
The file name must not contain a node name, device, directory, logical name or version number, eg:
To specify modules which must be locked against modification without agreement or being set to hard copy, but which nevertheless do not need to be transferred as part of the package, another tight coupling relationship must be used:
REQUIRES-ACCESS-TO [module name]
followed by one of:
SELECTED-ISSUE [issue number]
PREFERRED-ISSUE
LATEST-ISSUE e.g. REQUIRES-ACCESS-TO[GRAPHICS DISPLAY]SELECTED-ISSUE[3.3]
FOREIGN-SET-IS
This is only available to module header version 2.2 and later, and should only be used in modules of type FOREIGN.
Other types of module must not contain the ‘FOREIGN-SET-IS’ keyword, nor any user-supplied entries.
It is used to specify files associated with a FOREIGN module, thus:
where file name is as described under ‘MODULE-RELATIONS-ARE’.
The comment may contain a maximum of 48 printable ASCII characters including space and tab, and may be repeated as many times as necessary using the hyphen sign after the closing square bracket to indicate a continuation line.
A maximum of 30 files can be specified in a FOREIGN module in this way.
EOMD
This denotes the end of the module definition.
PREFACE
Purpose
This manual documents the installation, verification and activation of the latest issue of LIFESPAN.
It also includes instructions for the verification of this issue as an upgrade to an existing system.
The instructions for installing an upgrade to an existing system can be found in the ‘Installation Notes’ which are part of the issue documentation supplied.
Audience
This manual is essential reading for both the VAX System Manager and the LIFESPAN Manager.
The System Manager is the person responsible for the day-to-day running of the computers on which LIFESPAN is to be used, including the installation of software, computer system startup/shutdown etc.
The LIFESPAN Manager is responsible for the organisation of a particular LIFESPAN system on the computer, assigning charge codes, controlling availability of the LIFESPAN facilities etc.
Manual Structure
This manual assumes that all readers are familiar with the basic concepts of the VAX/VMS operating system such as UIC, privileges etc.
Section 1 describes how to install LIFESPAN for the first time on your VAX,
Section 2 describes how to set up a new LIFESPAN process.
Section 3 describes how to maintain and change LIFESPAN processes.
Appendix A describes the LIFESPAN delivered software and the files and directories required for each LIFESPAN process.
If you are a new LIFESPAN user, you should read this appendix first, since the terminology used in the rest of the manual is defined there.
The remaining appendices provide additional information which you might find useful.
NEW LIFESPAN INSTALLATION
This section describes the decisions and actions required when you are installing LIFESPAN on your system for the first time.
Existing LIFESPAN sites should also read this section before doing their upgrade.
Please ensure that you do read this section — some requirements or recommendations may have changed since your last installation or upgrade.
If you are setting up LIFESPAN for the first time, you should follow the procedures in the order given to ensure a trouble-free installation.
Where VMS System Management decisions have to be made, you are given all the relevant information to enable you to correctly determine your requirements.
However, if at any point you are still unsure, please do not hesitate to contact SST Technical Support.
Create Installation Directory (SYS$LIFESPAN:)
See Appendix A for a description of the contents of the Installation Directory.
If you intend to access LIFESPAN from more than one VAX in a network, then you must first decide on which VAX/Node of the network LIFESPAN is to reside.
This includes the Installation, Process and Storage Directories; the User accounts may be on any of the VAXs in the network.
It is on the chosen ‘host’ node that all further work is to be carried out, unless otherwise specified.
Choose where you will keep your LIFESPAN executables etc. — a common choice is SYS$SYSDEVICE:[LIFESPAN].
Create this directory as follows: replacing SYS$SYSDEVICE:[LIFESPAN]with your chosen location for the Installation Directory.
If you are using LIFESPAN across a network, then you will also need to create the above directory on each of the additional VAXs from which you intend to access LIFESPAN.
You will set the ownership of the directory later (Section 1.2.1).
Note that the Installation Directory must have WORLD EXECUTE access as described in Appendix A, LIFESPAN will write command files here for user access to the LIFESPAN Processes.
You must assign the system-wide logical SYS$LIFESPAN to this directory as follows: replacing SYS$SYSDEVICE:[LIFESPAN]with your chosen location for the Installation Directory.
If you are using LIFESPAN across a network, then you will also need to carry out the ASSIGN on each of the additional VAXs from which you intend to access LIFESPAN.
This assignment also needs to be made on system reboot — see Section 1.5.1, SYSTARTUP_V5.COM, for details.
Setting up the VMS Accounts
You do not in fact need to set up any special VMS accounts in order to run LIFESPAN.
However, most sites do create a VMS user to do the LIFESPAN Managerial and Administrative duties (eg. starting and stopping LIFESPAN processes, validating LIFESPAN databases, running the Hard Copy system) and allocate one or more UICs for the LIFESPAN Process(es).
This section describes a set of typical accounts which will enable you to run your new LIFESPAN system.
If you wish to investigate other options, then please read Appendix B, in which the requirements of the VMS accounts to be used for each of the LIFESPAN activities are detailed, enabling you to make your own decisions about which new accounts to set up, if any.
LIFESPAN Manager Account
Create a VMS account for the LIFESPAN Manager as illustrated in Figure 1.1, LIFESPAN Manager VMS Account Quotas and Privileges.
Note that the quotas and privileges shown are minima.
The disk quota for the LIFESPAN Manager's account needs to be about 10000 blocks (for the Installation Directory).
Having set up the LIFESPAN Manager's account and disk quota, set ownership of the Installation Directory to this user as follows:
replacing SYS$SYSDEVICE:[000000]LIFESPAN.DIR with the correct filename for your Installation Directory, and replacing LS_MGR with the user name of the VMS account created in this section.
Note: LS_MGR will be used throughout the rest of this document and for your installation this should be replaced by the user name of your VMS account as created above.
If you are using LIFESPAN across a network, then you will also have to set the directory file ownership on each of the additional VAXs from which you intend to access LIFESPAN.
These directories should already have been created in Section 1.1.
You may find it useful to have a user directory for the LIFESPAN Manager; there will be certain command files etc. which you may wish to build for routine activities, and keeping them out of SYS$LIFESPAN: is helpful, as discussed in Appendix A. Whether you then choose to have this directory or SYS$LIFESPAN: as the LIFESPAN Manager's default directory is up to you.
(Some of the LIFESPAN administrative activities require you to set your default to SYS$LIFESPAN:, hence the example uses this as the LIFESPAN Manager's default directory).
If you are unhappy with any aspect of the LIFESPAN Manager's account (eg. many VAX Managers do not like to give SYSPRV to other users) then please read Appendix B for a full discussion of other options.
LIFESPAN Process Account(s)
Create a VMS account for the LIFESPAN Processes as illustrated in Figure 1.2, LIFESPAN Process VMS Account Quotas and Privileges.
Note that the quotas and privileges shown are minima.
Each LIFESPAN Process requires a minimum of 4500 blocks for the database files, which will of course grow as you use the LIFESPAN Process.
All stored configurable items are owned by the UIC of the LIFESPAN Process, so to estimate disk quota for a LIFESPAN Process, calculate the size of your total data storage requirements, multiply it by the average number of versions you intend to hold on-line, and add approximately 15000 blocks.
Try not to let the free block count of the LIFESPAN Process fall below 10000.
For a discussion of this account, and the options available to you, please read Appendix B.  
LIFESPAN User Account(s)
Each user who will access LIFESPAN requires certain minimum quotas and privileges.
These are shown in Figure 1.3, LIFESPAN User VMS Account Quotas and Privileges.
As you start to use LIFESPAN, you will find that your users' disk quota requirements decrease, as LIFESPAN is now holding all but immediately required files.
However, LIFESPAN will not transfer software to a user whose disk quota is exceeded, or will be exceeded by the transfer, even if the user has EXQUOTA privilege, so check with users that they have sufficient quota for their largest required transfer out of LIFESPAN.
Install the Delivered Software
Having set up the Installation Directory and the LIFESPAN Manager account as described in Sections 1.1 and 1.2.1, you are now ready to copy the distribution kit onto your VAX.
From the Installation Directory, load the kit (TK50, 1600bpi tape or RL02, as appropriate) and mount the device.
TK50 and 1600bpi tape must of course be mounted /FOREIGN; both these and the RL02 disk have the label ‘ISSUE’.
To copy the kit from tape (eg. TK50 or magtape), type the following command: where <dev> will be MUA0:, MTA1: etc. as appropriate.
To copy the kit from disk (eg. RL02) type the following command:
where <dev> will be DLA0:, DLA1: etc. as appropriate.
Note that you require the files to be owned by the LIFESPAN Manager VMS account.
Check the directory listing of SYS$LIFESPAN: against the Distribution Medium Contents List supplied with the issue, to ensure that all expected files have been successfully copied.
The device should now be dismounted and unloaded.
If you are using LIFESPAN across a network, then you will need to copy the following files from the Installation Directory on the host node to the Installation Directory on each of the additional VAXs, ensuring their protections are preserved:—
ADDHEADER.COM
FTAF.FDL
FTSP.COM
FTSP.EXE
LIFESPAN.FLB
LIFESPAN.HLP
SCAN.EXE
USERTL.EXE
After LIFESPAN has been started up on the host node for the first time, and after LIFESPAN startups following edits to the LIFESPAN configuration file, the following file must also be distributed to the remote Installation Directories: <Process-name>.COM where <Process-name> is the LIFESPANPROCESS entry in the LIFESPAN configuration file.
This file may need to be tailored to point to the appropriate remote Installation Directory.
If you want to manage access to LIFESPAN files using Access Control Lists, please refer to Appendix C for guidance.
FMS Drivers
The LIFESPAN user interface is based on DEC's Forms Management System, FMS.
If FMS Drivers are already installed on your machine, please read Appendix D to check whether you need to upgrade to the drivers shipped with LIFESPAN.
(Appendix D also tells you how to check whether FMS Drivers are installed on your system).
If you are installing FMS Drivers for the first time, please check that you have an FMS Driver licence.
If you are unsure, please contact SST Customer Support.
In order to install the FMS Drivers shipped with LIFESPAN, you need to copy the driver files to the relevant VMS directories, as follows:
You now need to install the drivers into your running VMS system.
The drivers will use some global sections and global pages.
If you are not sure whether you have the capacity, refer to Appendix D.2, System Requirements for FMS Drivers.
To install the drivers in the running system, execute the following commands:
Installing the drivers on system startup is described in Section 1.5.1, SYSTARTUP_V5.COM.
If you are using LIFESPAN across a network, then you will have to repeat the steps in this section on each of the additional VAXs from which you intend to access LIFESPAN.
VMS System Startup, Shutdown and Login
You will need to ensure that system-wide logical names etc., are properly set up on system reboot, and you will also require some symbols to be set for all your LIFESPAN users.
It is recommended that you have separate command files for these actions, which you then call as appropriate from the standard VMS command files.
Put these new command files in your SYS$MANAGER directory.
The following sections describe how to set up and use these command files.
Note: It is assumed that DECNET is available on the machines on which LIFESPAN is to be run.
DECNET must be running when LIFESPAN is started up and also when LIFESPAN is shut down.
SYSTARTUP_V5.COM
SYS$MANAGER:SYSTARTUP_V5.COM is your site-specific system startup command file.
This file should be updated to insert the following lines (ensuring that DECNET is still running at the point when the commands will be executed):
Now create a file called SYS$MANAGER:LIFESPAN_STARTUP.COM, which contains the following lines:
SYS$SYSDEVICE:[LIFESPAN]should be replaced with the true pathname of your LIFESPAN Installation Directory.
If your SYSTARTUP_V5.COM already installs the FMS drivers correctly, you can of course delete that part from LIFESPAN_STARTUP.COM.
You may also wish to start up some or all of your LIFESPAN Processes on system reboot — the commands you will wish to include are described in Section 2.9, Process Startup on System Reboot.
If you are using LIFESPAN across a network, then you will have to repeat the steps in this section on each of the additional VAXs from which you intend to access LIFESPAN.
SYSHUTDWN.COM
SYS$MANAGER:SYSHUTDWN.COM is your site-specific system shutdown command file.
You may find that you do not have one of these; if you do not, create a blank one.
In SYSHUTDWN.COM, insert the following lines (ensuring that DECNET is still running at the point when the commands will be executed):
Now create a blank file called SYS$MANAGER:LIFESPAN_SHUTDOWN.COM.
Section 2.10, Process Shutdown on System Shutdown, describes what to put in this command file, once you have created some LIFESPAN Processes.
Section 2.10 also describes how the LIFESPAN Manager and the VAX System Manager can use LIFESPAN_SHUTDOWN.COM to shut down the LIFESPAN Processes when required.
Note that once you have put some commands into LIFESPAN_SHUTDOWN, your system shutdown procedures should always specify YES for site-specific shutdown procedure (parameter number 4 to SYS$SYSTEM:SHUTDOWN), unless you are performing an emergency shutdown and cannot allow the system the time to execute the LIFESPAN_SHUTDOWN commands.
SYLOGIN.COM
SYS$MANAGER:SYLOGIN.COM is your system-wide login command file.
Your users will all execute this as they log in to the VAX, prior to executing their own login command files as specified in SYSUAF.DAT.
To set up the required LIFESPAN symbols for all your users, insert the following lines prior to the $EXIT line, at the end of SYLOGIN.COM:
Now create a file called SYS$MANAGER:LIFESPAN_LOGIN.COM, with the following lines in it:
Ensure that the file has world READ access by executing the following command:
Section 2.11, User Access to Process, describes further commands to put into LIFESPAN_LOGIN.COM, to give users access to the LIFESPAN Processes you create.
If you are using LIFESPAN across a network, then you will have to repeat the steps in this section on each of the additional VAXs from which you intend to access LIFESPAN.
VMS System Parameters
The only system parameters you may have to change in order to run LIFESPAN are VIRTUALPAGECNT, GBLSECTIONS and GBLPAGES.
You may also have to configure DECNET for LIFESPAN.
VIRTUALPAGECNT
VIRTUALPAGECNT must be at least 25000 for a system which is running LIFESPAN.
To find out its current value, execute the following command:
This will give you output similar to the following:
VIRTUALPAGECNT is not a dynamic parameter, so the new value will not be in force until you reboot the system.
However, do not do this until you have checked that you do not also need to increase GBLSECTIONS and/or GBLPAGES.
Setting these values is described in Appendix D.2, System Requirements for FMS Drivers.
GBLSECTIONS and GBLPAGES
Since these parameters have to do with the FMS drivers, checking and setting them is described in Appendix D, FMS Drivers.
If FMS is installed on your system (ie. it was already installed, or it has been successfully installed as described in Section 1.4) then these parameters do not require to be modified.
Otherwise, read Appendix D.2, System Requirements for FMS Drivers.
DECNET
LIFESPAN communications and file transfers between nodes are effected via DECNET.
Regardless of whether your LIFESPAN is going to run across nodes, you will have to ensure DECNET is configured for the maximum number of links required.
The maximum number of links required on the host node,(ie. the node where the LIFESPAN main image will be running) can be calculated as follows:—
allow 1 link for each user image that will run on the host node,(probably the same as MAXCONCURRENTUSERS in the LIFESPAN configuration file)
allow 1 link for each user image that may concurrently access LIFESPAN from either the host or remote nodes (probably the same as MAXCONCURRENTUSERS in the LIFESPAN configuration file)
allow 1 link for file communication with each remote node that is allowed to access LIFESPAN (see the number of entries in the LIFESPAN configuration file for NODES1TO10 — NODES41TO50)
allow 1 link for LIFESPAN itself.
The maximum number of links required on each remote node can be calculated as follows:—
allow 1 link for every user image that may concurrently access LIFESPAN from the remote node
allow 1 link for file communication with the host node.
These links are in addition to any other DECNET links your systems require.
When you have determined the maximum number of links required by each of your systems, you should first check whether you will need to change the corresponding DECNET parameter as follows:
This will give you output for the node characteristics.
If the ‘Maximum links’ is less than the links you require, then you need to increase its value.
To do this, execute the following commands:
This will SET the current maximum for the running system, and DEFINE the maximum to be used after a system reboot.
SETTING UP A NEW LIFESPAN PROCESS
This section describes how to set up a new LIFESPAN Process.
If you are installing LIFESPAN for the first time, then it is recommended that you create up to three LIFESPAN Processes, as described below.
If you already have LIFESPAN installed, please read Appendix E, Multiple LIFESPAN Processes, before proceeding.
New LIFESPAN sites are advised to have at least two, possibly three LIFESPAN Processes.
These are to be used as follows:
LSTRAIN, the LIFESPAN Training Process.
All sites are recommended to have one LIFESPAN Training Process, where new users of LIFESPAN can experiment with the system without upsetting the live database.
It should be regarded as a non-secure, learning environment only, and should not have live data entered into it except for training purposes.
Making this plain to users will help to prevent any inadvertent serious use of this process — how you do that is described in Section 2.11, User Access to Process.
LSLIVE, the main LIFESPAN Process.
Every site will of course require one main LIFESPAN Process, to do the job of Configuration Management for which you bought the product.
There should be no need to run more than one main process, since LIFESPAN is designed to handle enormous projects with very little impact on speed of response, and you can apply whatever security controls you need within one process.
For further discussion of the advantages and disadvantages of having more than one main process, refer to Appendix E, Multiple LIFESPAN Processes.
LSRND, a LIFESPAN Research and Development Process.
Many sites find it useful to have an ‘R&D’ LIFESPAN, where ideas on configuration control structures, user hierarchies etc., can be tested out before implementation in the live LIFESPAN Process.
You can of course do this in your LSTRAIN process, if you prefer to run just the two processes.
The following text takes you step-by-step through setting up the LSTRAIN process; to set up further processes, just follow the same instructions, substituting the name of the new process for LSTRAIN.
VMS Account
You have already set up a LIFESPAN Process VMS account (Section 1.2.2); the only decision you need to make now is whether to run all LIFESPAN Processes on the same UIC, or to have separate UICs for each process.
If you wish to have separate UICs, simply copy the account you have already set up to a new UIC and VMS account name.
LIFESPAN Process and Working Directories
As described in Appendix A, LIFESPAN puts all its own database files in the Process Directory.
This directory will start at just under 3500 blocks, and grow as you use the process.
On the same physical (or pseudo) device as the Process Directory, LIFESPAN also keeps its working directories, so you need to be sure you have sufficient space on the chosen disk for these as well as the database.
(The storage directories, where your configurable items are stored, may be anywhere on the host VAX; they are not restricted to the same disk as the Process Directory).
Decide on a root directory under which you will build all your LIFESPAN Process and Working Directories; for instance, you might choose LIBRARY$DISK:[LSPAN]as your root directory.
Now, with your root directory name replacing LIBRARY$DISK:[LSPAN], your LIFESPAN Process VMS account name replacing LSPROC (and your new LIFESPAN process name replacing LSTRAIN, if appropriate) create the following directories:
Note that world execute access is needed to the Process Directory itself; you need therefore also to check that the entire VMS pathname above the Process Directory also has world execute access at every level.
In the above example, type:
This will give you an output similar to the following:
Provided that the last protection listed contains an E, you do not need to change the protection.
Otherwise, set the protection as follows:
Repeat this procedure for any directories between the physical device name and the root directory; eg. if you chose LIBRARY$DISK:[LSPAN.DATABASE]as your root directory, you also need to check the protection on LIBRARY$DISK:[LSPAN]DATABASE.DIR
Note that if LIBRARY$DISK is a pseudo-device, you also need to set world execute on all the directories down to it.
See Appendix F, VMS Pseudo-devices, for further details.
In Section 2.4, you are going to tell LIFESPAN where its Process and Working Directories are, and the information fields for device name and directory names are all a maximum of 20 characters, including square brackets and colons.
If you are putting the Process Directory deep within the hierarchical structure,(or using very long directory names) so that the directory name, excluding device name, will be more than 20 characters, you will need to use concealed logical names (or pseudo-devices).
If you are in this position, eg. you are putting LIFESPAN on LIBRARY$DISK: in directory [LIFESPAN.LSTRAIN](and the directory names for the Working Directories are longer than 20 characters) then refer to Appendix F, VMS Pseudo-devices, before continuing.
Similarly, if your device name is longer than 19 characters (20 with the colon), you need to assign a shorter name to it as a system-wide logical, or use a pseudo-device name.
LIFESPAN Storage Directories
You need to create a number of storage directories for your new LIFESPAN Process.
As yet you probably do not know what Charge Codes you want to use, so just set up one storage directory under Charge Code 0001, for use by the LIFESPAN Manager, at present.
(Section 2.7 explains how to set up the Charge Code itself, and Section 3.1 how to create other storage directories.)
You may put the storage directory anywhere on the host system you like (providing you have room on the disk for it — see Appendix A for guidance on estimating storage requirements).
Decide where you want the storage directory to be, and name it so that you can understand what it is used for; for instance, you may create it as follows:
Note that unlike the Working Directories, a storage directory does not have to be on the same device as the Process Directory, but it does have to be on the same node.
Now assign a system-wide logical name to the storage directory; you will always refer to it by the logical name from within LIFESPAN.
There are no restrictions on the length of the pathname, but the logical name itself must be less than 20 characters, so that the total number of characters including the colon (which LIFESPAN always requires you to explicitly type) is 20 or less.
Set up the logical name as follows:
You must also put this same logical name assignment into your SYS$MANAGER:LIFESPAN_STARTUP.COM file (Section 1.5.1), so that you can be absolutely sure it will always be assigned before you start up the LIFESPAN process which will use it.
Edit SYS$MANAGER:LIFESPAN_STARTUP.COM, putting in the following lines:
It should be noted that access to files within VMS directories and hence the performance of LIFESPAN when accessing charge codes can be significantly hampered if the number of contained files becomes very large.
It is recommended that you keep the number of files in one charge code to below 2000.
This may be achieved with careful allocation of charge codes to users for reserving module names (there is no harm in having many as opposed to few charge codes), and use of the LIFESPAN database management facilities like offline and module version deletion.
These facilities are described in the Operations manual.
LIFESPAN Configuration File
The configuration file tells a LIFESPAN Process the information it requires on start-up; eg. where its Process and Working Directories are, what its process name and UIC are.
A template configuration file is supplied with LIFESPAN; its name is EXAMPLE.DAT and it is in your SYS$LIFESPAN directory (see Appendix G).
Copy the supplied template configuration file into the root directory for the new LIFESPAN Process, and edit it to contain the correct information.
(Note that on subsequent process creations, you will probably find it more convenient to use LSTRAIN.DAT itself as the template, as it will be similar to the configuration of the new process).
At this point, do not edit any field not explicitly mentioned below.
Take great care not to delete any semi-colons, vertical bars etc.
Unless otherwise specified, all fields have a maximum length of 20 characters, including colons, square brackets, etc.
The information you need to alter is as follows:
(a) LIFESPAN Process Name
Change EXAMPLE to LSTRAIN; ie. the name of the new process.
The second parameter is described in more detail in section 3.3.
(b) Device
Change QA1: to LIBRARY$DISK:; ie. the device (or pseudo-device) name for the Process and Working Directories.
Note that the colon MUST be included in the name.
(c) Directory
Change [BINPROC.U]to [LSPAN.LSTRAIN.P], your actual Process Directory name.
(d) LIFEPAN Process UIC
Change [RF, BINPROC]to [LSPROC]; ie. the UIC you wish the process to run on.
(e) Networking Keywords
; Networking and allowable users keywords 
Change JADE:: to the DECNET node name of the VAX on which LIFESPAN is to run; eg. HOSTVAX::
Add other node names between the vertical bars (||) for the keywords NODES1TO10 — NODES41TO50 for the VAXs from which remote LIFESPAN access is to be permitted.
If you change any of these keywords to provide an increased usage of LIFESPAN beyond that for which you are licensed (ie. increase the number of nodes that can access LIFESPAN or increase the number of concurrent users), then you must contact SST Technical Support for the new LICENCEKEY entry.
(f) LIFESPAN User Access logical name
Change US to be the symbol you would like users to type to access the process; eg. LSTRAIN or LST.
(g) QA work directory
The second parameter is described in more detail in section 3.3.
(h) MAIL work directory
(j) OFFLINE work directory
(k) LIFESPAN Process identifier
This field has a fixed length of 2 characters.
Change LS to be any 2-letter code you like which will uniquely identify this LIFESPAN process from any other (eg. use LT for the training process, LL for the live, and LR for the R&D one).
LIFESPAN will use this code to uniquely identify the media items for offline storage (the built-in intelligent archiver); eg. if you pick a LIFEID of LT, media for this process must be labelled LT0001, LT0002 etc.
(l) HARDCOPY work directory
(m) PROCESS MODEL work directory
If this is your first LIFESPAN installation, proceed directly to Section 2.5, Creating the LIFESPAN Database.
Experienced installers wishing to edit some of the other fields should read Section 3.3, Changing Process Parameters in the Configuration File.
You should also read this section if the process you are currently setting up is your live database.
Creating the LIFESPAN Database
The database creation process is initiated from SYS$LIFESPAN:CREFDL.COM.
CREFDL will create some temporary files in your current default directory so you need to have write access to your current default, and have a personal quota of at least 300 blocks available.
Like most LIFESPAN activities, CREFDL will inform you of its progress as it works, so it is recommended that you run it from a hard copy terminal, or log the session to a file.
(If there are any problems, SST Technical Support will want to know what CREFDL reported).
To log the session into a file, type the following command:
$ ASSIGN USER$DISK:[LIFESPAN]CREFDL.LOG SYS$OUTPUT
where USER$DISK:[LIFESPAN]CREFDL.LOG is the name of the log file you wish to create.
CREFDL.COM requires two parameters:
the full file specification of the LIFESPAN configuration file for the required process
the full name of the LIFESPAN Installation Directory.
This should normally be specified as SYS$LIFESPAN: Note that this parameter is not required if CREFDL.COM is run in the Installation Directory.
The command file performs the following:
it checks that the given configuration file does exist
it extracts the required information from this file
for each database details file in turn, it checks to see if that file already exists and only creates the file if it does not exist.
In order to create the database for the new process, type the following command:
Note that you must supply the FULL pathname of the configuration file you created in Section 2.4, and you must put the colon on the end of SYS$LIFESPAN:
If you logged the session into a file as described above, release the file now by typing:
Check the output which CREFDL has given you against the example of a successful run of the command file as shown in Figure 2.1.
This example is for the installation of a new LIFESPAN Process, where none of the database details files already exist.
In the example, the Process Directory is LIBRARY$DISK:[LSPAN.LSTRAIN.P].
(Note that the final line ‘LIFESPAN DATABASE FILE CREATION COMPLETE’ does not necessarily mean that the database has been correctly created).
If everything looks correct, proceed to Section 2.6, Starting and Stopping the LIFESPAN Process.
CREFDL Error Reports
This section details the errors that CREFDL can report, and what to do if you get one of them.
(a)
Error 
No LIFESPAN configuration filename supplied
Action Retype the command as shown above.
CREFDL takes two parameters, the full pathname of the configuration file, and the name of the Installation Directory.
(b)
Error 
LIFESPAN configuration file <config filename> not found.
Action
Check that the configuration file exists, and that you have read access to it.
(c)
Error 
LIFESPAN configuration file <config filename> not accessible.
Action
Check that you have typed the full pathname of the configuration file correctly, and that you (and therefore CREFDL) have read access to it.
(d)
Error 
Keyword DEVICE not properly defined in Configuration File
Action
Check that you have put legal values in the configuration file for the keyword DEVICE.
Remember that the colon must be supplied at the end of the device name.
Check that the device is accessible.
(e)
Error 
Keyword DIRECTORY not properly defined in Configuration File
Action Check that the Process Directory name is correct in the configuration file.
Remember that it must be 20 characters maximum, including square brackets.
Check that the directory is accessible on the correct device.
(f)
Error 
Keyword UIC not properly defined in configuration file
Action
Check that the UIC is properly defined in the configuration file.
You must supply the full textual or numeric UIC, with square brackets, and the total field must be 20 characters or less.
(g)
Error 
Keyword <keyword> not properly defined in configuration file
Action
For any other keyword error, check that you have not changed the value from SYS$LIFESPAN:EXAMPLE.DAT.
Check that there are at least two vertical bars || at the end of each keyword line.
(h)
Error 
%DCL-E-OPENIN, error opening SYS$SYSDEVICE:[LIFESPAN]SYS$LIFESPANFDLDEF.COM; as input -RMS-E-FNF, file not found
Action
You forgot the colon on the end of the second parameter, SYS$LIFESPAN:
(i)
Error 
%DCL-E-OPENIN, error opening SYS$SYSDEVICE:[LIFESPAN]FDLDEF.COM; as input -RMS-E-FNF, file not found
Action
Check that SYS$LIFESPAN:FDLDEF.COM is present, and that you (and hence CREDFL) have read access to it.
(j)
Error 
File <device><directory >*.FIL; already exists — not created.
Action
Check that the configuration file is pointing to the correct Process Directory.
If it is, you have probably tried to create the new database twice, after an unsuccessful first attempt.
Clear out the Process Directory completely, and try again.
If you still get the same error message, contact SST Technical Support.
(k)
Error 
Error during creation of <device><directory >*.FIL; Action
Check that LSPROC has sufficient quota on <device>.
Most of the database files are ‘best try contiguous’, so check that your disk is not too fragmented.
Starting and Stopping the LIFESPAN Process
This section describes starting and stopping LIFESPAN Processes, and the File Transfer Server Process (FTSP) if you are using LIFESPAN across a network.
The actual procedure for starting and stopping LIFESPAN processes is very simple.
However, there are some pitfalls to be aware of when the system may be running more than one such process simultaneously.
These are described at the end of the section.
Starting the File Transfer Server Process (FTSP)
If you are using LIFESPAN across a network, it is advisable to start the FTSP on the remote nodes prior to starting LIFESPAN on the host node.
This is not an absolute necessity, but it will allow any outstanding file transfers to be processed immediately on LIFESPAN startup.
If the FTSP is started after LIFESPAN, then outstanding file transfers will be delayed up to 30 minutes before being transferred.
To start an FTSP process, you will require the same VMS privileges as for starting LIFESPAN.
The LIFESPAN Manager account (Section 1.2.1) on each of the remote nodes provides these privileges, so you should log in to this account on each of the remote nodes.
The command to start an FTSP is as follows:
Only one FTSP is required on each remote node irrespective of the number of LIFESPANs running and where the host node of each LIFESPAN is located.
The FTSP is not required for the host node itself unless the host node is acting as a remote node to a LIFESPAN Process on another node.
Starting a LIFESPAN Process
To start a LIFESPAN Process, you will require the VMS privileges SYSPRV, DETACH, WORLD and SYSNAM (irrespective of your ability to ‘see’ the LIFESPAN files and processes).
The LIFESPAN Manager account (Section 1.2.1) provides these privileges, so you should log in to this account.
A LIFESPAN Process is activated by executing the LIFESPAN startup command file LSSTRT.COM, which is one of the issued files and should therefore be present in the Installation Directory.
LSSTRT.COM requires two input parameters:
the full file specification of the LIFESPAN configuration file defining the environment of the process, including the device name and LIFESPAN Process directory name.
the full specification of the LIFESPAN Installation Directory.
The logical name SYS$LIFESPAN should be used here.
The command to start a LIFESPAN Process is therefore as follows:
where <config filename> is replaced by the full pathname of the configuration file; eg. LIBRARY$DISK:[LSPAN.LSTRAIN]LSTRAIN.DAT.
If any logical names are used in this pathname, they must be system-wide logicals.
Note that, as for most LIFESPAN logical names, the inclusion of the colon on SYS$LIFESPAN: is crucial.
The startup command file performs the following functions:
checks for the existence of the input configuration file in the specified directory.
extracts relevant information from this file, checking that the parameters are as expected.
stops the ‘LIFESPAN Not Available Process’(LNAP).
reclaims space in the database details files ALMAIL.FIL, MODSET.FIL, FILETS.FIL and MOVMOD.FIL.
runs the LIFESPAN Integrity Program to ensure integrity of specific database files.
checks that the initiating process has sufficient privilege to run the LIFESPAN Process as a detached process.
If all the above checks are completed successfully, then a LIFESPAN Process, with the name specified by the LIFESPANPROCESS keyword in the configuration file, is run as a detached process, using the resources of the UIC specified by the UIC keyword.
A user access file is created in the LIFESPAN Installation Directory, for this LIFESPAN Process.
On startup, facilities can automatically be made either available or unavailable to all users, according to the parameter supplied for the keyword FACILITY_AVAIL in the configuration file (see Section 3.3).
An example of a successful run of the startup command file is shown in Figure 2.2, Example Process Startup.
If this is not the first LSSTRT since system startup, you may also get a %DCL-I-SUPERSEDE message, telling you that the logical name LIFESPANCONFIGURATION has been reassigned.
Errors which can be reported by LSSTRT include the following:
(a)
Error 
No parameters supplied to the LIFESPAN startup file
Action Refer to LIFESPAN Installation and Management Manual for explanation.
Check that you correctly typed the LSSTRT command, with spaces between the command file name and the configuration file name, and between the configuration file name and SYS$LIFESPAN:
(b)
Error 
LIFESPAN configuration file <config filename> not found.
Action Check that the configuration file exists, and that you have read access to it.
(c)
Error 
LIFESPAN configuration file <config filename> not accessible.
Action Check that you have read access to the configuration file.
(d)
Error 
Keyword <keyword name> not properly defined in configuration file.
Action Check the configuration file for syntax in the line beginning with |<keyword name>|.
Make sure that there are at least two vertical bars (||) at the end of the line.
(e)
Error 
LIFESPAN process directory <process directory name> inaccessible.
Action Check that the syntax of the |DEVICE| and |DIRECTORY| keywords in the configuration file is correct.
Concatenating the two together should give the full pathname of the Process Directory, and you should have read and write access to that directory.
(f)
Error 
The current process has insufficient privileges to start up LIFESPAN.
Action You lack one of the required VMS privileges, SYSPRV, SYSNAM, DETACH, WORLD or LOG_IO.
(g)
Error 
Integrity of process files has not been proved — LIFESPAN not started up
Action LS_INTEGRITY has found an inconsistency in the database files.
Secure your most recent backup of the database, and call SST Technical Support for advice.
(h)
Error 
<process name> did not run: see VMS error message for details.
<process name> was not stopped.
Consult VMS System Manager.
Action If you get one of these messages, it will have been preceded by a VMS error message.
If you cannot overcome the problem yourself, call SST Technical Support for advice.
Stopping a LIFESPAN Process
Stopping a LIFESPAN Process is very similar.
However, before stopping the process, it is recommended that you Set Facilities Unavailable using Option 7.4.0 for a period (usually 30 minutes), or ideally until the main image goes into VMS state HIB ($SHOW PROCESS /ID=<process id >/CONTINUOUS).; N This will enable the process to complete any outstanding transactions before shutdown, reducing the overall CPU usage (and users' waiting time).
Since QA listings and approvals use the most CPU, and also elapsed time, another check is to look at LIFESPAN Option 1.5.6, All Current QA Activities Enquiries, and wait until all packages are in state IN PREP or PREPARED.
Naturally, you would not normally shut down the LIFESPAN Process while Offline is running.
The command which will stop a LIFESPAN Process is exactly the same as the startup command, except that you use LSSTOP rather than LSSTRT.
LSSTOP.COM requires two input parameters:
the full file specification of the LIFESPAN configuration file defining the environment of the process, including the device name and Process Directory name.
the full specification of the LIFESPAN Installation Directory.
The logical name SYS$LIFESPAN should be used here.
Again, you should log in to the VAX as the LIFESPAN Manager, and type:
where <config filename> is replaced by the full pathname of the configuration file, eg. LIBRARY$DISK:[LSPAN.LSTRAIN]LSTRAIN.DAT.
If any logical names are used in this pathname, they must be system-wide logicals.
Note that, as for most LIFESPAN logical names, the inclusion of the colon on SYS$LIFESPAN: is crucial.
When the LIFESPAN Process is stopped, a replacement process is started up with the same process name to inform users that LIFESPAN is not available.
The ‘LIFESPAN Not Available Process’(LNAP) is subsequently stopped by the startup command procedure.
Example output from LSSTOP is shown in Figure 2.3, Example Process Shutdown.
Errors which can be reported by LSSTOP include:
(a) Error
No parameters supplied to the LIFESPAN shutdown file.
Refer to LIFESPAN Installation and Management Manual for explanation.
Action Check that you correctly typed the LSSTOP command, with spaces between the command file name and the configuration file name, and between the configuration file name and SYS$LIFESPAN:
(b) Error
LIFESPAN configuration file <config filename> not found.
Action Check that the configuration file exists, and that you have read access to it.
(c) Error
LIFESPAN configuration file <config filename> not accessible.
Action Check that you have read access to the configuration file.
(c) Error
Keyword <keyword name> not properly defined in configuration file.
Action Check the configuration file for syntax in the line beginning with |<keyword name>|.
Make sure that there are at least two vertical bars (||) at the end of the line.
(d) Error
LIFESPAN process name <process name> not currently running.
Action Either the process is not running anyway, or you do not have enough privilege to ‘see’ it.
If the process is in fact running, check that you have WORLD privilege.
(e) Error
<process name> was not stopped.
Consult VMS System Manager.
Action This error will be reported if LSSTOP did not itself stop the process.
If none of the above errors were reported and the VAX System Manager cannot help, call SST Technical Support for advice.
Where multiple LIFESPAN Processes are to be run, there are two pitfalls to be aware of.
The first again relates to user access, in that you must be very careful with user access symbols if two or more LIFESPAN Processes are to be accessed by the same user.
How to avoid this problem is described in Section 2.11, User Access to Process.
The second pitfall only applies if you have a relatively slow VAX and will be starting up two or more LIFESPAN Processes in quick succession.
In this case, the system-wide logical LIFESPANCONFIGURATION may be reassigned by the second startup procedure before the first main image has accessed it.
However, should this happen, the second startup will be reported as working by LSSTRT, but the main image itself will quickly die.
If you suspect that you may have a problem in this area, build in a DCL WAIT between process startups, and always check that all expected processes have written their startup messages into their error log files.
If any have not generated this message, and the main image is not running, stop the image you started prior to the one which has failed and restart both, but with a longer wait in between.
(The error log can be found in <process directory>ERROR.LOG; there will be a timestamped ‘Time of LIFESPAN STARTUP’ message for each successful startup).
Transaction Failures
If something goes wrong while a user is accessing LIFESPAN, the current displayed page is temporarily replaced by a ‘Transaction Failure’ page which describes the fault and tells the user what action to take (usually to log off or consult the LIFESPAN Manager).
A complete list of errors and the action required to remedy them is given in the ‘Reference Guide to LIFESPAN’.
System Crashes
LIFESPAN is designed to protect the integrity of its storage and internal files against VMS system crashes.
However, it is not possible to fully protect files under VMS, and so there is a possibility that they may become corrupt.
It is therefore advisable to undertake normal protective backups.
If a system crash occurs during a busy period, ANALYZE/RMS should be run on the LIFESPAN database details files to verify that VMS has maintained consistency.
If there is still any doubt, the LIFESPAN validation program can be used to check for self consistency of the database.
However, it should be noted that the LIFESPAN development team have been running LIFESPAN with a very large number of modules for some considerable time, and despite many VMS crashes, none have had any effect on the self consistency of LIFESPAN.
Setting Up the Charge Codes
This section describes how to tell the LIFESPAN Process about the storage directory you set up in Section 2.3, LIFESPAN Storage Directories.
For information on creating further Charge Codes, refer to Section 3.1, Creating and Moving Storage Directories.
Check that the logical name you assigned in Section 2.3 is still assigned:—
Enter the LIFESPAN Process by typing the following commands:
This assumes that the process name is LSTRAIN, hence that is the name of the command file, and that the user access symbol is also LSTRAIN.
If you did not follow the recommendations in this respect, you will of course need to substitute your own values in the above commands.
Log in to the new process by typing:
(You will soon go to Option 7.2.2 to change this password, we hope!)
Select Option 7.7.1, Create Charging Code, and type 
This sets up Charge Code 0001 as the directory pointed to by the system-wide logical name LSTRAIN_CC0001, and all material whose name is reserved under that Charge Code will reside in that directory for it's life cycle.
Option 7.7.1 checks that LIFESPAN can write files to the place you have specified by attempting to create a file in the Storage Directory.
Incorrect storage directory names can be corrected by SST Technical Support, but this will require a site visit.
Testing the New Process
In order to test your new LIFESPAN Process, we recommend that you enter and approve the configuration file you have built for it.
Maintenance of the driver and command files for the process is very much the LIFESPAN Manager's responsibility, and what better way to keep track of them than inside the process to which they refer.
The rest of this section talks you through the operations required to complete the entry and approval of the configuration file.
This procedure should also be used as the Acceptance Trial of the product.
The more relevant LIFESPAN forms and outputs you will be seeing are shown in Figure 2.4.
For precise details of keystrokes etc., refer to the relevant pages of the ‘Reference Guide to LIFESPAN’.
The script assumes that this is your LSTRAIN process — if it is a live process, then make sure that the user you create to do the QA is a name that you really want to sit directly under the Manager.
(Remember that personal names, privileges, addresses etc. can be changed, but LIFESPAN user names and their position in the hierarchy can never be changed.)
Before commencing, you need to be aware of the fact that due to LIFESPAN's asynchronous nature, your New Mail counter is only updated when your user image ‘talks to’ the main LIFESPAN Process image.
In a real development situation, this poses no problems, since you will rarely if ever be in a ‘wait for mail’ situation.
However, in the following script, there are several places where you must wait for mail before proceeding.
In these situations, you must keep sending the request for Option 6.1.1,(Inspect Individual Mail) in order to ‘see’ the new mail arrive.
Since Inspect does not distinguish between old and new mail, you will find this considerably less irritating if you always delete the mail messages after you have read them.
It should by now go without saying that if you experience any problems, you should not hesitate to call SST Technical Support for assistance.
LIFESPAN Process Acceptance Test Script
Log in to the process as MANAGER, and invoke Option 1.1.1 (Create Package /Product) for a package and invoke Option 1.1.3 (Reserve Source, Foreign and Pmodel Modules) for the configuration file.
Use Charge Code 0001, which you have already set up.
You may also wish to reserve names for any command files (eg. LIFESPAN_STARTUP.COM) which you wish to include in the package.
Example module names would be PROCESSPACKAGE for the package and PROCESSCONFIGURATIONFILE for the configuration file.
Take note of the automatic DC identifiers created for each of these modules.
After reserving the names, you should expect to receive a mail message telling you that the package has been successfully created.
(Whenever you reserve a package name, LIFESPAN creates an empty package at version 00.00Z for you, ready for you to read out into your VMS directory and enter some modules into it).
Select Option 6.1.1, Inspect Individual Mail, and inspect the mail message.
Now activate the automatic DC created for you (Option 2.4.0).
Follow the procedure very carefully — before answering (Y) es to the prompt ‘Are you sure (Y/N)?’, check that the correct DCs and package have been specified.
If you are in any doubt, answer (N) o.
You will then be in a position to either exit from the option and re-enter the data (by pressing RETURN) or, alternatively, you may press BACKSPACE to access the input data fields again and alter the data.
When you have successfully activated the DC, you will obtain a message from the transaction indicating this.
You will also receive a mail message telling you that the DC is now active, so go to Option 6.1.1 to Inspect it.
Now read out the package module which LIFESPAN has created for you,(Option 1.3.2), and update it to point to the configuration file.
Take particular care that you insert a modification record with a issue number larger than 00.00Z (the alpha character on the end of the issue number, the Development Code is mandatory), and that you then update the package's pointer to itself so that it now selects itself at this new issue number.
If you didn't do so when using the configuration file for the database creation, you should now update the header for the configuration file adding a new modification record with a development code, and scan both the configuration file and the package module until you get no errors.
You can run the scanner by typing RUN SYS$LIFESPAN:SCAN
Log into LIFESPAN again, and enter the new version of the package (Option 1.3.2 again).
Once you have received the mail message to tell you that it has ‘Scanned OKay’, you can re-use Option 1.3.2 to enter the configuration file module.
When mail tells you that the configuration file module has also ‘Scanned OKay’, you are ready to submit the package for approval.
LIFESPAN's rules are that the author of a piece of work may not be its approver, so you now need to create another user to approve the package.
Assuming that this is your LSTRAIN process, create a user called QA APPROVER under the LIFESPAN Manager.
Use Option 7.2.1 to create the new user, and be sure to give the user the QA privilege!
Submit the package to user QA APPROVER, using Option 1.5.1. and log out.
Log back into LIFESPAN as QA APPROVER, read the mail (telling QA APPROVER to approve the package) and prepare the package for approval, using Option 1.5.2.
Note that the package will not be prepared until LIFESPAN has shown you the lists of modules and DCs and you have answered the appropriate question.
If you are not offered the prompt to prepare the package for approval, there will be an error message next to one of the modules.
In this case, the user QA APPROVER must deny approval (Option 1.5.3), you must then log back in as MANAGER, enter a new version of the module which is at fault and resubmit the package for approval.
Once you have requested the package be prepared for approval, wait for the mail message telling you that it is ready.
The user QA APPROVER can now grant approval to the package using Option 1.5.3.
Within this option, type a Caveat such as‘For LIFESPAN Acceptance Trial’— this will be printed into the approval record.
Wait for an ‘Approval successfully granted’ message.
Once this has been received, read out the complete package using Option 1.3.1, and exit LIFESPAN.
(Note, QA APPROVER will also get a ‘DC QA-APPROVED’ mail message, as will the MANAGER).
Perform a VMS DIFFERENCES on the two files: the output should be similar to that shown in Figure 2.4.
Your new process is now tested and fully operational!
Process Startup on System Reboot
Section 1.5.1 gives instructions for creating LIFESPAN_STARTUP.COM, the LIFESPAN startup command file which you should always call on system reboot.
In that section, you entered the commands for installing the FMS drivers.
This section describes how to have LIFESPAN_STARTUP automatically start a LIFESPAN Process.
The first thing you must do is to assign any system-wide logical names required by the process, eg. pseudo-devices used for the process or storage directories, and all the logicals for all the storage directories known to the process.
Once these are assigned, then the command to start a LIFESPAN Process is simply executed by the LIFESPAN_STARTUP.COM command file with parameter set for HOST node or REMOTE node or both, as appropriate; i.e. the parameter can be specified as follows:
An example LIFESPAN_STARTUP.COM is shown in Figure 2.5.
Process Shutdown on System Shutdown
Section 1.5.2 gives instructions for creating LIFESPAN_SHUTDOWN.COM, the LIFESPAN_SHUTDOWN command file which you should always call on system shutdown.
This section describes how to have LIFESPAN_SHUTDOWN automatically shut down all your LIFESPAN Processes.
This will be called automatically on system shutdown (provided you specify YES to site-specific shutdown procedures), and can of course also be used to shut down the LIFESPAN Processes with the VAX running.
(However, please read Section 2.6 for guidance on optimisation of CPU usage before executing LIFESPAN_SHUTDOWN on a live system.)
You should always route system shutdown through LIFESPAN_SHUTDOWN (unless it is an emergency crash).
This is not to protect the LIFESPAN image, but to ensure that users trying to log on to LIFESPAN get the correct response from LNAP (LIFESPAN Not Available Process); ie. that the process is not available.
See Section 2.11 for further details.
LIFESPAN_SHUTDOWN needs simply to call LSSTOP, as described in Section 2.6, for each LIFESPAN Process which is running on your system.
An example LIFESPAN_SHUTDOWN is shown in Figure 2.6: this stops the LIFESPAN Processes LSTRAIN and LSLIVE.
User Access to Process
VMS users gain access to a LIFESPAN Process by executing a command file, created for the purpose at process startup.
Every time a LIFESPAN process is started up (via LSSTRT), a command file is created in SYS$LIFESPAN: which is named <process_name>.COM.
For instance, starting the LSTRAIN process will cause SYS$LIFESPAN:LSTRAIN.COM to be created.
To gain access to a LIFESPAN Process, the user simply executes this command file.
If the process is running, this will set up the required logical names and symbols, and the user then only has to type the symbol, specified by USERACCESSLOGICAL, to be connected to the process (see Section 2.4, LIFESPAN Configuration File).
For instance, a user may type @SYS$LIFESPAN:LSTRAIN to set up the assignments for accessing the LSTRAIN process.
Assuming that LSTRAIN is running, typing LSTRAIN (or LST, whichever you selected) then connects the user to LSTRAIN.
If LSTRAIN is not running when the user executes the command file, then the user will get a message similar to that shown in Figure 2.7.
The rest of this section describes in detail how this is all achieved, since there are some problems which can affect your users by allowing them to access more than one LIFESPAN Process, and by your stopping of the LIFESPAN Process to which they had attached on login.
The LIFESPAN Manager should therefore study the rest of this section, so that he or she can either take the recommended avoiding action, or at least understand what is happening if any of the users become confused.
Background Information on User Access to Process
The user access file makes five logical name assignments and one symbol assignment.
The symbol is the one selected by you in the configuration file as ‘USERACCESSLOGICAL’.
The logical names point the user image to the relevant configuration file (LIFESPANCONFIGURATION),host node (LIFESPANNODE),LIFESPAN task name (LIFESPANTASK),FMS forms library (LIFESPANFORMSLIBRARY)and LIFESPAN version (LIFESPANVERSION).
An additional, optional logical name may be set up by each user if he or she wishes to store cached information from one LIFESPAN logon session to another.
The cached information may be stored in a file referenced by the logical name LIFESPANCACHE and must be set up by the user.
The user image is always called SYS$LIFESPAN:USERTL.EXE; however, the current values of the logicals LIFESPANNODE and LIFESPANTASK determine which LIFESPAN process is accessed by the image, not the command symbol typed by the user.
For instance, a user may decide to use LSTRAIN.
He or she therefore types @SYS$LIFESPAN:LSTRAIN to set up the logicals and command symbols required.
Now, by typing LSTRAIN (or LST, whichever is selected as USERACCESSLOGICAL) USERTL will be run, attaching the user to the LSTRAIN process.
Subsequently, if the user decides to use the LSLIVE process, this is done by typing @SYS$LIFESPAN:LSLIVE to reset the logicals and command symbols.
Typing LSLIVE (or LSL) now attaches the user to LSLIVE.
NOTE WELL that the symbol LSTRAIN will still execute USERTL, but that, having reassigned the logical names for LSLIVE, it is LSLIVE to which the user will attach.
Where users only access one LIFESPAN Process, there is no harm in letting them have direct access to the command files in SYS$LIFESPAN.
However, to prevent inadvertent access to the wrong process when two or more are available, it is strongly recommended that you front LIFESPAN's own command files with a single ‘router’ of your own.
An example LIFESPAN_ROUTER.COM is shown in Figure 2.8, along with the relevant extract from a VMS user's login command file (or from SYS$MANAGER:LIFESPAN_LOGIN.COM, if you are using this setup).
Attempting to access a shutdown LIFESPAN will produce a transaction failure message to the effect that ‘LIFESPAN has disconnected the link’(see Figure 2.7).
MAINTENANCE OF LIFESPAN PROCESSES
This section covers the administrative duties of the LIFESPAN Manager.
Some of the activities are described in some detail, others are detailed in the ‘Operations Guide to LIFESPAN’.
The remainder of this section is sub-divided as follows:
Section 3.1 covers the creation and relocation of storage directories.
Section 3.2 describes the relocation of the Process and Working Directories.
Section 3.3 looks at some of the parameters in the configuration file not covered in Section 2.4.
Section 3.4 covers the BACKUP regime for LIFESPAN Processes.
Section 3.5 provides an overview of the validation activities available.
Section 3.6 provides an overview of the listings that can be produced from the database.
Creating and Moving Storage Directories
New storage directories may be created at any time.
Simply create a directory on any device on the host machine, ensure that the LIFESPAN Process you wish to use it has read and write access to it, assign a system-wide logical name (less than 20 characters) to it, and finally tell LIFESPAN about it.
Don't forget to include the assignment of the system-wide logical name in your LIFESPAN_STARTUP command file (as described in Sections 1.5.1 and 2.9).
For example, if you wish to create a new Charge Code 1234 for your LSLIVE process, which is to use the directory $DISK7:[CONFIG_MAN.LIFESPAN.LSLIVE.S1234], follow this procedure:
substituting the UIC of the process for LSPROC.
This command must also be put in LIFESPAN_STARTUP.COM, before the command which starts the LSLIVE process.
Now log into LIFESPAN as MANAGER (or another LIFESPAN user with MANAGER privilege) and use Option 7.7.1 to tell LIFESPAN that Charge Code 1234 is LSLIVE_CC1234:.
Once set up, you may not change the value given to LIFESPAN as the Storage Directory for a particular Charge Code.
This is why the use of system-wide logical names is always recommended; if you use physical names and subsequently have to move the storage directory, you will require a site visit.
Assuming that you have used logical names, moving a storage directory is easy.
Simply stop the LIFESPAN Process, create the new directory (ie. where you want to move the data to), move the entire contents of the old directory to the new one, reassign the logical name to the new location (remembering also to do this in LIFESPAN_STARTUP) and restart the LIFESPAN Process.
There are several commands you could use to move the data.
If the physical device is the same, you could use RENAME.
You could use a copy command, in which case it is recommended that you verify the copies using BACKUP, or you could use BACKUP and do the copy-and-verify in one operation.
You may choose to validate the contents of the directory using VALIDATE before re-starting the process — refer to Section 3.5 for details of the operation required.
(If you do not get the _%DCL-I-SUPERSEDE; message, something has gone wrong.)
You also need to edit the assignment of LSLIVE_CC1234 in LIFESPAN_STARTUP.COM.
With the logical name re-assigned, it is wise to have LIFESPAN do its own CRC check of the directory, using VALIDATE, before you startup the process again.
Refer to Section 3.5 for details.
Once you are satisfied that the move has been successful, you may delete the original directory contents and directory file.
(Note that unless you run with the BYPASS privilege, you will probably have to SET PROT=S:RWED on the directory file before you can delete it).
Finally, restart the process: where <config filename> is the full pathname of the relevant configuration file.
Moving the Process and Working Directories
The Process and Working Directories for a LIFESPAN Process will normally be moved en masse, since they are usually kept together under one root directory.
However, it may sometimes be necessary to move one or other to a different device due to disk space limitations.
Both activities are described here.
In both cases, the process must be stopped while you do the move, so before anything else you must type:
where <config filename> is the full pathname of the relevant configuration file.
Moving the Process and Working Directories en masse is very simple.
All you have to do (having stopped the LIFESPAN process) is move the directories, edit the configuration and process command files (if necessary) and restart the process.
For example, you wish the root directory DUA0:[SOFTWARE_LIBRARY](for which you use the concealed logical name LIBRARY$DISK:) to be changed to $DISK3:[CONFIG_MAN], for which you are going to use the concealed logical name CM$DISK:.
Your process LSLIVE is currently under LIBRARY$DISK:[LSLIVE].
You must also put this assignment in your LIFESPAN_STARTUP command file, before you start the LIFESPAN process.
replacing LSPROC with the UIC of the LIFESPAN Process.
Using BACKUP in this way automatically does a hierarchical copy with CRC check.
Any verification errors will be reported on the terminal.
Note that the example assumes a standard process and working directory layout.
If nothing other than the Process and Working Directories were under LIBRARY$DISK:[LSLIVE],(ie. none of the storage directories were under this root) then you could use the simpler BACKUP command:
(Moving the storage directories themselves is covered in the preceding section.)
Now you need to change the keyword |DEVICE| in the configuration file from LIBRARY$DISK: to CM$DISK:.
You probably also need to edit your LIFESPAN_STARTUP and LIFESPAN_SHUTDOWN command files to use the new configuration file full pathname (assuming the configuration file was in LIBRARY$DISK:[LSLIVE]).
If you have any other command files for the process (eg. a BACKUP and VALIDATE batch job), they will probably also need editing.
Changing the directory names of the Process and/or Working Directories is very similar.
Simply move any contents of the directory to the new location (on the same device, directory name maximum 20 characters including square brackets) and edit the configuration file accordingly.
For example, moving the QA workspace from LIBRARY$DISK:[LSLIVE.QA]to LIBRARY$DISK:[LSPAN.QA.LSLIVE]:
substituting relevant UICs for LSPROC as appropriate.
and then edit the value of the keyword |QAWORKSPACE| in the configuration file.
Moving one or more of the workspaces to another device is slightly more complex.
LIFESPAN will assume that all the workspaces and the process directory are on the same device (ie. |DEVICE|), but you can over-rule this by using a system-wide logical name.
For example, you wish to move QA workspace from LIBRARY$DISK:[LSLIVE.QA]to WORKSPACE$DISK:[LSPAN.QA.LSLIVE]:
Having stopped the process, as described above,
substituting relevant UICs for LSPROC as appropriate.
You can select any logical name you like in preference to LSLIVE_QA, but it must be a maximum of 19 characters.
You will also need to put this assignment in your LIFESPAN_STARTUP command file, before you start the LIFESPAN Process.
and then edit the value of the keyword |QAWORKSPACE| in the configuration file.
Its new value will be LSLIVE_QA:— the colon is, as ever, crucial.
Don't forget to start up the process again after completing the move!
As always, if you have any queries or problems, do not hesitate to contact SST Technical Support.
Changing Process Parameters in the Configuration File
This section describes the use of some of the parameters in the configuration file which were not covered in Section 2.4, LIFESPAN Configuration File.
You should read this section if you require a non-standard LIFESPAN process (eg. you may wish to turn off the production of approval listings, grant public access to DCs) or if you are about to set up your LSLIVE process.
You never need to change any of the.
FIL filenames.
Some of the parameters are only used at.
FIL file creation time, and some can be changed with immediate effect by stopping the process, editing the parameter and restarting the process.
If you find on reading this that an existing process would have benefited from different values at.
FIL file creation time, call SST Technical Support for assistance.
In addition to the device and directory parameters discussed in the preceding section, the following parameters may be changed:
(a)
LIFESPAN Process Name:
If your project standards allow, you may change the 2nd parameter to TRUE to inhibit CRC checking when users read modules out of LIFESPAN.
This will reduce the time taken to read modules out of LIFESPAN and will have most effect when large numbers of reads are being performed eg. you may want to inhibit CRC checking while many modules are being read out of LIFESPAN in preparation for a build.
(b)
DC States auto DC assessment (TRUE or FALSE), public DC access (TRUE or FALSE)
If your project standards allow, you may change the 2nd parameter to TRUE to enable users to use the auto DC assessment facility and/or change the 3rd parameter to TRUE to grant public access to DCs.
If the auto DC assessment facility is enabled, users will be able to mark packages, for which they are the manager or an ascendent, for auto DC assessment.
This causes any submitted DCs referencing the package or its contents to be automatically assessed as agreed on the package managers behalf.
Note that the automatic assessment will NOT be made if there is any other reason why the package manager is interested in the DC eg. the DC may reference a module contained in another package managed by the user but for which auto DC has not been set.
A package manager or ascendent may mark a package for auto DC assessment using option 1.8.0 — Update Module Details.
If the 3rd parameter is set to FALSE access to all information with respect to a DC will be restricted to users who are interested in the DC, ie. the user who submitted the DC, any assessors of the DC and any user asked to approve the DC.
If public DC access is granted, by setting the 3rd parameter to TRUE, all users will be able to view all DCs as if they were an interested party.
(c)
Production of QA approval listings (TRUE or FALSE)
If the second parameter is set to FALSE approval listings must be produced for a package prior to granting approval.
If your project standards allow, you may change the 2nd parameter to TRUE to inhibit the production of approval listings.
This will cause approval listings not to be produced when users prepare a package for approval using option 1.5.2 — Prepare package For Approval and will enable them to grant approval to a package immediately if they feel able to do so.
(d)
Module integrity 
If the 6th parameter is set to FALSE, a hard copy of modules must be taken prior to module version deletion.
If your project standards allow, you may change the 6th parameter to TRUE to remove the requirement to take a hard copy of a module prior to module version deletion.
All other module version deletion protection rules remain the same.
(e)
QA time-out period 
QATIMOUTPERIOD is the elapsed time for which the process will attempt to complete a QA activity (ie. prepare QA Listings, or Approve Package).
After this time has elapsed, the user who made the request will get a ‘QA Timeout’ message, and the request will be cancelled.
You should have some reasonable figure in here, given the speed of your VAX and the size of the QA activities you expect to be requested.
The timeout is to prevent a non-completable request blocking up the QA system (which is a serial system).
This parameter can be changed at any time, with the process stopped.
(f)
SSLISTS time-out period 
SSLISTSTIMOUT, like QATIMOUTPERIOD, is an elapsed time counter to prevent impossible requests blocking up the system.
It can be changed at any time (with the process stopped).
(g)
Maximum entries in QA PACKAGE 
QAPACKMAX is the maximum number of QA requests which can be outstanding at any one time.
This parameter is used at.
FIL file creation time.
If you expect larger numbers of simultaneous QA activities, increase this parameter before running CREFDL.
(h)
Maximum entries in STORED REQUESTS 
Like QAPACKMAX, STRQSTMAX is a.
FIL file creation time parameter.
It is the maximum number of simultaneous outstanding Offline Package requests.
If you expect heavy use of Offline (which will be particularly the case if you are not using the Module Version Deletion facility), you should probably increase this parameter before running CREFDL.
(i)
Offline time-out period 
STOREREQUESTTIMOUT, like QATIMOUTPERIOD, can be changed at any time with the process stopped.
It is the elapsed time after which a request to Offline a Package will be cancelled if not completed.
(Note that the elapsed time counter for Store Requests only runs while Offline is running).
(j)
Name of error reporting file and max number of errors 
The parameter you may wish to change here is the 10.
As the text explains, this is the number of reports of LIFESPAN system errors which will be written into ERROR.LOG before no further errors are reported.
10 is usually ample, since one small error condition (eg. user out of disk quota) can give rise to several LIFESPAN system errors.
For further information on the process log file, please see Appendix H. The number parameter can be changed at any time, with the process stopped.
(k)
Number of days request may remain in FILE TO STORE RESTORE before reported by integrity checker 
When Option 9.6.0 is used, if any offline request (Store or Restore) has not been serviced during the specified period of days it will be reported.
This may be due to not running Restore or lack of space on Storage Media.
(l)
Whether facilities should be made available or unavailable on start up 
FACILITY_AVAIL is a way of setting the default (power-up) condition of the LIFESPAN process.
It effectively enables you to have the system powered up as though you had already logged in and used Option 7.5.0 to set facilities available/unavailable.
Most processes require AVAIL, but if you wish to prevent inadvertent use of a process, setting UNAVAIL in the configuration file will ensure that no action requests will be accepted by the process, at least until a LIFESPAN user with MANAGER privilege has used Option 7.5.0 to set Facilities Available.
Again, FACILITY_AVAIL may be changed at any time, with the process stopped.
(m)
Maximum entries in SSR SPR LIST REQUESTS 
SSLISTREQMAX, like QAPACKMAX, is used at.
FIL file creation time to determine the maximum number of SSR/SPR Listing Requests which may be outstanding at the same time.
100 should be sufficient enough for most processes; you would need to be using the SPR/SSR system very heavily and producing a large number of listings to exceed 100 simultaneous requests.
(n)
Maximum entries in SPR DISTRIBUTION 
SPRDISTMAX, like QAPACKMAX, is used at.
FIL file creation time to determine the maximum number of SPR distribution messages which may be outstanding at the same time.
100 should be sufficient for most processes.
(o)
Ranges of numbers for paper SPRs 
You can reserve some SPR numbers for use by an existing paper-based system, if required.
Up to ten non-overlapping paper ranges can be defined using the following format:
Where R1A…
R10B are valid SPR identifiers in the range 1000–999999.
Once defined, paper ranges cannot be reduced or removed, although they may be extended.
(p)
Maximum entries in NEW SSR RELATION 
NEWSSRRELMAX, like QAPACKMAX, is used at.
FIL file creation time to determine the maximum number of new SSR relation messages which may be outstanding at the same time.
100 should be sufficient for most processes.
(q)
Hardcopy Process 
The remaining fields in the configuration file are used by the Module Version Management and Hard Copy facilities.
These parameters are described fully in the ‘Operations Guide to LIFESPAN’.
Note that the values which have been supplied above are for a typical medium-sized installation.
Backing Up the Process
This section describes the BACKUP regime required for security of your LIFESPAN database.
Your normal incremental backup regime is adequate for the storage directories — LIFESPAN will detect any corruptions in here (either on processing a move request, or on your running VALIDATE) and demand a good copy from the LIFESPAN Manager.
Note however, that if you do not run VALIDATE frequently (and are not using Offline), infrequently accessed files may not be checked before the tape with the last good copy has been re-used.
(So it is recommended that you get into the habit of running VALIDATE at least as frequently as your tape re-use cycle!)
You can get the incremental backup to backup the database files from the Process Directory.
However, it is imperative that LIFESPAN is not running during the backup period if a consistent set of database files is to exist in the save_set.
It is preferable to take a good static BACKUP at least once a week with the process shutdown, so that the files are in a consistent condition.
If you are concerned about losing user access to LIFESPAN while you take such a BACKUP, you may like to consider having a batch job which, for instance, runs at 2 a.m. every day, shuts down the process, backs up the Process and Working Directories to a save_set on a disk somewhere, and restarts the process.
The save_set will then be picked up by the next incremental backup.
You will of course get a good static BACKUP as part of the Stand-alone save_set, but if you are using tapes, the time taken to restore the LIFESPAN system may be prohibitive.
Validating the Database
This section describes only the facilities available from VALIDATE.
How you actually use them is fully described in the ‘Operations Guide to LIFESPAN’.
VALIDATE offers 3 different facilities.
DELETE UNUSED NAMES
VALIDATE can delete modules names reserved but not used.
This facility can be used to tidy up (eg. delete names reserved more than 6 months ago) and/or to recover from typing errors using Option 1.1.0, Reserve Module Names (eg. you mistyped FRED as FREDA, or reserved module PRODUCTPACKAGE as a Package, not an Issue).
VALIDATE MODULES
VALIDATE can check that, for all storage directories, all the expected files are present and all files present are expected and scan.
Note that this particular facility does not do a CRC check, ie. it would not detect intelligent malicious tampering.
CRC CHECK
VALIDATE can, as a separate activity from VALIDATE MODULES, do a CRC check of all files in a specified storage directory.
This activity will detect any tampering, malicious or otherwise, and will tell you which files should be restored from a BACKUP save_set.
Listings
This section describes only the listings available from LISTREL, the LIFESPAN Relationships Listing Program.
Details of how to run LISTREL are to be found in the ‘Operations Guide to LIFESPAN ‘.
LISTREL enables you to generate three different types of listing.
LIST RELATIONSHIPS
List Relationships can list full or partial tight relationships for all or a part of the database.
It can therefore be used to get a complete list of Module Names and/or a ‘Where-Used’ listing for any module(s) (which can also be acquired using the DC system).
LIST PACKAGE
List Package gives you a full or partial listing of an entire package structure, showing component names, version selected, how selected, warning you if that is not the latest version, the filename it would be read out into, and any DCs referring to the component.
Similar information can also be acquired using LIFESPAN-PMR and LIFESPAN-PI (the Project Management Reports and the Procedural Interface Utilities, which are add-on products to LIFESPAN).
LIST CHARGE CODES
List Charge Codes will give you a listing of all the Charge Codes allocated in the Process, and the Storage Directories to which they point.
DESCRIPTION OF LIFESPAN DIRECTORIES
LIFESPAN Installation Directory
The delivered LIFESPAN software will be loaded into a single VMS directory, which is referred to as the Installation Directory.
This directory should be named with the system-wide logical name SYS$LIFESPAN.
All the files of which LIFESPAN needs only one copy are placed here: this includes command files for the LIFESPAN Manager and users to use, for instance to start and stop LIFESPAN Processes, or to put a LIFESPAN header on a source file.
All the executable files required for the various LIFESPAN activities reside here too, along with certain files to do with the Forms-Driver User Interface, and other files of interest to LIFESPAN Managers.
LIFESPAN will also create files in this directory for its own use — each LIFESPAN Process writes a command file here which will route users to the correct process when they wish to use LIFESPAN.
As a general rule, you should not put any of your own files into this directory.
Whilst LIFESPAN will not modify anything in this directory except its own files, the upgrade instructions may assume that only LIFESPAN files are to be found here.
If you have material of your own in the Installation Directory, it will be your responsibility to make sure that they are backed up before, and properly restored after, an installation or upgrade.
The Installation Directory is also created on each VAX from which LIFESPAN is to be accessed remotely, but only a subset of the delivered files need to be transferred in this case (see Section 1.3).
LIFESPAN Process and Working Directories
Each LIFESPAN Process requires certain directories configured in a particular way.
This section describes in outline the directories required — details of how to set them up can be found in Section 2.
The LIFESPAN database itself will reside in one directory, the Process Directory.
(Note that the database contains the relationships between configurable items, but not the items themselves — LIFESPAN stores these in separate Storage Directories.)
In addition to the Process Directory, each LIFESPAN Process also requires some Working Directories.
These are used by LIFESPAN as temporary storage areas.
They reside on the same device, or pseudo-device, as the Process Directory.
(Use of concealed logicals as pseudo-devices for LIFESPAN Processes is perfectly acceptable — see Section 2 for details.)
The six Working Directories currently required by each LIFESPAN process are called QAWORKSPACE, SSLISTWORKSPACE, OFFLINE_WORKSPACE, MAILWORKSPACE, PMSPACE and HCSPACE.
They are used respectively by QA activities (creating approval listings, approving packages etc.),
SPR/SSR listing operations, Offline store, restore and verification activities, Print Mail Option, and Hard Copy.
A typical LIFESPAN Process will have the following device and directories:
It is obligatory that you keep the Process and Working Directories for each LIFESPAN Process separate from those for other LIFESPAN Processes, otherwise several LIFESPANs could cause fatal interactions between themselves.
This will also assist you in performing upgrades, and is helpful should you require on-site technical support.
LIFESPAN Storage Directories
Each LIFESPAN Process requires a number of Storage Directories (in addition to the Process and Working Directories described in the previous section).
Like the Process and Working Directories, LIFESPANs must not share Storage Directories.
The Storage Directories map onto the Charge Codes set up by the LIFESPAN Manager (see Section 2.7)— this is where your configurable items are actually stored.
Storage Directories may be anywhere on the VMS system on which LIFESPAN resides; they do not need to be on the same device, or pseudo-device, as the Process Directory, nor do they need to be on the same device as each other.
How and where you set up your Storage Directories is entirely a matter of personal preference (and system restrictions!), but we would make two VERY strong recommendations, as follows:
Use of Logical Names for Storage Directories
Once you have told LIFESPAN about a Charge Code (ie. Storage Directory), YOU MAY NOT EDIT THAT INFORMATION.
Therefore, if you give LIFESPAN a physical pathname (eg. DUA0:[LS.TRAIN 1]), you may NEVER move that storage directory without the assistance of SST Technical Support.
This may not seem a problem to you this year, but remember that LIFESPAN handles all your material for up to thirty years — are you sure that your RD54 drive will still be serviceable in 2010?
To give yourself flexibility therefore, you should always refer to your Storage Directories by logical names.
If you then need to move one, you simply reassign the logical.
(The exact procedure to be followed is described in Section 3.1.)
Note, if you are already in this position, please call SST Technical Support for advice.
Separation of Storage Directories
The design intention in providing the Charge Code feature is to enable LIFESPAN sites to account for disk usage by individual groups of LIFESPAN users.
However, you should still separate out your data, even if you do not intend to charge users for disk space.
It should also be noted that the Hard Copy system works on a Charge Code basis and this should also be taken into consideration when identifying your Storage Directories.
Firstly, this gives you greater flexibility in distributing the data around the devices and directories on your system, and secondly, it is useful administratively — for instance, if one project finds that LIFESPAN is giving them data corruption alarms, you will need only to validate their particular Storage Directory, rather than the whole database.
Secondly, you should be aware that VMS itself becomes very slow once a directory has more than a few thousand files in it.
REQUIREMENTS OF VMS ACCOUNTS
The LIFESPAN Process account is required only in so far as a suitable UIC must be available for running your LIFESPAN Processes.
If some other account on your VAX has the relevant Bytlm and Pgflquo etc., then you may, if you wish, use this as the UIC for the LIFESPAN Processes.
A LIFESPAN Process account can be disusered (as in the example shown in Figure 1.2) since it is only ever used for starting the (detached) LIFESPAN Process(es).
It also need have no privileges, since those required are passed to it by the initiator (ie. the LIFESPAN Manager).
For your interest, these privileges are those which are default privileges for the LIFESPAN Manager, ie. SYSNAM, DETACH, TMPMBX, WORLD, NETMBX, LOG_IO and SYSPRV.
In the example, the Process account is in the same VMS group as the LIFESPAN Manager — this is usual, but by no means necessary.
(The process will have SYSPRV and WORLD, so access on group protections is not required.)
Note also that you may have none, one or many such accounts — it all depends on how you want VMS to account for your use of LIFESPAN.
If you are running several LIFESPAN Processes, and wish VMS to account for them all separately, then create several UICs for them.
If you are not interested in CPU time etc. for your use of LIFESPAN, then you will probably only have one LIFESPAN Process UIC, if indeed you have any.
The numerical value of the UIC of the LIFESPAN Process may not be changed once you have started to use Offline: after this time, changing the numerical UIC may prevent Offline being able to restore archived materials.
The LIFESPAN Manager account is required only in so far as a VMS account with the privileges CMKRNL, SYSPRV, SYSNAM, DETACH, LOG_IO and WORLD must be available to start and stop LIFESPAN Processes and to undertake the administrative duties detailed in Section 3 of this guide.
These duties may be undertaken from the System Manager's account if preferred.
Where the VAX System Manager is unwilling to take on the work of LIFESPAN Manager, but is also unwilling to allow other VMS users to have the privileges listed above, the best solution is a Captive Account.
Some sites have tried to build an entire secure environment for the LIFESPAN Manager, such that all the operations foreseen are provided from within a set of command procedures to which the LIFESPAN Manager is tied.
This is not an ideal solution, in that inevitably the Manager also wishes to do some ordinary non-privileged work at the same time.
This usually causes such sites to have two accounts, one being the Captive LIFESPAN Manager, and the other being a less (or non-) privileged non-Captive LIFESPAN Administration Account.
By far the neatest arrangement is to amalgamate the two requirements into a Captive Account with non-privileged break-out.
To do this, you require the VMS LIFESPAN Manager account to have the following privileges:
Authorised: TMPMBX, NETMBX
Default: CMKRNL, SYSPRV, SYSNAM, DETACH, WORLD, TMPMBX, NETMBX, LOG_IO
The account should have the login flags CAPTIVE, DISCTLY and DEFCLI set, and the command procedure which it logs into should only give the account read access by virtue of the SYSPRV privilege (so that the user cannot edit the command procedure after executing the break-out).
Within the command procedure, such activities as VALIDATE, LISTREL, Start and Stop LIFESPAN Processes, etc., are provided.
The procedure should copy any output files produced by these activities into a working area for the user, to which he or she will then have owner access after breaking out of the Captive environment.
When the user selects the Exit MANAGER System option, the command procedure should remove all the additional privileges before depositing the user into VMS.
Since they are default and not authorised, the user cannot regain them, except by logging in again, in which case they are again Captive.
Note that for total safety, the command procedure must also trap to the Exit routine on errors, so that a VMS error cannot leave the user at the DCL prompt with any of the default privileges.
Due to the way VMS handles privilege allocation, the entire command procedure must leave all the privileges set until the Exit option is selected — and this means not using the lexical function F$SETPRV, as this will remove a privilege which is default but not authorised.
If you need further assistance, please do not hesitate to contact SST Technical Support, who will be happy to discuss your requirements with you.
LIFESPAN FILE PROTECTIONS
This appendix discusses the use of ACLs,(Access Control Lists) for controlling access to LIFESPAN.
Refer to the VMS documentation for details of how to actually set up the ACLs.
You may restrict access to files for which LIFESPAN normally requires WORLD:READ or WORLD:READ+EXECUTE access by setting no WORLD access and applying ACLs.
However, if you are going to do this, then you need to set the same ACLs on all the relevant files.
The files on which the ACLs must be set, and their minimum values, are:
If you have created your own LIFESPAN_ROUTER command file (as described in Section 2.11, User Access to Process), then you must also give READ access to this file.
You must also take care that on process startup, you set the ACL with READ access to the command file created by LIFESPAN, ie. SYS$LIFESPAN: <process name>.COM.
You should build this into your LIFESPAN_STARTUP and LIFESPAN_SHUTDOWN procedures.
FMS DRIVERS
Systems with Existing FMS Drivers
To check whether FMS Drivers are installed on your system, type the following commands:
If the drivers are present, each of the above LIST commands will give you an output similar to the following:
If they are not present, you will get an output like this:
If either is not present, then install the delivered versions as described in Section 1.4.
If the drivers are present, then you must check the following points:
FMS Driver Version
You may not run LIFESPAN with an older version of the FMS drivers than is shipped with LIFESPAN.
In order to check the version numbers of the two sets of drivers, carry out the following commands:
(Each of the ANALYZE commands will give many pages of output, hence the /OUTPUT [=file-name;]qualifier!).
Now check the image version and link dates by executing the following commands:
Each of these commands will give you an output similar to the following:
The image file identification (FMS V2.3 in this case) should be the same for the *.
OLD and *.
NEW files, or a later version for the *.
OLD files (ie. your existing drivers).
If your existing drivers have version numbers the same as, or later than, those shipped with LIFESPAN, then you do not need to replace your drivers.
However, you still need to ensure that they are correctly installed for use with LIFESPAN, so please proceed to subsection (b), FMS Driver Protections.
If your drivers are older than those shipped with LIFESPAN, you need to replace them with the LIFESPAN versions.
To do this, follow all the instructions for installing the LIFESPAN FMS drivers as described in Section 1.4, but substitute the INSTALL command ‘ADD’ with ‘REPLACE’.
This simply upgrades your FMS drivers to those shipped with LIFESPAN.
If you are in any doubt, please contact SST Technical Support.
FMS Driver Protections.
If you are retaining your previous FMS drivers because they are the same or later than those shipped with LIFESPAN, you must check that they are installed /OPEN/SHARED, and that they have world read and execute access enabled.
To check world access to the files, execute the following commands:
Each will give you an output similar to the following:
Provided that the last protection listed contains R and E, you do not need to change the protection.
Otherwise, set the protection as described in Section 1.4.
The INSTALL LIST command that you executed at the beginning of Appendix D will show you whether they are installed OPEN and SHARED.
If not, adjust them as follows:
This simply changes the attributes with which the existing drivers are installed.
Note however, that you must ensure they are installed OPEN and SHARED on re-boot; refer to Section 1.5.1, SYSTARTUP.COM, for details.
System Requirements for FMS Drivers
You should read this section if you are installing FMS for the first time, or are not sure if you have sufficient global sections and global pages available.
The FMS drivers require 4 global sections and 178 global pages.
To check that you have this capacity, execute the following commands:
This will give you an output similar to this one:
Your new ‘Global Sections Used’ count will be 4 more than shown on this output, ie., 41 + 4 = 45 in this example.
Unused global pages (140 in this example) needs to be at least 178.
If yours is less, calculate your new required total global pages count as follows:
Your current total global pages count is the sum of the used and unused pages, ie., in this example.
This needs to be incremented by the number of unused pages you are lacking, so in this example we need to add  to our total global pages count, giving us a new required total of 4050.
To find out your current global sections value and check your global pages count, execute the following instructions:
This will give you an output similar to the following:
If the current value of GBLSECTIONS is less than your new count will be, you need to increase it.
Similarly, if your unused global pages count was less than 178, then you need to increase to the value you worked out above.
In the example outputs, GBLSECTIONS needs increasing to 45, and GBLPAGES to 4050.
To increase these values, execute the following commands, replacing the example values with your calculated values:
Neither of these are dynamic parameters, so the new values will not be in force until you reboot the system.
If you have had to increase either of them, you will have to reboot the system before you can install the FMS drivers.
However, there is another system parameter, VIRTUALPAGECNT, which you may also have to increase, so skip to Section 1.6.1 now (otherwise you may have to reboot the system twice!)
MULTIPLE LIFESPAN PROCESSES
Unless you have extremely stringent security requirements, it is strongly recommended that you have only one LIFESPAN Process for all your live data; ie. for all the configurable items you wish LIFESPAN to manage.
Currently, individual LIFESPAN processes cannot communicate at all.
This means that configuration management across process boundaries must be manual.
Our technical staff will be pleased to advise you how best to do this if you absolutely have to, but the best management is of course provided by LIFESPAN, which means limiting yourself to just one process for your live data.
(As you will see from Section 1.3, this does not prevent you from distributing the disk storage requirements across any number of disks and directories.)
VMS PSEUDO-DEVICES (Concealed Logical Names)
This appendix describes how to use VMS concealed logical names as pseudo-device names, for users who have difficulty in meeting the 20-characters maxima for various LIFESPAN device and directory pathnames.
The other use of concealed logicals is to enable you to have VMS directory structures deeper than 8 levels — but you can still only go up to 16 levels, as described below.
Once assigned, a concealed logical is used exactly as a device name would be used, hence you can use the logical as the device name for the LIFESPAN process (ie., the keyword |DEVICE| in the configuration file).
Assigning a concealed logical
A concealed logical is assigned in exactly the same way as any other logical name, except that you specify /TRANSLATION=CONCEALED and you put an extra fullstop (.)
on the end of the directory path.
For example,
allows you to access a file DUA0:[SOFTWARE_LIBRARY]FOO.BAR as either SYS$LIFESPAN:FOO.BAR or as LS$DISK:[000000]FOO.BAR.
(The top level directory of a VMS device or pseudo-device is always treated as though it were a directory file named 000000.
DIR — but read on for warnings about using BACKUP with pseudo-devices.)
The above assignments also gives you a new way of accessing a sub-directory of DUA0:[SOFTWARE_LIBRARY], named DUA0:[SOFTWARE_LIBRARY.PMR].
You cannot access it at all, except as the directory file, with SYS$LIFESPAN (the non-concealed logical)— SYS$LIFESPAN:[PMR]is an illegal syntax, and SYS$LIFESPAN:PMR will only give you access to DUA0:[SOFTWARE_LIBRARY]PMR.DIR, not to DUA0:[SOFTWARE_LIBRARY.PMR].
Using the concealed logical, however, you can gain access to this sub-directory, by referring to it as LS$DISK:[PMR].
You can see that VMS has effectively concatenated the logical name, so that you have in effect typed DUA0:[SOFTWARE_LIBRARY.]
[PMR](which is a perfectly legal syntax).
Hence, you can use the following setup for a LIFESPAN process:
and you can now build a LIFESPAN process whose process directory is actually DUA0:[SOFTWARE_LIBRARY.LSTRAIN.P](whose pathname is considerably longer than 20 characters) but to which you refer as LS$DISK:[LSTRAIN.P](which is well within the 20 characters.)
Note that for use with LIFESPAN processes, the assignment(s) must be system-wide.
Restrictions with concealed logical names
There are two circumstances in which a concealed logical name is not handled in exactly the same way as a physical device name by VMS, and they are (a) BACKUP and (b) in a concealed logical name assignment!
Taking the second first, the pathname specified for the concealed logical must be a physical pathname — you cannot use a concealed logical of a concealed logical in order to traverse deeper than 16 directory levels.
For example,
is perfectly legal, but,
will not work.
With respect to BACKUP, the safest way to handle the use of pseudo-devices, especially if you may be mixing saves and restores on physical devices and pseudo-devices, is to always place yourself in the [000000]directory (whether it physically exists, or is only a notional location, as is the case with a pseudo-device) and use the syntax [*…]
EXAMPLE CONFIGURATION FILE
MAINTENANCE OF PROCESS DIRECTORY
This appendix describes maintenance of the process log file, the mail file and the database details files, and fault reporting by a LIFESPAN Process.
It is normally the responsibility of the LIFESPAN Manager to monitor the process log file, the mail file and the database details files.
However, it is the responsibility of the System Manager to co-ordinate and despatch all Software Performance Reports (SPRs) to the LIFESPAN support service.
Process Log File
The process log file is produced in the Process Directory.
It will have the name specified by the keyword ERROR_FILENAME in the LIFESPAN configuration file, e.g. ERROR.LOG.
On each activation it is extended, and information about start-up time is logged.
During normal operation of LIFESPAN, it is also used to record times of operational data.
More importantly, however, all errors detected by a LIFESPAN Process are reported in this file.
The number of errors which may be reported during any LIFESPAN run is determined by the second parameter of the keyword ERROR_FILENAME in the LIFESPAN configuration file.
Once this number of errors has been reported, LIFESPAN will stop writing error reports to the process log and will simply keep a cumulative total of the number of errors occurring.
This is done to prevent the process log becoming too large.
Often one simple fault, for example an incorrect protection on a storage account, can cause many errors to be reported.
Only the first few of these reported errors are required to trace the source of the error; remaining errors tend to be redundant.
It is the responsibility of the LIFESPAN Manager to decide the number of errors LIFESPAN should report.
It is recommended that if many errors occur, the LIFESPAN Process should be shut down while the source of the errors is determined.
Clearing the Process Log File
On each activation of a particular process, the log file is extended.
Therefore it is the responsibility of the LIFESPAN Manager to ensure that the log file is deleted periodically so that it remains a sensible size.
Note that it can be viewed when the LIFESPAN Process is active, by using the VMS command TYPE to display its contents on the screen.
It should NEVER be edited as this will cause subsequent LIFESPAN startups to fail.
Reclaiming Unused Space in Database Details Files
The size of all the databases details files should be regularly monitored.
If the used space is significantly less than the allocated space for a particular file, the space may be reclaimed by use of the CONVERT utility although this does not apply to the DC transactions file and the QA transactions file (DCSTAT.FIL and QAPACK.FIL in the example configuration).
The size of these files should remain static, and the CONVERT utility must not be used on them.
Files should only require occasional conversion with the exception of the mail file (ALMAIL.FIL in the example configuration).
Mail messages are generated by many processes within LIFESPAN, and all mail messages are stored in the mail file.
Although users may delete their own mail messages as soon as they are no longer required, this has no effect on the size of the mail file, because the space is not reclaimed.
As a result, the mail file can become excessively large.
Note that the startup command file automatically reclaims unused space in the mail file.
This does not cause any mail to be deleted.
To convert a file, carry out the following instructions:—
Ensure that there is enough free space in the Process Account.
The conversion process requires free space equivalent to three times the size of the file being converted.
Shut down the LIFESPAN system (see Section 2.6.2).
It is recommended that LIFESPAN facilities are made unavailable for 30 minutes before the shutdown so that any outstanding transactions may be completed.
(See the Reference Guide to LIFESPAN, Section 11).
Take a backup copy of the file to be converted.
In the event of a failure during conversion, the backup copy may be restored.
In the Process Account, issue a command of the following form:—
CONVERT <filename> <filename>
The conversion process produces a new file.
The protection of the new file will be the default protection for the Process Account, and it should be reset, if necessary, as follows:
This prevents unauthorised access or inadvertent deletion of the file.
After conversion, the protection of the original file should be reset to O:RWED as described above.
It should then be deleted.
The LIFESPAN system may then be restarted (see Section 2.6.2).
Fault Reporting
If a LIFESPAN Process fails or gives unexpected results, then the LIFESPAN Manager for the process must be informed.
The LIFESPAN Manager must stop the process if it is still active and then preserve the contents of the process log file.
An example of a LIFESPAN fault report is shown in Figure H.1.
The error messages in the process log attempt to give as much information about the cause and source of an error as possible.
All detected faults and queries should be reported to the LIFESPAN support service in the form of a Software Performance Report accompanied by any supporting documentation, such as a listing of the process log file.
PREFACE
Purpose
This manual is intended to provide its readers with a general understanding of what LIFESPAN is, what it does and how it is used.
Audience
This manual caters for all new users:
Management concerned with LIFESPAN's overall role in software production and configuration control.
Project leaders concerned with LIFESPAN's impact on routine procedures.
Requirement specifiers, software designers and programmers etc.
No specialist knowledge is assumed.
Terminology as far as possible conforms to that used by the Electronic Engineering Association and the Institute of Electrical and Electronic Engineers in their software standards publications.
Manual Structure
The manual is divided into four parts:
The first part (Sections 1–3) provides a general introduction to LIFESPAN concepts and facilities.
All users should read these sections, from the programmer in daily contact with the system, through to the software manager concerned with its integration into an overall software management system.
The second part (Sections 4–6) deals with specific features of LIFESPAN and in particular provides precise descriptions of LIFESPAN modules, packages and the modification control mechanisms.
The third part (Sections 7–8) describes the additional facilities offered in support of software control, and the Visual Display Unit interface provided for users.
The last part (Sections 9–10) provides information concerning the classification of users and, finally, the organisation of the full set of LIFESPAN manuals.
Further Reading
The route to follow from this manual depends largely upon the reader's special interests:
Technical Following this overview of LIFESPAN's component parts and modification processes, the next step is to gain a more detailed understanding of applying the modularising and packaging techniques, which will be found in ‘Creating and Controlling Modules and Packages with LIFESPAN’.
Online Users The ‘User's Guide to LIFESPAN’ and ‘Reference Guide to LIFESPAN’are documents suitable for all online users.
The ‘User's Guide’ leads users through the log on procedures and describes the various LIFESPAN items, such as Design Changes, SPRs and SSRs.
The ‘Reference Guide’ gives examples of every currently available facility.
Interactive Use The LIFESPAN Procedural Interface (PI) allows access to certain LIFESPAN functions from user-written software while LIFESPAN is still available for interactive use.
More specifically, PI allows user software to generate package structures within LIFESPAN, to read complete package structures out of LIFESPAN, to enter complete structures into LIFESPAN and to list out the details of package structures.
The ‘User's Guide to LIFESPAN PI’ is aimed at programmers and gives detailed instructions on using PI.
PMR The LIFESPAN Project Management Reports product allows online users to produce reports on Design Changes and on Software Performance Reports and Software Status Reports.
The ‘User's Guide to LIFESPAN PMR’ provides guidance to online users on how to use the facility and provides examples of the output that can be generated.
ABLE The Assisted Bulk LIFESPAN Entry product allows the LIFESPAN manager to enrol large quantities of software into LIFESPAN with minimal effort.
Where necessary ABLE will reserve module names and create active DCs to allow subsequent entry to take place.
The ‘User's Guide to LIFESPAN ABLE’ provides guidance on how to run ABLE and the conditions that must be satisfied before ABLE will allow modules to be entered into LIFESPAN.
System Management The ‘Installation and Management of LIFESPAN’ and the ‘Operations Guide to LIFESPAN’cover the subject of system management.
These manuals are intended only for those people closely involved in setting up and managing a LIFESPAN system.
It assumes a detailed knowledge of the computer system being used.
RDBI The Relational Database Interface product allows data held by LIFESPAN to be transferred to a relational database where it may then be queried by users.
Security levels, currently imposed by LIFESPAN, are maintained in the transfer process.
The ‘User's Guide to RDBI’ explains how to run RDBI.
It describes the format of the tables created in the database, the meaning of the associated fields and provides examples of the reports which may be generated.
Introduction
What is LIFESPAN?
LIFESPAN is an automated software management system principally intended for the configuration control of large and/or complex software projects: it is a system for ensuring that precisely the specified software is produced and issued.
The designation ‘software management’ refers to those activities and procedures concerned with orderly file and data handling, provision for the maintenance of standards and, not least, a means of rendering the production process visible.
LIFESPAN's production overhead is very small, so it is also a cost-effective software management system for small projects.
LIFESPAN is equally appropriate for controlling a large number of small projects developed from a common base of software.
LIFESPAN can also be used for a wide range of applications involving the handling of documentation files not necessarily concerned with computer software such as word processing.
The management functions which LIFESPAN supports include:
Controlled access to a securely held set of software.
Automatic enforcement of administrative, modification and quality control approval procedures.
Administrative support for quality assurance activities.
Help for project managers in establishing and maintaining software production procedures and standards.
Help for project leaders in organising and controlling software production.
LIFESPAN Concepts
Origins
The conceptual basis for LIFESPAN was developed during 10 years of long lifetime software production and issue.
The last four years of this time included the operation of a substantial computer-based prototype.
In spite of its limited aims and low-level implementation, the success of this prototype exceeded all reasonable expectations.
Indeed it rapidly became indispensable.
By the end of its life this prototype was controlling over 11,000 software modules, organised into some 500 packages.
By the time a permanent replacement for the prototype was contemplated, it was clear that a definitive method of handling software had been evolved.
This method ensures configuration control of software issues, and forms what is equally clearly the prerequisite of software management.
The concepts embodied in LIFESPAN can be summarised in the following two sets of ideas.
Firstly, LIFESPAN philosophy:
The achievement of a highly reliable level of software management is currently the most important step that must be taken towards overall control of software production, configuration and issue.
The term ‘software’ must be very broadly defined, so that it includes almost all aspects of a project from its specification and design through to the delivery of executable code.
The software management must be ‘language independent’; i.e. the software being managed may be written in any language or combination of languages.
(This ensures a wide field of application and allows for the gradual introduction of new languages such as Ada.)
The software management system must be capable of supporting many different approaches to overall software management schemes.
(This recognises that overall software management legitimately varies between applications and from one organisation to another.)
The required user attributes of the software management system are that it is efficient in operation and supportive of the needs of software producers.
The production of software should be depersonalised in the specific sense that the management system makes it difficult for individual producers to regard items of software as their own.
Secondly, LIFESPAN design:
All information must be formatted so that it is readily visible and intelligible to users: preferably as part of the software objects to which it pertains.
The system must be capable of automatically handling the organisation and upkeep of large amounts of interrelated information, generated by modern software techniques.
Access to software must be regulated so that the software of one producer is protected from all other unauthorised producers.
The management system must store software so that it is secure from illicit, inadvertent or malevolent modification, and ensure that after any movement of software its integrity is maintained intact by performing a Cyclic Redundancy Check.
The management system must provide safe storage, that is, protection against system failure and/or maladministration.
The LIFESPAN System — An Overview
Functional Description
LIFESPAN is an interactive system for managing software throughout its life cycle.
The simplest functional view of LIFESPAN is as a carefully controlled software storage system into which software for most computers (written in any language) can be entered, and which will then serve as the sole source of issuable software.
More precisely, it fulfils two top-level functions:
Production Control Support: LIFESPAN provides a number of automatic mechanisms (e.g. routine administration, modification interlocks) which help to enforce the orderly management of software development and its subsequent maintenance.
Configuration Control: LIFESPAN ensures that a precisely defined set of approved software can be issued and, if need be, re-issued.
Note that the ‘Production Control Support’ function avoids any commitment to the specialised mechanics of software creation, editing, compiling and testing.
As a result, LIFESPAN can be used to control software production and issue for a range of different computers: the only requirement is some form of physical communication with the computer hosting the LIFESPAN system — preferably over a network, but quite feasibly by magnetic disk or tape.
Naturally, in routine day-to-day software production and issue, the project leaders, system designers and programmers see LIFESPAN as a set of lower-level functions which relate to specific LIFESPAN elements and their manipulation.
A comprehensive list of these functions is out of place in this overview, but a glance through the following paragraphs should provide a general impression of LIFESPAN's functional range.
Routine Administration functions:
Ensure that software is uniquely identified in LIFESPAN.
Maintain specified relationships between items of software and ensure that required software is not inadvertently deleted.
Ensure that software cannot be modified without the prior knowledge of all users concerned.
Keep track of software issues both to development teams and to the end user.
Keep track of software performance and status reports (SPRs and SSRs), and ensure that they are distributed to all software users who need to see them.
Ensure that software is safely stored, and that all software and related administrative information is copied to a hard-copy medium (e.g. paper or microfiche) before it is deleted.
Modification interlocks:
Ensure that proposed software changes are agreed by all the users concerned, before any modification takes place.
Ensure that duly modified software has an updated issue number.
Ensure that conflicting modification operations cannot take place.
Ensure that modified software is formally approved before the modification operation is recognised as complete.
Approval processing:
Ensures that only specified users have the privileges to approve software in a given project.
Automatically updates the administrative information which registers approval.
Ensures that formal modifications are carried out only on previously approved software.
(N.B. ‘formal’ modification does not apply to the initial versions of the software which, prior to the first approval, are classified as ‘development’versions.)
Quality Assurance facilities:
Collect together and sort into a manageable form all the software and supporting information that is to be assessed.
Provide information for the user indicating the approval state of the individual items.
Provide information on each module within a package for approval, and the SPR/SSRs which relate to them, to allow the Approver to judge the quality of the package.
Process Modelling facilities:
To provide customisation LIFESPAN allows users to configure lifecycles for objects by defining a number of states, transitions between these states and actions upon entry into a state.
For example, this allows individual modules to be defined to follow different lifecycles and thus behave in different ways.
Product and Marketing facilities:
Allows the user to collect together in one package all the modules comprising a single piece of software which is intended for issue as a product, either internally or to a customer.
Allows a unique relationship to be created between a product and a client.
Offline and Hard Copy facilities:
LIFESPAN's Offline system provides a method of freeing online space while keeping information secure yet easily accessible, by transferring modules to suitable offline media.
The Stand-alone Hard Copy system allows the user to produce, on suitable media, hard copies of online modules.
This allows classified information to be kept extremely secure.
Module Version Deletion:
LIFESPAN notifies users when an intermediate development version of a module is no longer in use and if the user does not indicate a requirement to maintain this module version, LIFESPAN will automatically delete it after a configurable latency period.
Networking:
Networking allows a user on any VAX/VMS node of a DECNET network to log on to a LIFESPAN running on any node of the same network, and to access the full range of LIFESPAN facilities.
All network communications and file transfers are handled by LIFESPAN, so that the user sees no difference between the operation of networked and local LIFESPAN.
LIFESPAN networking includes network error recovery features which allows it to proceed automatically with the transfers into or out of the LIFESPAN database after the network link between the user's VAX and the LIFESPAN VAX has been broken and restored.
It is clear from this list that the use of LIFESPAN encourages an orderly approach to software production without regard to the context of the individual software application.
It can therefore be applied to almost any project.
LIFESPAN Storage
LIFESPAN stores software, software relations, and software control data, as well as a range of supporting information which includes product details, client information and software emission statements.
However, the primary functions of the system — production control support and configuration control — routinely involve only three elements:
Modules units of software
Packages units of control
Design Changes modification control mechanisms.
Each of these elements, in accordance with LIFESPAN's broad view of what constitutes software, is deliberately defined so that LIFESPAN can accommodate many diverse approaches to software design, implementation technique, and project-management procedures.
They are described in the following three sections of this manual.
User Interface and User Mail
LIFESPAN is designed to provide its users with helpful and efficient interactive access on a VDU.
Interaction is entirely conducted by means of display pages:
LIFESPAN functions are requested by selection from option menus
Data is entered by filling in displayed forms
Output is normally in a tabular format
Help can be obtained at any time by pressing the function key reserved for this purpose.
Help text is arranged in a series of levels from brief prompts displayed on the current page to, in some cases, subsequent levels containing several screens of information, guidance and explanation.
A caching facility is provided to allow frequently input data to be stored and quickly recalled to reduce keyboard input.
This cache can be saved and retrieved between sessions
A multi-form index facility is provided to allow the expert user to move quickly between fields, filling in the data in the desired order.
Illustrations of these page types are provided in Section 8 of this manual.
Where inherently slow processes are involved, LIFESPAN automatically sets them up as background activities and employs a mail system for informing users when they have been completed.
To avoid interrupting the user while engaged in some other activity (which may or may not involve LIFESPAN), each user's mail is accumulated until it is convenient for the user to inspect and/or print the messages.
The mail system is also used to inform users when they are due to perform some administrative tasks, such as assessing proposed changes or endorsing SSRs.
Mail messages may be retained for a period of time after initial inspection.
System Management
LIFESPAN takes the form of a set of communicating processes — in particular each online user has a personal copy of the user interface process which sets up its own communication with the main LIFESPAN process.
This user interface process operates within the privileges of the logged-on user and formats all instructions to the main LIFESPAN system.
At installation time, LIFESPAN must be tailored to suit the resources of the host computer.
This chiefly involves specifying the name under which the LIFESPAN process will run, and the allocation of data storage areas and workspace areas on mass storage devices.
It is possible for several separate LIFESPAN systems to be established on the same computer configuration, each with its own allocation of resources, perhaps for contractual reasons.
Note that software in one LIFESPAN system cannot therefore be accessed from another.
Routine management of LIFESPAN includes:
Entering the time of the next LIFESPAN system shutdown (e.g. for maintenance)
Making facilities available or unavailable, as required.
Carrying out routine file back-up.
Administration of procedures for the Offline system.
Otherwise LIFESPAN runs autonomously.
Modules
Definition
Modules are LIFESPAN's fundamental building blocks: i.e. all software, of whatever form and kind, is submitted and retrieved as one or more modules.
The LIFESPAN concept that the term software must be interpreted to cover almost all aspects of a project is expressed in the definition assigned to a LIFESPAN module.
A module is a set of characters which is administered as a single unit throughout the lifetime of the software, and which:
Can be identically stored within the computer
Can be understood, written and maintained by users
Contains an administrative block of data known as a ‘module header’, formatted so that it can be read and analysed by LIFESPAN.
Informally, modules are simply files which include a module header block.
The module header need not necessarily be at the beginning of the file.
The presence of a ‘module header’ does not restrict the generality of this definition, since it can be picked out from a very wide range of module contexts.
In practice, contexts have routinely included text describing software design, command files for compiling and issuing software, test data sets and actual data sets, instructions for carrying out manual procedures and even source text for word processing — this section of this manual is in fact held in such a module stored in LIFESPAN.
In cases where it is impractical for some reason to embed the header into the file, a special type of module, FOREIGN, is defined.
It allows a separate header text file to point to the file or files to be stored.
However, in terms of LIFESPAN modules, a FOREIGN module can be considered to comprise a header text file and its constituent foreign files.
Module headers may also be added to existing software, allowing it to be brought rapidly under LIFESPAN control.
This subject is further discussed at the end of the section.
Module Headers
Module headers are the key feature of LIFESPAN operation and the only direct requirement placed on the software it stores.
Before describing particular details of the headers, two general points and their corollaries should be noted:
Module headers are the sole source of information about a LIFESPAN module, so that:
All of the information needed to manage a module throughout its lifetime is in the header.
All of this information is visible and remains part of the module itself.
Adding a module header to a file (or associating the module header with a file in the case of FOREIGN modules) is the only step necessary to make its contents eligible for control by LIFESPAN.
Module headers permit relationships with other LIFESPAN modules to be specified.
The relationships are transitive, i.e. a related module may have its own relationships which will also be preserved — and so on to any depth, so that:
A module's context can be precisely defined.
LIFESPAN ensures that related modules cannot be deleted inadvertently while the specifying module still exists.
The value of these two attributes has been extensively demonstrated by experience, and they form part of the conceptual basis upon which LIFESPAN has been developed.
An example of the format of a module header is shown in figure 4.1.
The headings to note for the purposes of this introductory guide are those concerned with module management, namely:
MODULE-NAME-IS
MODIFICATION-RECORDS-ARE
MODULE-TYPE-IS
MODULE-SUB-TYPE-IS
MODULE-RELATIONS-ARE
MODULE-NAME-IS states the name by which the module will be known to LIFESPAN throughout its life.
It is suggested that a brief indication of the contents of a module should be given here.
LIFESPAN guarantees that modules have unique names.
This check is carried out when the name is first submitted: to avoid later problems over names clashing, it is recommended practice to reserve module names at the software planning stage.
MODIFICATION-RECORDS-ARE provides a module history of each issue entered into LIFESPAN.
Issue numbers distinguish between two kinds of modification record:
Development Modification Record denoted by an appended letter (e.g. 2.2A).
It is recommended that modules in this state are not formally issued from LIFESPAN, although they may be read and used by anyone with the appropriate access rights.
Approved Modification Record shown without a qualifying letter (e.g. 2.2).
Modules with this type of issue number have been checked and approved.
They may be issued or modified by anyone with the requisite permission (see Section 6 of this manual), who also has the appropriate access rights.
MODULE-TYPE-IS defines the type of the module.
At present there are four types of module: PACKAGE, SOURCE, FOREIGN and PMODEL.
The most common type is SOURCE.
However, in terms of the way modules are stored in LIFESPAN, the most important type of module is the type PACKAGE.
This is the subject of the next section in this manual.
MODULE-SUBTYPE-IS defines the subtype of the module.
This is user definable and allows modules to be defined to follow a specific process model ie. move through a lifecycle of defined states and transitions.
MODULE-RELATIONS-ARE specifies the other modules that are in some way related to this module.
The nature of the relationships is defined by keywords; e.g. ‘REQUIRES-SOURCE-OF’, followed by the name of the module concerned.
Modularisation
It is well recognised that managing software is difficult because it is in essence a control problem, posing questions such as which particular versions of software items should be used at a particular stage of a project for a particular purpose, or what software should be issued to whom, and when.
The consensus of opinion is that a modular approach alleviates the problem.
Consequently, the term ‘modular’ is now in wide use, indeed usage is such that it is almost indiscriminately applied to every aspect of the software industry.
At one extreme it can mean a particular, rigidly constrained, language dependent structure, while at the other it can simply mean that subroutines or procedures are used.
However, software control is primarily an administrative problem in which the exact identity of a module and its relationships to other modules are more important than its content.
In LIFESPAN, therefore, a module is simply an administrative unit.
Module contents can equally well be a program, a suite of programs or two lines of code, a list of design options, sections or individual qualifying sentences in a standards manual, and so on.
In fact, any text that needs administrative control can be included within its scope.
Of course, once an effective administrative mechanism is established, the next consideration is how it can be used to simplify the overall administrative task and make visible what is going on.
If careful attention is paid to the function of modules in relation to the overall structure of the software, as well as to the production method, the number of different combinations that have to be managed can be drastically reduced.
Guidance on this matter is given in the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
Entering Existing Software into LIFESPAN
On first acquiring LIFESPAN, there is usually a need to bring an existing software project under its control in order to gain operational experience.
The only requirement regarding the software itself is that each file should contain a module header.
This is done by adding the header text in the form of an extended comment.
For ease of reading, it is preferable to add it at the beginning of the file, but anywhere else is acceptable, provided that it is contiguous.
Once a basic package is created, all source files may be immediately entered as LIFESPAN modules.
If it is impractical to embed the header in the text of a piece of software, e.g. in object modules or indexed files, LIFESPAN provides an alternative way of bringing such software under its control.
A separate text module of type FOREIGN must be created, which points to the files to be retained in LIFESPAN.
However, this method should only be used in the circumstances described, for the following reason: since it is assumed that such files are not readable, they do not appear in any of the Quality Assurance processes or in hard copy outputs showing module contents.
It is not recommended that the software be re-modularised prior to its initial entry.
It is wiser to undertake this systematically by booking out copies of the originals from LIFESPAN and then reconstituting them into new modules as required.
It is very likely that several attempts will be necessary on the first application, during which time continuing control of the original may be vital.
Any modules which are common to different projects should be included in as many packages as required.
Inevitably, there will be cases where installation in LIFESPAN is urgently required in order to avoid serious control problems.
In such circumstances, the recommended course of action is to mass-produce module headers that contain only the minimum information required.
This will provide the framework for the necessary software re-organisation, which, when it takes place, can be put immediately into effect by way of new LIFESPAN packages.
Thereafter, all software modifications can be carried out under LIFESPAN control.
A stand-alone facility is delivered with the LIFESPAN issue which allows module headers to be mass-produced.
A separate product,LIFESPAN-ABLE,is available to allow large quantities of software to be enrolled into LIFESPAN with minimal effort.
Where necessary, ABLE will reserve module names and create active DCs to allow subsequent entry to take place.
Packages
Definition
Packages form the basis for software control in LIFESPAN.
Each module can only be entered, modified and approved in the context of a package.
However, a module may be a member of any number of different packages.
A PACKAGE is formally defined as a set of modules which are controlled as a single unit for the lifetime of the package.
It is represented in LIFESPAN by
A module of type PACKAGE
A set membership within the PACKAGE module, specified by ‘MODULE-RELATIONS’ with the stem ‘CONTAINS’.
This set may include other packages, i.e. also ‘CONTAINS’ modules of type PACKAGE.
The defining module of type PACKAGE always ‘CONTAINS’ itself, i.e. is specified in its own module relations.
An example of a PACKAGE module is shown in figure 4.1.
Less formally, packages are LIFESPAN's way of controlling the links between its users and the modules stored in the database.
Facilities Controlled by Packages
User access to modules, software approval and quality assurance facilities are all based on packages.
Briefly taking these in turn:
User Access
A user can only enter or retrieve a module, or collection of modules, by reference to a package to which the user has appropriate access rights.
A user can only enter a new module by quoting a package that has that module name already in its module relations ‘CONTAINS’ list.
A user can only retrieve a module by quoting a package that already has a version of it as a member.
In order to create new packages, LIFESPAN automatically manufactures a skeleton form of the PACKAGE module.
That skeleton ‘CONTAINS’ itself so that it can be retrieved by its own creator and expanded to include all its other constituent members.
Software Approval Only a package can be approved.
This automatically confers approval on the individual constituent modules whose selection is LATEST.
Approval is signified by LIFESPAN adding a new Approved Modification Record to each such module.
The approved issue number is formed by deleting the appended letter (for latest development issues — e.g. development issue 2.3K is approved as 2.3) or by incrementing the issue number (for latest approved issues — e.g. approved issue 1.3 is approved as 1.4).
Quality Assurance LIFESPAN provides a number of facilities to assist quality assurance audits.
All of these are based on packages, and packages of packages.
Packaging
LIFESPAN takes no account of the meaning or intent of a package.
A package may therefore contain any mixture of information judged relevant to its application.
For example, it could comprise all the software, command files, standard data files and supporting documentation for a complete software issue.
Alternatively, it could be simply a collection of modules which it is temporarily convenient to modify at the same time.
In determining packaging policy, two criteria relate specifically to the chief functional objectives of LIFESPAN as stated in Section 3 of this manual.
They are Production Control Support and Configuration Control.
Production Control Support
Given the wide definitions accorded to LIFESPAN modules and packages, the various stages of software production, from design and implementation through to issue, can all be planned out as packages and thereby brought under control from the outset.
Although the initial allocation of function and content to some packages will be necessarily vague, their very existence nevertheless provides an invaluable framework for the many specialists working on the project.
LIFESPAN is particularly useful for controlling the design stage since the actions emanating from design reviews can be expressed simply and clearly in terms of modifications to specified modules and packages.
Subsequently, LIFESPAN's formal approval mechanism makes it clear to the project's quality assurance personnel that the required design modifications have been satisfactorily carried out.
A similar benefit applies to implementation plans.
Configuration Control
Configuration problems often arise from the need to issue software in several different variants.
This can be minimised by choosing packages so that the variations are concentrated into as small a number of packages as is practicable.
This simplifies the issuing process itself, as well as making it easier to cope with long-term maintenance.
Design Changes and Quality Assurance
Introduction
Design Changes (DCs) are the fundamental mechanisms which LIFESPAN provides for the basic control of software production and modification.
DCs allow a LIFESPAN user to change software from a known state (i.e. previously approved) through a development cycle to a new state.
The Quality Assurance operation allows a LIFESPAN user to record a decision whether to accept the work done as a result of a DC as fit for its intended purpose.
This section gives an insight into the method of software production and modification that the use of LIFESPAN is designed to achieve.
Specifically, LIFESPAN is designed to avoid at least two fundamental problems:
It ensures that software cannot be changed without the knowledge of the users it affects.
It ensures that different users cannot make changes simultaneously to the same module.
Moreover, it provides documented evidence of what is going on (and what is planned in the future) with regard to change.
Design Changes
DCs are internal to LIFESPAN and they provide the means of regulating and co-ordinating changes made to the modules stored.
When initially entered, a DC comprises:
A unique identifier (assigned by LIFESPAN).
A list of the modules which may be changed.
A definition of the requested change.
As much background information and external references as are required to support the request; in particular, references to Software Performance Reports (see Section 7 of this manual for more information) and other DCs.
The identity of the originator.
Subsequently, the following information is added:
Comments as a result of the acceptance/rejection process by interested parties, their names and dates of comment.
The dates on which the DC passed through each of its states.
The identity of the user currently responsible for the DC (if different from the originator).
Although a DC is the sole permission required for updating software stored in LIFESPAN, LIFESPAN ensures that it is not granted without all the interested parties having agreed to it.
An interested party is:
Any user who is primarily responsible for one or more of the modules listed in the DC.
Any other user responsible for another package that specifies one or more of these modules in its module relations entries.
This ensures that only those who fully appreciate the significance of the modules are included in the sanctioning procedure.
The Design Change Life Cycle
The way in which DCs are processed by LIFESPAN is best explained by following the life cycle of states that a software modification passes through, from the time it is proposed until it is approved as a routine quality control activity.
DC Creation An editing phase during which all the basic information is entered and checked.
Any LIFESPAN user may enter DCs.
DC Proposed The LIFESPAN system determines all the interested parties from the module relationships stored as a result of its knowledge of packages.
The DC is then distributed to these parties using the mail system, to await their acceptance/rejection.
DC Agreed (or rejected)The DC moves to an agreed state if and only if all interested parties agree to its implementation, otherwise it is rejected.
Once a DC is agreed it is possible for work to commence.
In order to do so the DC must be linked to the package in which the work will be undertaken.
DC Active Once linked to a package the DC can be implemented.
During this stage, development versions of modified modules may be entered into the LIFESPAN system.
Once a DC is granted active status, the user responsible for the DC may enter as many development versions of the module(s) as may be desired.
However, none of these modules can be approved while the DC remains in this state.
Approval On completion of the modifications required by the DC, the user responsible for the DC requests an approval operation.
At least one development must have been installed in LIFESPAN.
While in this state, no further modifications may be entered, although it is possible that a quality rejection would cause the DC to re-enter the active state.
Approved The modified modules have all been formally approved and are available for use.
To reach this state:
The module approver has approved each subject module in the context of the package and with reference to the DC, as well as to any other general software standards in force for the project.
LIFESPAN has automatically updated the modification records of modified modules with an approved issue number.
LIFESPAN has removed all locks on these modules against other DCs.
LIFESPAN has notified all interested parties that the amended modules are now available.
If approval is denied to any of the modules, the DC is returned to the Active state.
There are a number of additional operations such as hard copying and cancelling of DCs which, though important, have been omitted from the above description for the sake of clarity.
A full description can be found in the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
Quality Assurance
One of the principal requirements of configuration management is to establish ‘baselines’.
A baseline can be defined as a known and agreed set of modules from which progress to another stage can be made.
The reasons for establishing baselines are many and varied.
Sometimes it is to establish an operational set of software or documentation which will go out into field use.
More often it will be to establish some intermediate way point in the development path of a system; in order to carry out a review, for example, or to provide a frozen issue for prototype system testing.
The idea that a baseline need only be established immediately prior to delivery of an operational system is considered to be unsound.
Establishing Baselines
Typically baselines should be established prior to:
A major review
Some other team using a module
A testing activity
Experimental release of a package.
Thus the establishment of baselines has to be a relatively quick and easy process to encourage development staff to apply them appropriately.
How then is a baseline established?
It clearly cannot be an arbitrary aggregation of versions of modules since it is likely that they would not form a consistent set.
LIFESPAN necessarily takes this clear and simple view of establishing a baseline: ‘a baseline comprises the agreement by a user, holding the necessary access rights, that a package is FIT FOR THE PURPOSE INTENDED of the baseline’.
This fitness for purpose is the basis of all quality approval activities.
LIFESPAN records the fact that this assertion has been made by changing any development versions of modules in a package (including the package module itself) to approved versions and giving them a non-development issue number, such as 2.3 from 2.3C.
Note that there is no implication that this ‘quality check’ found the modules to be of particularly high quality: merely that they were fit for the purpose intended for the baseline.
Clearly if that baseline is a set of drawings for the containment vessel of a nuclear reactor, then the assessor must check them rigorously.
If the baseline is for the purpose of a critical design review of a computer game program, then the assessor might only check that the modules are unambiguous and complete.
Baselines Requiring Design Changes
There are two principal types of baseline establishment.
The first occurs when some previous baseline of the modules exists, i.e., modules in a package have a development path which includes some previously approved modules.
In order to progress from this state, DCs must be raised.
The second occurs when no previous non-development versions of a module have existed.
Here LIFESPAN automatically raises a DC when module names are reserved to allow initial development versions to be entered.
In both cases, usually after several development versions have been entered into LIFESPAN, the developers may decide that the software is in an appropriate state to constitute a baseline.
It is the task of the quality approver to determine if the new versions of the modules adequately address the changes proposed on the DC and that the modules are fit for the purpose intended for the baseline.
In order to do this it is necessary that there is some unit of assessment.
In LIFESPAN this unit is the package.
The entire package is assessed to see if all the modules it contains constitute the appropriate baseline.
LIFESPAN allows this process to begin by first ensuring that no further modifications can be entered into LIFESPAN during the assessment process.
Listings are then prepared to allow the assessor to undertake the task with the best possible information.
Typically, these take the form of:
Listings of all the modules in the package to be assessed
A list of all the related DC identifiers and titles
A list of all the related SPR and SSR numbers.
On completion of the assessment there are only two alternatives.
The approver agrees that the package is appropriate for a baseline and may provide a short approval caveat.
LIFESPAN then:
Adds a new modification record to development modules, translating them to approved issue numbers
Makes available for deletion otherwise unreferenced development modules
Approves the DCs.
Once a package is ‘approved’ the new baseline is established.
The approver decides that the package is inappropriate for the baseline.
LIFESPAN then:
Returns the package for further work.
It is now the responsibility of the person working on the DC to decide whether to continue with the DC or to abort it.
How Quality Approval Works
In order to control the degree of complexity involved, LIFESPAN insists that quality approval works from the bottom up; in other words, a package which is contained in another package must be approved before the containing package can be approved.
The goal of this is to stop needless generation of very large quantities of approval work for each approval attempt.
Parallel approval can be organised procedurally, if this is felt to be required.
One of the most common requests is to approve an already approved module in a different context without changing the version at all, i.e., to add a different approval record without changing the issue number.
This breaks one of the basic tenets of configuration management; that once an object is identified, then the identifier must always refer to an identical object.
Adding a new approval record constitutes a revision to the module.
It must therefore be accompanied by a issue number change.
This is a direct result of making the history of a module an essential part of the module itself, and subject to configuration control.
If a previously approved module is part of a package which is undergoing approval then provided that the module is specified as ‘Latest’, LIFESPAN will automatically give the module the next highest approved issue number and add the approval caveat (if one has been supplied).
If the module is specified as ‘Selected’, its issue number remains unchanged and NO new approval record is written into the module.
Additional LIFESPAN Facilities
Introduction
This section describes the main facilities offered by LIFESPAN other than basic configuration control and modification locks.
Products
When software development is completed, and the software is ready to be issued for use, either internally or to a client, then a package must be created to contain the issue software.
When the package is ready for release, a ‘Product’ is created to act as a meaningful and easily identified reference to the version of the package which is to be released.
A product is therefore not a module, it is merely a title for the whole package to be issued as a single piece of software.
The product referencing the package may be released many times to different clients.
On each release (issue) of the product to a specific client, a further reference called an Issue Identifier is created, which delineates the unique relationship between the product and the client.
The client receives this reference which is used in Software Performance Reports, marketing support and as the unique reference for software issued within a project or organisation.
The term ‘Product’ will apply equally to subsystem packages approved and issued for use in the integration phase of a project and to the more familiar concept of a package supplied to an external customer.
Software Performance Reports/Software Status Reports
Software Performance Reports (SPRs) and Software Status Reports (SSRs) are the means by which the users of software and the maintainers of software communicate.
The users of software include both customers of issued products and development teams using common modules for other projects.
The maintainers are those people whose job it is to make sure that the functionality, performance, documentation and quality of the software are appropriate to its purpose.
An SPR is the means whereby a user reports a fault or documentation error relating to a specific product or module, or makes a suggestion for improving its documentation, performance etc.
LIFESPAN treats SPRs as important items of information which demand a reply.
An SSR is the mechanism provided for replying to an SPR.
Recognising that the originator of a suggestion or fault may not fully understand how that fault is relevant to other users, the SSR provides an opportunity to re-phrase the failure (or error on the part of the user) and respond in a way which is intelligible to other users of the same software.
SSRs may be sent out at any time (not only as a reply to an SPR) providing information to the users of software about its current status.
The overall goal, therefore, of the SPR/SSR system is to keep all relevant people informed of the performance and status of the software stored in LIFESPAN.
In order to achieve this, SPRs (which are normally received from a user in paper form) are entered in summary form into LIFESPAN.
The person charged with entering the SPR into LIFESPAN attempts to identify an issue, and, if possible, the package or module (or several thereof) to which the SPR relates.
This can be done either from information provided by the user or in consultation with the project personnel.
LIFESPAN ensures that an SSR is produced in response to the SPR.
A LIFESPAN user is identified as being responsible for ensuring that the SPR is answered.
LIFESPAN provides a facility for identification of SPRs which are outstanding.
LIFESPAN assists in distributing a knowledge of problems in modules by informing each LIFESPAN user about any SPRs relating to modules which are in packages managed by them.
SSRs generated as a result of responding to SPRs (or simply notifying some item of interest to users) may be linked to all types of modules.
In a similar manner to SPRs, LIFESPAN informs users about SSRs when appropriate.
It is also possible to generate a list of SSRs which are currently relevant to an issue in order to allow appropriate distribution to the external users.
LIFESPAN provides facilities for obtaining copies of SPRs and SSRs suitable for printing on A4 paper.
In common with other facilities of LIFESPAN, SPRs and SSRs are retained in magnetic form for as long as the objects to which they refer themselves exist in magnetic form.
Process Modelling
To provide customisation of object lifecycles LIFESPAN supports process modelling.
Process modelling allows users to configure lifecycles for objects by defining a number of states, transitions between states and actions upon entry of an object into a state.
The current version within LIFESPAN supports process modelling of modules and allows individual modules to follow different lifecycles or process models and thus behave in different ways.
It should be noted that process modelling of modules is offered in parallel with not instead of the normal DC lifecycle.
Entry of modules and formal LIFESPAN approval must still be performed in the normal way via the DC system.
Marketing Support
All external users of products can be registered with LIFESPAN and details held of the products used by each client.
Binary Control
It is recognised that full configuration control of software is not limited to source code and that it is desirable to control the whole environment in which the target machine-code is produced.
This includes operating systems, compilers, system libraries etc.
The underlying principle of configuration control states that it should be possible at any time during the lifetime of a supported product to reconstruct a particular supported version of it to ensure that if a change is agreed and installed, then that change and no other would occur.
In order to do this with absolute certainty the following must be true:
All sources of all emitted software must be retained during the lifetime of the supported product.
The precise versions of any compilers, composers or linkers used in the translation of those sources for a particular product must be available during its lifetime.
Any system or external software built into the emitted version must also be available.
No use must be made of specific dates or times in any build instructions.
The hardware must be in an identical configuration for each reconstruction of a software emission.
Within reasonable cost, it is impractical to obey all of the above on a mini-computer running an executive such as VMS.
LIFESPAN can be used to aid binary control however, since it:
Retains all sources.
Notes (but does not control) all versions of system-wide tools which are used.
However, LIFESPAN does not control the version of VMS, the hardware or the time and date.
If it is essential for the results of a translation process to be retained, then FOREIGN modules can be used to send those results back into LIFESPAN for safe-keeping.
A FOREIGN module is basically a module header, which points to other files that may not themselves be readable and may be impossible to store as source modules in LIFESPAN.
Using this facility, it is possible to retain translated files.
Offline
LIFESPAN allows stored information to be distributed across a number of offline storage media, and the offline facility provides the automatic control of offlining and recovery of modules.
In order to conserve online storage space, it is possible to nominate packages to go into an offline state.
Once the modules in the package are in this state, the only difference noticed by users carrying out normal operations is that should one or more such modules be required in a transfer of a package out of LIFESPAN, the transfer takes longer than usual, since these modules must first be brought back online.
The offline process itself, which most users need not be aware of, is handled by a user with specific offline privileges.
The offline system automatically guarantees that two copies are taken before the online copy is deleted.
Furthermore, regular verification of offlined modules takes place to ensure continued long-term integrity.
The majority of such offline operations are fully automatic.
The user responsible for offline operations must, however, organise the use of the offline units (e.g. disk drives) and media (e.g. disk packs), and investigate any malfunctions.
LIFESPAN can be set to automatically offline modules which have not been accessed for a configurable latency period.
Hard Copy/Module Version Deletion
The hard copy facility controls the production of hard copies of all modules in LIFESPAN, as a further level of security and availability of information.
Intermediate development versions of modules are deleted from magnetic media if they are not referenced by approved packages, and the hard copy process also provides the means of historically checking modules.
LIFESPAN retains full details of all modules, SPRs, DCs etc., which are only available in hard copy.
The hard copy medium may be paper, microfilm or microfiche.
Security
If a user undertakes any procedure which results in the movement of modules between locations, such as booking out a module or performing Quality Assurance activitites, the Cyclic Redundancy Check will be performed on each of the modules which have been moved.
This ensures that the modules have not been inadvertently or maliciously tampered with or corrupted and gives confidence in their integrity.
Using LIFESPAN
Communicating with LIFESPAN
The storage and retrieval system at the heart of LIFESPAN does not have any direct dealings with actual users.
Instead, it deals only with a set of internal user interfaces, which sends both requests and data carrying a known identification to authorise the transactions.
Information and messages are also returned by way of these interfaces.
This storage and retrieval system is not in any way dependent on the means of servicing the other side of the interfaces.
There could be a communications system linking some users via a satellite, or equally well, simply a program running on the same computer as itself.
However, in its standard form the LIFESPAN system includes a program that provides sophisticated VDU (Visual Display Unit) input/output terminal facilities for its online users.
This VDU interface program in fact creates the face of LIFESPAN.
Using the VDU Interface
The VDU interface exploits the full screen display techniques possible with the VDU, so that all interaction takes place via a series of display pages.
There are a number of such display page types:
Index Pages These provide lists of options, from which the user must make a selection to access particular facilities.
The Master Level Index is the main entry point to the entire system, below which there are up to three levels of functional refinement.
Figure 8.1 shows two successive index pages.
In the upper page (Master Level Index)‘Module Management’ is assigned the number 1, Design Changes the number 2 and so on.
Likewise for the lower page (Module Management Index).
Two methods of selection are allowed:
Selection from the displays of successive index pages.
This is useful if the user cannot remember the precise range of options on each page (enter the option number or letter at ‘Your Option:’).
Direct page addressing by entering the succession of actual option numbers as a single selection.
This provides a more efficient mode of working for experienced users (select Option N).
The last two options, N and E, are standard on all index pages.
Option 0 is standard on all index pages, except Master Level Index.
Data Input Pages These require data to be entered into one or more fields, laid out in the manner of a form (figure 8.2).
Each field has a name and space for typing in the corresponding data, and the user progresses from field to field under program control.
There is a facility on certain pages for revising any data previously entered.
Data Output Pages Information output from LIFESPAN is usually displayed as a table with headings and columns appropriate to the subject matter (figure 8.3).
Cache Pages Some information types used by LIFESPAN can be retrieved from a ‘cache’ to avoid unnecessary re-typing of input.
The contents of the cache for any of these types may be displayed as a table and the user prompted for the value to be retrieved.
(figure 8.4).
Multi-form Index Pages In some LIFESPAN options which require a large range of information to be entered, a number of pages may be necessary to obtain the input data.
For the expert user, a ‘multi-form index page’ may be invoked in order to quickly access the desired input field.
The range of input fields used by the option may be displayed as a table and the user prompted for the field to be accessed.
(figure 8.5).
In cases where there is more information than can be displayed on a single screen, scrolling facilities are provided for the relevant section of the table.
In the pages illustrated there is a common page heading confirming the name and version of the LIFESPAN process, the user's identity, the node name of the host process, the option being used and the time until the next LIFESPAN shutdown.
In addition, the page heading shows how many mail messages are awaiting that user's attention, and how many have been inspected but not yet deleted.
A comprehensive description of the LIFESPAN interface is to be found in the ‘Reference Guide to LIFESPAN’.
LIFESPAN Mail
The mail system provides four routine services:
Messages from LIFESPAN to a specific user Usually notification messages that some background task has been completed, or has failed.
Messages from LIFESPAN to several users Usually an administrative service, e.g. notifying all interested parties that a software modification has been requested.
User-to-user messages Any LIFESPAN user can send a message to any other user.
LIFESPAN-to-LIFESPAN messages Usually messages indicating that some requested function has been completed.
The operation of the mail system is wholly automatic and orientated towards the convenience of LIFESPAN users.
Mail messages are accumulated for each user and the number of currently stored messages is shown in the display page header.
After inspecting an item of mail, each user can elect to delete the message or retain it for later examination.
However, to avoid the build-up of forgotten mail, the LIFESPAN manager has two options:
To set a time-cycle for the automatic printing of retained mail messages.
To determine the number of times any message may be printed before automatic deletion.
Immediate Help
The LIFESPAN interface provides a comprehensive help facility for all the currently available options.
Help can be obtained at any point during an interactive session by pressing the function key reserved for this purpose.
The first response is a single line prompt on the current display page.
Increasingly detailed help pages will be displayed if the key is pressed several more times; the complete screen will be used for these, temporarily replacing the original page.
The help facility is very useful, not only for training new users, but also for infrequent users who suddenly find that they have to take over urgent work at short notice.
It also makes LIFESPAN accessible to other normally infrequent users; for example, senior management staff.
For an explanation of the ‘Help’ key and other function keys, refer to the ‘Reference Guide to LIFESPAN’.
User Work Space and LIFESPAN Work Space
Software design and production activities are carried out externally to LIFESPAN and will normally be performed in a number of separate user accounts allocated for that purpose; possibly on a separate computer.
Module and file transfers between LIFESPAN and user accounts are carried out automatically by LIFESPAN in response to a user request.
Should one or more of the modules requested for transfer OUT of LIFESPAN be offline, the whole command is held until the modules are restored online.
Note that LIFESPAN can usually store and retrieve software for foreign computer systems, though transfers to and from the user work space that LIFESPAN can address have to be carried out by the LIFESPAN user.
Finally, note that users never have direct access to the software stored in the LIFESPAN work space.
Moreover, LIFESPAN regularly polices its own work space and can identify any user whose modules have been illicitly changed — no matter how minor the change.
A report is duly sent to the LIFESPAN manager when any such breaches of practice occur.
However, it must be stressed that illegal access to the LIFESPAN work space is only ever possible as a result of a failure in the general security procedures on the computer concerned.
LIFESPAN Users and Privileges
Users
In order to retain flexibility within LIFESPAN, everyone able to use LIFESPAN is called a ‘user’.
LIFESPAN does not specifically recognise job titles such as programmers, analysts or quality assurers; all are known to LIFESPAN simply as users.
Privileges
Recognising, however, that many organisations may allow different users to carry out different activities, LIFESPAN allows users to be assigned one or more access privileges in connection with these varied activities.
It is therefore the responsibility of each recipient of LIFESPAN to determine which privileges should be allowed; for example, which privileges should be allocated to programmers in their organisation.
Users within LIFESPAN are arranged in a hierarchy with the LIFESPAN manager at the top.
The LIFESPAN manager has the full range of privileges available to him and is the only user who exists in a system when it is installed.
The manager has the privilege to create new users who, in turn, may then create other new users, building up families with parents and descendants.
In creating new users a parent grants subsets, up to the full set, of his own privileges to his descendants.
Refer to figure 9.1.
A parent can grant an additional privilege (provided the parent has the additional privilege themself) or rescind a privilege previously granted to a descendant at any time.
Any descendant can amend their own range of privileges, although this must be confined to the set allocated by their parent.
In addition, LIFESPAN always assumes that the parent of a user is the person to whom information is to be sent if a user is in some way deficient in the activities to be undertaken, e.g. failing to respond to a Software Performance Report.
It is therefore recommended that the LIFESPAN user hierarchy should be set up to reflect the structure of the individual organisation concerned.
A detailed explanation with examples of different hierarchies can be found in the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
Typical Users
There are a range of job titles in use in most organisations, some inherent in design and production and some specific to the requirements of configuration control and computer operation.
The following paragraphs suggest what sort of privileges such users might be assigned.
LIFESPAN Manager
Mandatory privileges All
The LIFESPAN manager has all possible privileges on the LIFESPAN system as a whole.
This user's responsibilities include ensuring that there are adequate safety precautions taken in the back-up of the LIFESPAN system, invoking routine processes, and registering new users.
Module Manager
Mandatory privileges None
Typical privileges Create User
The module manager is responsible for a particular module (or set of modules) throughout its life.
This user has access privileges to all of these modules at any time.
Provided that the module is not called up by any packages managed by other users, the module manager can authorise the module to be modified, copied and deleted.
If the module is called up by other packages managed by other users, it can only be modified, copied or deleted if the agreement of the relevant package managers is obtained.
Configuration Manager
Mandatory privileges SPR SSR Controller, SPR SSR Operations
The configuration manager has access privileges to ensure that a particular software configuration is ready for emission as a product, i.e. that a software set has been tested and approved.
This user also distributes the appropriate software performance and status report forms.
Quality Assurer
Mandatory privileges Quality Assurer
The quality assurer has access privileges to packages which are currently undergoing approval.
His responsibility is to ensure that a particular package has achieved the quality standards set by the project which is using it.
This user receives information from LIFESPAN, but only enters into LIFESPAN the fact that a particular quality check has passed, or failed.
Programmer
Mandatory privileges None
The programmer in LIFESPAN terminology has access privileges to the modules and packages with which he is working.
The programmer may also be given temporary access to other modules by way of special links.
This user is seen as the person who will create, enter and modify individual modules and packages.
Sales User
Mandatory privileges Marketing
The sales user has access privileges to client and product information.
The sales user's typical functions include entering new clients' names, the products which they have purchased and the maintenance agreements for which they have contracted.
Computer System Manager
Mandatory privileges None
The computer system manager has no specific LIFESPAN privileges, but does have access privileges to the computer system(s) on which LIFESPAN runs.
He is responsible for the day-to-day running of the computer system, installing new software and setting up the accounts on which LIFESPAN users will do most of their work.
Computer System Operator
Mandatory privileges None
Normally involved only in the administrative side of LIFESPAN, carrying out tasks such as loading the offline media.
Module Owner
Mandatory privileges None
The module owner is generally the person or organisation who pays for the module (or modules) to be developed, although this user has no specific LIFESPAN privileges.
Documentation Structure of LIFESPAN
Five other manuals make up the remainder of the LIFESPAN documentation.
The following paragraphs briefly describe each of the LIFESPAN manuals in turn and indicate the users to whom they will be of most interest.
Creating and Controlling Modules and Packages with LIFESPAN
This manual provides guidance on how best to use LIFESPAN.
It recommends how to generate modules, and what they and their module headers should contain.
It explains the relationship between packages and modules in some detail and provides guidance on the packaging of software.
Examples are given of setting up user hierarchies in terms of accessing modules.
All the background information about the Design Change system, Quality Assurance operations, SPRs and SSRs, the Offline system and Products can be found in this manual.
Intended audience programmers, module managers, and quality assurers.
User's Guide to LIFESPAN
All the everyday LIFESPAN facilities can be found in this manual.
It explains how to log onto LIFESPAN and how to use the LIFESPAN system of indexes and pages which appear on the screen.
Intended audience assistant programmers, programmers and quality assurers.
Reference Guide to LIFESPAN
This manual contains information on every LIFESPAN page which may be invoked.
It gives a summary of each page, a representation of the page and a description of the inputs required and the outputs obtained.
The manual also contains a glossary of commonly used LIFESPAN terms.
Intended audience assistant programmers, programmers and quality assurers.
Installation and Management of LIFESPAN
This manual describes how to install a LIFESPAN system.
It explains how to go about adjusting LIFESPAN for a particular application: for example, allocating the resources and privileges of the LIFESPAN accounts.
It explains how to introduce new users and how to carry out the day-to-day checking of the operation of the LIFESPAN system to detect discrepancies and deficiencies.
Intended audience LIFESPAN managers and computer system managers.
Operations Guide to LIFESPAN
This manual discusses how to manage LIFESPAN once it has been installed.
It describes how to run the LIFESPAN Hard Copy, Module Version Deletion and Offline systems.
It also describes how to run the Validate program to check the integrity of the LIFESPAN database and the LISTREL (LIFESPAN Relationship Listing) program to produce a variety of reports on the contents of the LIFESPAN system.
Intended audience LIFESPAN managers, computer system managers and computer system operators.
The remainder of this section briefly describe the manuals that are available for related LIFESPAN products.
User's Guide to LIFESPAN PI
This manual explains how to use PI, the LIFESPAN Procedural Interface product, which allows users to write software to access certain LIFESPAN functions while LIFESPAN is still available interactively.
It describes the interface procedures and required environment for the interface software.
Intended audience programmers and LIFESPAN managers.
User's Guide to LIFESPAN PMR
This manual explains how to use PMR, the LIFESPAN Project Management Reports product, which allows online users to produce reports on Design Changes and on Software Performance Reports and Software Status Reports.
Examples are provided on the types of reports that can be generated.
Intended audience LIFESPAN users.
User's Guide to LIFESPAN ABLE
This manual explains how to use ABLE, the Assisted Bulk LIFESPAN Entry product, which allows the LIFESPAN manager to enrol large quantities of software into LIFESPAN with minimal effort.
Intended audience LIFESPAN managers.
User's Guide to RDBI
This manual explains how to use LIFESPAN RDBI, the Relational Database Interface product, which allows data held by LIFESPAN to be transferred to a relational database, where it may be queried by users.
Examples of the reports which may be obtained by the facility are provided.
Intended audience LIFESPAN users and LIFESPAN managers.
PREFACE
Purpose
This manual provides instructions for operating the LIFESPAN.
In particular, it covers running and controlling the offline system, managing the Hard Copy and Module Version Management facilities, and running the LIFESPAN Validation Program.
audience
This manual is essential reading for the LIFESPAN Manager, Offline Manager and Offline Operator.
The LIFESPAN Manager is responsible for the organisation of a particular LIFESPAN system on the computer, assigning charge codes, controlling availability of the LIFESPAN facilities etc.
The manual assumes that all readers are familiar with the basic concepts of LIFESPAN and the VAX/VMS operating system.
Manual Structure
Sections 2 and 3 define the function of the Offline system and give detailed information about setting up offline types, units and items and how to perform an Offline run.
Section 4 describes the role of the Hard Copy system.
Section 5 describes the functions of the Module Version Deletion facility
Section 6 describes the function of the Validation facilities
Section 7 describes the reports and listings facility, LISTREL.
INTRODUCTION
This manual is written for LIFESPAN Managers, Offline Managers and Offline Operators, and each section begins by defining the person or persons for whom it is intended.
It is recommended, however, that LIFESPAN Managers should at least be familiar with every section of the manual.
OFFLINE OPERATOR INSTRUCTIONS
This section describes the procedures which a user designated as the ‘Offline Operator’ should follow to satisfactorily carry out the requests made by an Offline run.
It should be read by the LIFESPAN Manager, Offline Manager and the Offline Operator.
The following terms, explained below to avoid confusion, are used in this section:
Media type The various categories of media which can be used to store files, for example, disks or magnetic tape.
Media item One item of a particular media type, for example, one disk or magnetic tape.
Media unit The unit on which a particular media item may be mounted.
Operator terminal The terminal, nominated at Option 9.2.0 to handle a particular Offline run.
The terminal must be free for use at the time of the Offline run.
Note that two terminals may be required for the Offline process: the Operator terminal and one other to handle normal LIFESPAN operations and to set up the Offline run.
Responsibilities of the Offline Operator
This section describes the procedures required to mount and dismount media items for the Offline System.
These procedures are the responsibility of a user designated as the Offline Operator,who does not, however, require any knowledge of LIFESPAN in order to fulfil the requirements of the Offline System.
The Offline Operator does not log onto the LIFESPAN system or VMS, as the Offline System will start automatically on the Operator terminal at a time previously specified by the Offline Manager at Update Offline Parameters (option 9.2.0).
If the Operator terminal is in use, the Offline System will try to access it several times in quick succession; if it remains unavailable the Offline run will not take place and a message reporting the situation will be sent via the mail system to the Offline Manager.
When the VDU is free and has been allocated to the current Offline run, the Offline System will present a display similar to that shown in Figure 2.1.
The screen is made up of six windows, each of which can display the current activity of one handler controlling one media unit.
The allocation of media units to handlers is time-dependent.
The number of handlers used depends on the number of units available, the operations which those units can perform and the number of items which require to be offlined.
The screen is non-operator driven which means that the Offline System will position the cursor where it requires the Offline Operator to enter information.
When the screen is accessed for the first time for any Offline run, the system will position the cursor at the first field requiring an entry.
If the Offline Operator does not want to enter information, or has finished entering information but does not want to action it, the TAB and BACKSPACE keys can be used to move to the next or previous field requiring an entry.
When the system requires information in a particular window to be actioned, the cursor will be positioned at ‘Enter’ in that window, and the Offline Operator should provide a suitable reply, then press the RETURN key.
If the Offline System does not require any information to be entered, the cursor will be positioned at the bottom of the screen.
Mounting and Dismounting Media
It is via these windows that the system informs the Offline Operator what is happening and requests a media item to be physically mounted or dismounted on the appropriate media unit; in this case mounting refers only to the action of placing a media item onto a media unit.
HANDLER n Indicates which handler is dealing with a particular media unit.
Up to six media units can be handled at one time.
The following may also appear beside the tag to indicate the current state of the media unit in the Offline cycle:
STOREPRIMARY, STORESECONDARY The media unit is in a store cycle, during which files are offlined.
For integrity purposes, two copies are always made before a file is deemed to be ‘offline’.
These copies are referred to as the Primary and Secondary copy.
The order in which the copies are made depends on the availability of media units and items.
RESTORE The media unit is bringing files back from offline to online status.
VERIFY The media unit is reading the files on the media item to check that they have not been corrupted.
NONE The handler has finished all available work.
UNIT The descriptive name of the media unit onto which the media item should be placed as defined previously by the Offline Manager using option 9.4.0.
The media item to be mounted on the media unit is shown at the bottom of the window by a six character volume identifier, which consists of the two character LIFESPAN process Id as specified in the configuration file, concatenated with the four digit item number previously entered by the Offline Manager using option 9.3.0.
Spaces cannot be incorporated, so leading zeros must be used.
FILE ID The number generated by LIFESPAN in order to identify the file currently being offlined.
This is updated as the system works through the files to be offlined and copies them onto the media item.
WRITE The WRITE permit which should be physically allocated to the media item by the Offline Operator when it is being mounted.
It depends on the operation which the Offline System is to carry out, as follows:
WRITE PERMIT For Store Primary/Secondary
WRITE LOCK For Restore/Verify
Enter The action the Offline Operator should take is indicated here.
When a media item is to be mounted, its identifier will be displayed.
When a media item is to be dismounted, the message DISMOUNT appears.
According to the instruction, the Offline Operator should physically mount or dismount the media item from the specified media unit.
For a mount the Offline Operator must respond with one of the following:
MO Mounted OK — the media item has been loaded onto the unit
M_N Media Not Available — the media item is not available at the present time ie. it is in a locked cabinet, inaccessible to the operator.
In this case LIFESPAN will select the next available media item.
M_F Media Failure — the media item has been previously reported as faulty.
In this case, LIFESPAN will select the next available media item.
The fault media item can be physically inspected and, if it is found to be usable, its state can be updated using option 9.3.0 to make it available to LIFESPAN.
U_N Unit Not Available — another user is currently accessing the unit which is being requested by LIFESPAN.
In this case, LIFESPAN will select another unit.
U_F Unit Failure — the unit being requested by LIFESPAN is currently reported as faulty.
This unit will not be accessed by LIFESPAN until its details have been updated using option 9.4.0.
If the Offline Operator enters an illegal reply and presses RETURN, a message will appear at the bottom of the screen offering the alternatives.
The cursor will then be positioned at the bottom of the screen for the operator to type a further suitable reply.
For a dismount, the Offline Operator need only press RETURN to acknowledge that the dismount has been performed.
Difficulties Encountered During Offline Process
If the wrong media item or the correct media item with an incorrect write permit is mounted, the Offline Operator will be requested to dismount the media item from the media unit.
After dismounting the media item the Offline Operator should reply by pressing RETURN with the cursor positioned in the appropriate window.
The Offline Operator will then be requested to remount the media item correctly.
If the screen becomes corrupted while the VDU is in use, for example with VMS system messages, the Offline Operator can refresh the screen by pressing ‘CTRL W’.
Finishing Work
When the Offline System has finished work on a particular media item it will request the Offline Operator to dismount that item.
Once it has been dismounted, the Offline Operator should press RETURN to which the Offline System will respond as appropriate.
When the Offline System no longer requires the VDU it will release it back to VMS for normal use.
This state is indicated when all the handlers have completed their workload, their entries remain blank and the cursor is positioned at the bottom of the screen.
The Offline Operator can now press RETURN to see the ‘Username:’ prompt.
Initialisation of Media Items
Media items to be used in the LIFESPAN Offline System must be initialised before use.
At the VMS $ prompt, type the following:
INITIALIZE
The name of the media unit in use.
The volume identifier for the media item.
This consists of the two character LIFESPAN process Id as specified in the configuration file, concatenated with the four digit item number previously entered by the Offline Manager using option 9.3.0.
Spaces cannnot be incorporated, so leading zeros must be used.
For example: INITIALIZE CSA1: LS0001
Random Access Media Items
When random access media items are being used, each media item must have a directory on it whose name is the same as the LIFESPAN process directory.
This directory is created after the media item has been initialised and before it is used for an Offline run.
GETTING STARTED WITH OFFLINE
This section provides a step-by-step guide for users setting up Offline for the first time.
The use of the LIFESPAN options themselves is described in detail in the ‘Reference Guide to LIFESPAN’.
Media Types
The first step in using Offline is to tell LIFESPAN about the kinds of media you will use.
Each type of media is given a code number (eg. 1 = TK50, 2 = 1600 bpi magtape), and some data about its performance, eg. total number of blocks.
Option 9.5.0, Update Media Types, is the option for entering this information.
Available Units
Once LIFESPAN knows about the media types, you can then proceed to tell it about the units on which these media types can be used.
This information is entered on Option 9.4.0, Update Availability of Units.
Here, each unit available for Offline's use is given a code number, and a descriptive and physical name (eg. 1 = MUA0:, TK50 DRIVE).
The other information entered here is the media type to be loaded on the unit,(as specified using Option 9.5.0), an estimate of the performance of the drive in time per block, and the types of Offline operation you wish the unit to be used for (selecting from Primary copy, Secondary copy, Verification and Restores, or combinations thereof.)
Available Media Items
Now that LIFESPAN knows about the media types and units it can use, you can tell it about the specific media items you have available for it.
Offline will not initialise these items; the Offline Manager (usually the LIFESPAN Manager) must prepare the items for Offline's use.
Each item has a unique 4-digit code,(0001 to 1000) and the label with which the item must be initialised is the LIFEID from the Configuration File (eg. LT for the LSTRAIN process, LL for the LSLIVE process) concatenated with this 4-digit code.
Thus, for instance, if 0323 is a TK50 cartridge for use by LSLIVE, you must initialise it /LABEL=LL0323.
LIFESPAN Option 9.3.0, Update Availability of Media, enables you to tell the system, for each 4-digit code, what media type it is (as specified using Option 9.5.0).
When using this option to introduce new media items, you must tell LIFESPAN what state it is in, selecting either 1, to reserve the code for an item not yet initialised, or 2, to indicate that the item is initialised and can be used.
Obviously, if you have only reserved the code, you must re-enter Option 9.3.0 when the item is initialised to change the state to 2.
Offline Parameters
Once LIFESPAN knows about its media types, available units and has some media items available for use (ie. in State 2), it is ready for the first Offline run.
Option 9.2.0, Update Offline Parameters, is used to schedule the next Offline run.
A VT100-compatible terminal must be made available to Offline, on which instructions will be given to the Offline Operator about which media items to load on which drive.
Using Option 9.2.0, you give LIFESPAN the physical name of the terminal (eg. TTA6:) and the time of the next required Offline run.
It is your responsibility to make sure that at that time, the specified terminal is connected and not logged in — Offline will not allocate a terminal to itself if it is already allocated to another VAX process.
Option 9.2.0 also allows you to automate subsequent Offline runs, in that you specify an interval between Offline runs.
Once this run is completed, Offline will automatically update the next Offline run start time by adding the interval to the current start time.
You may also limit the duration of the Offline run if, for instance, you have only one tape drive and need to make it available for other operations.
Option 9.2.0 will also ask for the ‘Verification latency’— here you tell LIFESPAN to verify all Offlined material, for instance, within 90 days, but not more frequently than within 30 days.
The final two fields on Page 9.2.0 refer to the scheduling of Primary and Secondary copying.
Offline will always take two copies of Offlined material, seeking one media item available for Primary copies and another available for Secondary copies.
(They may be the same type of media, but will always be different media items.)
The field ‘Split-type working’ allows you to specify that Primary and Secondary copies must be stored on different media types.
In order for Split-type working, you must of course have two different types of media available.
(Offline cannot enforce Split-type working if you have only one media type and/or only one available unit!)
The field ‘Simultaneous media copies’ allows you to specify that Primary and Secondary copies may not be mounted simultaneously.
You may choose to do this for safety reasons, since if both copies are ruined simultaneously by a fire in the computer room, no amount of intelligent software can replace the material.
If you decide to allow simultaneous copies, you must of course have at least two available units.
If you disable simultaneous copying, you must remember to switch between Primary and Secondary Offline runs, to enable both copies of all offlined material to be made.
Giving Offline Some Work
Offline is now ready to work for you.
To check that everything is set up correctly, submit a package to be offlined, using Option 9.1.0, Request Package to be Offlined.
Next time offline runs (as specified using Option 9.2.0), one or both copies of the package will be offlined (depending on whether simultaneous copies are enabled.)
If for any reason Offline cannot make the required copies, a LIFESPAN mail message will be sent to the Offline Manager, giving the reasons for the failure.
Common Start-up Problems
The commonest start-up problem is not giving Offline the media items to make the copies.
If you have material to be offlined (which you can check using Option 9.8.0, View Offline Workload), then you must have two separate media items available (in states 2 or 3 on Page 9.3.0), one for Primary copy and one for Secondary.
Another common problem is forgetting to switch between Primary and Secondary runs when simultaneous copying is disabled.
Finally, some sites may experience problems if they are restricting the use of the available units to specific operation types — it is no good having a TK50 available for a Primary copy if the only unit available is either not a TK50 drive, or is set to Secondary copies only!
As with all other learning curve problems, please do not hesitate to contact SST Technical Support if you are having any difficulties.
HARD COPY SYSTEM
Introduction
This section describes the Hard Copy system.
It should be read by the LIFESPAN Manager and a user designated as the Hard Copy Manager.
The Hard Copy system is a stand-alone facility which controls the hard copy production of all modules (Source, Package, Foreign or Pmodel) in LIFESPAN.
It produces condensed volumes of modules which can be reproduced on paper, microfilm or microfiche.
In addition, a detailed index is maintained which provides a reference to the location and state of hard copied information.
Charge Codes
The Hard Copy system works on the basis of charge codes: when a particular charge code is specified in the configuration file, as described later in this section, all modules with that charge code, except those specified using the description and code filter, will be hard copied.
Note that modules can only be hard copied if they are online and cannot be nominated for hard copy individually.
Also modules which have been entered into LIFESPAN with no SYSTEM DELETE protection cannot be Hard Copied.
Volumes
When hard copied, module images are held as pages in ‘volumes’ whose attributes are defined by the user.
The volumes are grouped into sets, which can contain as many volumes as required; each set stores data which is associated with one charge code and selected by a classification filter.
All volumes in the set have the same name, which is specified by the user in the configuration file and concatenated by LIFESPAN with a serial number.
This number is incremented every time a volume is added to the set, for example: PROJECTX.001, PROJECTX.002, etc.
A volume set can be formatted for and produced on any of the three available media types (paper, microfilm or microfiche).
There is no limit on the number of volume sets which may be defined for a particular installation, as the number produced depends on the number of charge codes for which modules are to be hard copied and the number of modules to be hard copied for those charge codes.
Running the System
The Hard Copy system is provided as three stand-alone programs which should only be run when the LIFESPAN process is not running:
HARDCOPY FORMATTER which is designed for batch use.
HARDCOPY VERIFIER for interactive use.
HARDCOPY SUMMARY which can be run either interactively or in batch
There are, however, four stages involved in running the system:
Configuration File This must be edited for each hard copy run, to contain the keywords which dictate the format of the hard copy volume sets and the charge codes for which modules should be hard copied.
HARDCOPY FORMATTER This program, HCFORMAT.EXE, formats modules of a specified charge code and classification into the volume sets as specified in the configuration file.
Media Production The contents of the files produced by the HARDCOPY FORMATTER must be transcribed onto the desired hard copy media, then checked visually by the user to ensure that a good copy has been produced.
HARDCOPY VERIFIER Once the user has decided whether to accept or reject hard copy volumes, this interactive program, HCVERIFY.EXE, is run to inform the hard copy system of the decision.
Hard Copy Media
Module images are produced in pages as in a computer listing, but are ordered and displayed differently according to the media type chosen, and the settings in the configuration file, as described later.
There are three types of media which can be used with the hard copy system:
Paper This is bulky, but easily produced, so it is most appropriate for a small quantity of highly confidential material.
The attributes specifed in the configuration file allow the layout of the page to be formatted to suit the printer used.
Microfilm This is compact, easily stored and accessible, but more difficult to produce than paper.
The pages in the magnetic file should be reduced and photographed side-by-side.
They must then be viewed with a microfilm reader.
Microfiche Like microfilm, this is compact, easily stored and accessible but more difficult to produce than paper.
The pages should be reduced and photographed in columns into the microfiche matrix, the top row of which is reserved so that legible headings or titles can be added to identify the microfiche when it is produced.
They must be viewed with a microfiche reader.
Hard Copy Index
The Location file acts as an index, and keeps a record of the location and state of modules which have been hard copied; it should be printed using the VMS PRINT command, but not deleted.
In the example configuration file (EXAMPLE.DAT) this file is held in the process directory as HCLOCATE.FIL.
It must NOT be deleted, as in this event the hard copy location of all previously hard copied items will be lost.
The file is built up as each module is hard copied and holds the following information:
the names of modules formatted in a particular volume.
the version numbers of those modules.
the hard copy location of the modules, which for paper and microfilm includes a page reference and for microfiche a grid reference, together with the name and number of the volume in which it is located.
a marker to show the current hard copy state of the module.
When modules have been formatted but not verified the entry in the Location file is marked with an asterisk (*).
If a volume is accepted by the user and verified by the HC VERIFIER, the asterisk is removed, but if a volume is rejected by the user the modules they contain are removed from the Location file.
Hard Copy Manager
Most LIFESPAN users have no contact with the Hard Copy system.
Its operation is entirely controlled by a user designated as the ‘Hard Copy Manager’, who should have access to the LIFESPAN process account password.
This user's duties involve:
specifying the charge code and classification for which modules will be hard copied.
maintaining the configuration file for each hard copy run.
running the HARDCOPY FORMATTER in order to produce formatted files in the hard copy directory.
arranging the transcription of the formatted files onto the appropriate hard copy media.
viewing each media item to ensure that all of it is readable, and repeating the transcription if necessary.
running and responding to the HARDCOPY VERIFIER to let LIFESPAN know which hard copied volumes are to be accepted or rejected.
Configuration File
For each hard copy run, this file must be edited to contain several keywords which control the hard copy run.
They are used by the HARDCOPY FORMATTER to control the format and characteristics of the volumes, for example the number of pages per volume and the type of media chosen; they also control the amount of space available for use within the hard copy workspace during the hard copy run.
These hard copy keywords must be entered as the final keywords in the configuration file.
The first two keywords, HCFILES and HCSPACE, define the initial parameters for all hard copy runs; the remaining three, HCSET, HCMAP and HCTRANSTAB define the format of the pages and should always be entered together in a group for each charge code for which there is to be a hard copy run.
All the keywords can be left in the configuration file, as the parameter given for the keyword HCMAP dictates whether a volume set will be prepared for hard copy or omitted from the hard copy run.
If the keywords are ever removed and re-entered, they must have the same attributes as before.
The attributes of any volume which is empty or full after a hard copy run may be changed, with the exception of the volume name and charge code; the minimum fill mark of partially filled volumes may be revised between hard copy runs.
The definition and format of each keyword is described below.
Note that the vertical bars must be included as part of the syntax, as they separate parameters within each keyword.
HCFILES
This keyword is used to specify the database details files for the hard copy operations.
Two files are included: the Volume file, HCVOLUME.FIL, which maintains the attributes of the hard copied volumes as specified by the keywords HCSET, HCMAP and HCTRANSTAB, and the Location file HCLOCATE.FIL, as described before.
It must be entered in this format:
HCSPACE
The Hard Copy manager should supply two parameters for this keyword: the name of the hard copy directory and the maximum amount of space to be used, in that order.
It must be entered in this format:
where:
directory the name of the hard copy directory, including square brackets [].
A device name must not be included, as the process account device is used.
Logical assignments may not be used for the directory name.
limit the maximum amount of filestore available for use, in 512 byte blocks.
HCSET
Parameters should be supplied after this keyword to define the format, assembly and security classification of each volume.
The name and classification must be entered as the first and second parameters; thereafter parameters may be entered in any order.
Note that LIFESPAN uses the last occurrence of any parameter defined more than once.
A maximum of 11 fields including the keyword are permitted, however, if the maximum is exceeded the extra fields will be ignored but no error message will be displayed.
If any errors are detected in any of the entries, the volume will not be used.
In the example given below for each entry, the default settings are used when a parameter is omitted.
The keyword should be entered in this format:
where:
name the hard copy volume name, up to 12 characters long including spaces.
If a volume is filled before data for the specified charge code is exhausted, the next volume in the set for that charge code is opened.
The extension at the end of the volume name is incremented each time a new volume in the set is opened, for example: STDMAN.002, STDMAN.003 and so on .
classification the classification to be given to the volume; this is only retained as a reminder to the user of the overall volume classification.
It can be in free format excluding the | character (vertical bar).
attributes the specifications for the format of the volume.
There are nine attributes as described below.
Note that PV and GR are mutually exclusive, as PV indicates the format for paper/microfilm and GR the format for microfiche.
The other attributes are optional and may be entered in any order.
The dimensions are supplied in inches to allow different paper sizes to be used and USEFORMFEED and USETAB allow more sophisticated printers to be used.
It is the Hard Copy Manager's responsibility to set the printer to match the volume attributes; no printer setting codes are issued as the range of printers is diverse.
PV the number of pages per volume for paper and microfilm up to a maximum of 9999, in this format:
Any record in the module which exceeds this width is flagged with <OVFL> in the right hand margin of the formatted line to indicate that it has overflowed.
The record will be continued on the next line.
PD the page depth in inches, in this format:
MF the ‘minimum fill percentage’ of the volume.
This is the percentage mark at which the volume will be considered full if the next module to be formatted requires more than the residual space in the volume.
It is a safeguard to permit volumes to be regarded as full when exact filling is not possible.
It should be entered in this format:
USEFORMFEED pages in the volume will be separated by formfeeds.
The default is that formfeeds will not be used.
If required it should be entered as follows:
HCMAP
This keyword specifies whether the volume can be used for formatting and which modules will be hard copied.
It should be entered in this format:
where:
parameter this dictates whether a volume will be opened for the hard copy run.
Only one of the following parameters must be entered:
PREPARE which allows the volume to be used for formatting.
OMIT which prevents the volume from being used for formatting.
charge code the charge code for the volume, in digits.
description filter this defines the security classification filter, as specified in DESCRIPTION-IS under the module header keyword CLASSIFICATIONS-ARE.
The filter dictates which modules should be included or excluded from the volume.
code filter this defines the security classification filter, as specified in CODE-IS under the module header keyword CLASSIFICATIONS-ARE.
The filter dictates which modules should be included or excluded from the volume.
Each filter element must begin with one of the following characters:
= (equals sign) to indicate that the module should be included if the filter matches the classification.
<> (angle brackets) to indicate that the module should be included if the filter does not match the classification.
An asterisk (*) and a question mark (?) can be used as wild cards within the filter text to indicate that any other matching characters should be included.
More than one filter element can be provided within each filter element, in which case they must be separated with ampersands (&).
However, the ampersand acts as an ‘or’ qualifier, meaning that only one of the elements specified, the one which matches first, will be acted on.
For example:
This will include any module whose DESCRIPTION-IS and CODE-IS classification begins with either TOP or CONF.
Note that a filter element such as |<>TOP*&&<>CONF*| will allow all modules to be hard copied, as all those failing the first filter will satisfy the second.
HCTRANSTAB
This permits the Hard Copy Manager to map from the ASCII characters in use to the printable subset of characters, filtering out the unprintable.
If no entry is made after the keyword, LIFESPAN will use default values.
It should be entered in this format:
where:
translation table should be entered in this format:
If characters which are not included in the mapping are detected in a LIFESPAN module, they will appear in angle brackets <> in hexadecimal notation within the line on which they appear, for example <1F>.
The error message <ILLG> will be displayed at the end of the line to indicate that the characters are illegal.
HARDCOPY FORMATTER
This should be run as a batch program from the process directory when the LIFESPAN process is not running.
The command file to be submitted as a batch should contain the following:
where:
<config filename> is the full pathname of the configuration file, eg. LIBRARY$DISK:[LSPAN.LSTRAIN]LSTRAIN.DAT.
If any logicals are used in this pathname, they must be system-wide logicals.
<inst> is the installation directory.
The hard copy formatter opens one or more volumes in the hard copy directory for each charge code specified in the configuration file, when it finds the first module which is associated with the given charge code and which has not been hard copied.
Thereafter volumes will be created according to the attributes specified in the configuration file until the workspace limit defined by the keyword HCSPACE is reached, or there are no more modules to be hard copied.
However, the hard copy formatter will only add modules into a volume when:
a module is online and has not already been hard copied.
it has the charge code specified in the configuration file.
its DESCRIPTION-IS and CODE-IS classification in the configuration file satisfies both the description and code filter.
the workspace limit has not been reached.
the hard copy volume is set to PREPARE.
The hard copy formatter works cyclically through the modules, searching for those with the specified charge code and classification and filling the relevant volume with them until its minimum fill mark is reached.
After this point, if any module is larger than the residual space in the volume, a new volume will be opened and the old one will be closed.
If at any stage during formatting a module is larger than the residual page capacity of a volume, a new volume will be opened and the old one will be closed.
The module which caused the new volume to be opened will not be entered into it but will be reported in the batch file as an oversize item and hard copied on a later run.
However, if more modules with the specified charge code, and which will fit, are available then these will be entered into the volume.
All volumes containing modules of the same charge code are given the same name, as specified by the user, but the serial number at the end of the volume name is incremented for each new volume that is opened.
Once a module has been copied to the hard copy volume, the Location file is updated to show that hard copy is ‘in progress’.
The hard copy formatter may be required to format modules associated with several charge codes at the same time.
It does not format modules in charge code order, in other words it does not fill the volume for a particular charge code before moving on to the volume for the next charge code.
Consequently, the space in the hard copy directory may be exceeded although no volume is full.
Volumes cannot be accepted for verification (described later) in this situation, but may be rejected in order to regain space.
Modules rejected in this way will be hard copied on a future run.
The Hard Copy Manager may edit the configuration file to allocate more room in the hard copy directory, or to reduce the minimum fill mark of the volumes, or the manager may reduce the number of charge codes for which the run is being made; the manager may make both adjustments if necessary.
At the end of the formatting process, any volume whose minimum fill mark has been exceeded but is not 100% full, is filled with ‘formatted blank pages’.
An end of run summary is then produced to provide statistics such as the current state and attributes of the hard copy volumes, the number of blocks used and a hard copy module summary.
An integral number is used to produce these statistics, consequently the value indicating the number of blocks used may be out by +/- 1.
The state of a volume will be either:
VOLOPEN indicating that there is more space available on the volume which can be filled on a subsequent run, or
VOLCLOSING indicating that the volume is considered full as it has reached either its minimum fill or full mark, but has not yet been verified.
Note that a volume can only be copied from the hard copy directory and transcribed if it is in the VOLCLOSING state.
It must NOT be deleted or otherwise removed by the Hard Copy Manager.
The hard copy module summary is of the following form:
The number of modules added to HARD COPY volumes indicates the number of modules formatted during the HCFORMAT run.
The number of modules too large to fit volume specifies the number of modules which are too large to fit into an empty volume.
i.e. modules greater in size than PV specified in the HCSET parameter.
The number of modules larger than free volume space specifies the number of modules found to be larger than the residual page capacity of a volume.
Modules in this category are not formatted into the next volume opened but disregarded until the next time hard copy format is run.
The number of modules with no destination volume includes all modules in charge codes not specified for hard copying, any 0.0Z package modules for which no later issues exist and any modules filtered from hard copying.
Note, 0.0Z versions of packages wih no later versions are not hard copied to allow for the possibility of deletion by validate.
The number of modules which are offline records the number of modules which are offline and therefore cannot be hard copied.
Media Production
Once modules have been formatted into hard copy volumes, the Hard Copy Manager must arrange for the transcription of the images in the hard copy directory onto the relevant hard copy media, by printing or microfilm/microfiche preparation.
Once the module images have been transcribed, the Hard Copy Manager must visually check the hard copy media to ensure that all of it is readable.
On the basis of this check, the volume should be accepted or rejected.
HARDCOPY VERIFIER
Once the Hard Copy manager has decided whether to accept or reject the volume, which must be in the VOLCLOSING state, this interactive program should be run in the process directory.
This program should only be run when the LIFESPAN process is not running.
First, however, the LIFESPAN configuration file must be assigned to LIFESPANCONFIGURATION, as described earlier in this section.
In order to run the program, this command should be entered:
where: <inst> is the name of the installation directory.
In an interactive session, the Hard Copy Manager must respond to three questions for each volume to be verified:
Enter volume name to be verified or END:
END should be entered if there are no more volumes to be verified.
Enter volume number of <volume name> to be verified:
The volume name should be that supplied in the first answer and the volume number should be the extension supplied at the end of the volume name in the HC FORMATTER's end of run statistics.
If a volume set is to be rejected, the highest volume number should be entered first as volumes must be rejected from the latest downwards.
If a volume set is to be accepted, the lowest volume number should be entered first as volumes must be accepted from the earliest upwards.
Is <volume name.version number> to be Rejected or Accepted (R/A)?:
Enter R to reject the volume, or A to accept it.
Large volumes of small files may take a few seconds to be processed by the HC VERIFIER.
A suitable message will be displayed to indicate that the volume has been rejected or accepted, or a suitable error message will be generated if a fault has occurred.
Once a volume has been accepted and verified the * (asterisk) marker in the Location file is removed for the modules in that volume.
If a volume is rejected the formatted modules will not be saved, however all modules contained in rejected volumes will be hard copied again at a later date but they will be the last to be considered for hard copying during the HC FORMATTER's next run.
The hard copy volume is deleted from the hard copy directory regardless of whether it has been accepted or rejected.
HARDCOPY SUMMARY
This program provides a formatted listing of the status and attributes of all hard copy volumes in use for a LIFESPAN process similar to the end of run summary generated by the HARDCOPY FORMATTER.
The program may be run interactively or in batch from the process directory when the LIFESPAN process is not running.
The command file to be submitted as a batch should contain the following: where
<config filename> is the full pathname of the configuration file, eg. LIBRARY$DISK:[LSPAN.LSTRAIN]LSTRAIN.DAT.
If any logicals are used in this pathname, they must be system-wide logicals.
<inst> is the installation directory.
Note that the logical name LIFESPANCONFIGURATION should be assigned when running this program.
The formatted listing of the hard copy volumes in use is produced in the file HCSUMMARY.LOG in the directory from where the program is invoked.
This program also checks to see if any hard copy volumes have been erroneously rejected by a previous issue of LIFESPAN.
Any such volumes are reported to the user and the program terminates with a status message declaring whether or not the hard copy files are in a consistent state.
It is, therefore, essential that as soon as possible after installation, this program is run on all LIFESPAN processes for which the HARDCOPY FORMATTER has been run prior to this issue of LIFESPAN.
If the program reports that the hard copy files are in an inconsistent state, then contact SST immediately.
Error Messages
Messages displayed as a result of user errors are self-explanatory or direct the user to a contact who will be able to advise a suitable course of action.
MODULE VERSION MANAGEMENT
Introduction
This section of the manual should be read by LIFESPAN Managers since it describes the mechanisms to control and optimise the online/offline file store usage for LIFESPAN and perform the removal of modules no longer required in their magnetic form.
As the module database expands the use of online file store increases.
This is largely due to the increase in the number of module versions retained but it is also due to the overhead in the database management files controlling the database.
Though a LIFESPAN user may explicitly request whole packages of modules to be only retained in ‘offline storage’ until needed, there is little direct benefit to that user in offlining modules, unless the LIFESPAN file store occupancy is being charged via the VAX accounting system.
Furthermore, only modules referenced by a package can be so explicitly sent to offline storage.
Intermediate development versions introduced to the database by latest selection are not referenced by any package and therefore can not be sent offline in this fashion.
This section describes those facilities available within LIFESPAN to transfer modules to offline storage automatically when they have not been accessed for a configurable period of time.
In the fullness of time when products are superseded, module versions may no longer be required and consequently may no longer need to be retained in magnetic form.
This section also describes how those ‘unwanted’ modules can be deleted from the LIFESPAN database.
When modules are deleted, only ‘tight coupling’ relationships from the module are retained; the ‘loose coupling’relationships are deleted to further reduce the LIFESPAN database file store requirement.
Module Version Deletion
When modules suitable for deletion are identified these modules are nominated for deletion and the relevant module managers advised via the LIFESPAN mail system.
After a time interval determined by the LIFESPAN manager these modules will be deleted.
The module manager may inhibit deletion in the interim period by introducing a package into the database to explicitly select the issues of any module not to be removed or by making the module versions ‘preferred’(see Module Version Deletion Rules below).
Module Version Deletion is controlled by the MINTEG parameter in the configuration file as described in section 5.7.
It should be noted that no modules will be deleted until the module version deletion process has been able to run through the whole LIFESPAN database.
A reasonable duration period should therefore be set for MINTEG otherwise it may take several runs before anything is deleted.
A satisfactory duration period depends on the size of your LIFESPAN database but an 8 hour period should be enough for an average sized database.
If any modules have been nominated for deletion at the end of a MINTEG run then the LIFESPAN manager and managers of any modules nominated are sent mail messages reporting on the nominations for deletion.
The LIFESPAN manager receives a summary report indicating the total number of modules nominated, and the module managers receive a report listing exactly which modules and their versions have been nominated, for which they are manager.
At the end of the nomination latency period the LIFESPAN manager and module managers will again receive mail messages, this time informing them of which modules have actually been deleted.
Again the LIFESPAN manager receives a summary and the module managers receive a list of their modules and versions which have been deleted.
Module Version Deletion Rules
Nomination for deletion takes place when the module version satisfies Rules 1 to 4 as follows:—
Rule 1 The module version is not the object of any tight coupling relationship from any module other than itself which is magnetically available.
Rule 2 A later approved version of the module exists.
Rule 3 The module version is not an approved or preferred version of the module.
Rule 4 A hard copy of the module version exists if the requirement for hard copying prior to module deletion has been set via the MINTEG keyword in the LIFESPAN configuration file.
As stated, Rule 1 inhibits nomination of a circular network of packages; therefore, to allow deletion of such networks, Rule 1 is relaxed where all members of a circular network would be nominated except for their mutual dependence.
Deletion takes place when the module both satisifes Rules 1 to 4 above and Rule 5 as follows:—
Rule 5 The module version has been nominated for a greater period than the nomination latency set in the configuration file.
The nomination latency is the time period within which the module manager may inhibit deletion of the specific module version by introducing a package into the database to explicitly select this version or by making the version preferred.
In order to satisfy Rule 4, it may be necessary for modules to be brought online to be hard copied prior to deletion.
Since this increases the online file store requirement, a mechanism is provided within LIFESPAN to automatically offline modules to reduce the online file store requirement in compensation.
Automatic Module Offline Requests
The Automatic Module Offline Requests facility discriminates between coupled and uncoupled modules; ie. those that are, or are not, the object of a tight coupling relationship.
This is controlled by the STOREMAN parameter in the configuration file and is described in section 5.7.
Two expiry times are specified in the configuration file which relate to the last time the module was entered or read from LIFESPAN; ie. the ‘time since last access’.
Where the expiry time for uncoupled modules exceeds the ‘time since last access’, a transfer request to offline the module version is made; alternatively, where the expiry time for coupled modules exceeds the ‘time since last access’, a transfer request to offline the module version is made.
An overall limit to the offline ‘transfers pending’ is specified in the configuration file to avoid overloading the offline system with automatically generated transfer requests and so adversely affect the LIFESPAN file store consumption.
When this limit is reached, further automatic requests are inhibited.
(Note that the offline system makes an intermediate copy of modules to transfer to the offline media.
However, where a module has already been offlined, the offline request is effected immediately and independently of the next offline session.
Specific offline requests from LIFESPAN users are included while checking for the limit having been reached.)
Automatic Module Online Requests
If hard copying prior to module version deletion has been mandated via the LIFESPAN configuration file, then a module version may only be deleted once a ‘hard copy’ exists.
Two processes are provided within LIFESPAN to assist this process.
HCPROCESS requests HCMODULES to restore modules from offline for those charge codes set via the HCMAP parameter in the configuration file (see Section 4).
HCMODULES identifies module versions that have yet to be hard copied for those charge codes and requests those versions to be restored from offline.
An overall limit is applied as a number of disc blocks to be restored, to prevent the LIFESPAN process file store being flooded with modules waiting ‘hard copy’.
The stand-alone Hard Copy facility should then be run to obtain the ‘hard copy’ images.
Automatic Module Online Requests are controlled by the HCPROCESS and HCMODULE parameters in the configuration file.
Module Version Management Performance
These Module Version Management facilities are constrained to run, or not, as background periodic facilities, while LIFESPAN is running, with limits on the duration of each run and the quantity of work undertaken.
In addition, the activities have a variable delay imposed during their execution to minimise the adverse effect on interactive users of LIFESPAN.
These constraints are controlled by the LIFESPAN Manager through parameters in the configuration file.
It is recommended that these facilities are constrained to run while the machine is lightly loaded in order that interactive usage is not impacted; eg. overnight running.
Where both interactive usage and Module Version Management facilities are required, then the use of a large tuning delay will ameliorate the effect on user response.
Continuous running of these facilities is not recommended and should be avoided unless the offline system is run concurrently to service the store/restore requests.
If the offline system is to run concurrently, suggested minimal values for the tuning delay are perhaps 10 seconds where magnetic disc media is utilised and 30 seconds where magnetic tape media is utilised.
These values should be increased to give optimal response and so adapt to the overall machine loading on the host system.
Continuous running is only of benefit where a large number of modules are to be transferred to offline storage or where much hard copy has already been done, and many module versions can be nominated or deleted.
A smaller, or zero tuning delay is best set when facilities are unavailable or the machine is lightly loaded to maximise the work achieved in a discrete time interval.
By running these facilities, perhaps on a weekly basis, the online file store will retain relevant module versions while the offline file store will aggregate the module versions not currently required.
Module versions which become redundant through time and supersession will be progressively cleansed from the magnetic database as they become hard copied.
Configuration File
When the Module Version Management facilities are required, the configuration file should be set up as described below.
The keywords use the following set of common parameters:
The start time is given in VMS absolute time format: dd-mmm-yyyy hh:mm:ss.cc where omitted fields default to system date and time; month is abbreviated to the first three letters (uppercase).
eg.
01-JAN-1990 12:00
The duration for each facility is given in VMS delta time format: dddd hh:mm:ss.cc where omitted fields default to 0; however, you cannot omit the dddd field.
eg.
5 01:30 (5 days, 1 hour and 30 minutes)
This is an approximation to the time the facility will run.
It may finish earlier where no further work can be done or it may finish some minutes later in order to complete sensibly.
The repeat time is also given in VMS delta time format.
A duration of 0 inhibits the facility from being run while a duration exceeding the repeat time or a repeat time of 0 is taken to be continuous running.
The tuning delay is given as a number of seconds where a value of 0 provides no delay and any value greater than 60 seconds is defaulted to 60.
The expiry time and nomination latency are specified in VMS delta time format.
For all VMS time formats if leading fields are omitted, punctuation must be specified.
If trailing fields are omitted, punctuation can be omitted.
Leading blanks are allowed; embedded and trailing blanks are not.
The HCPROCESS keyword
The HCPROCESS keyword is entered in the following format:—
The HCMODULES keyword
The HCMODULES keyword is entered in the following format:—
The STOREMAN keyword
The STOREMAN keyword is entered in the following format:—
The MINTEG keyword
The Module Version Deletion keyword, MINTEG, is entered in the following format:—
In the examples above the durations are set to zero to inhibit the facilities.
The maximum number of offlines specified by the STOREMAN keyword is used as a guide.
Latencies within LIFESPAN may cause this to be exceeded; typically this will be less than 30 modules.
Similarly the disc block limit specified in the HCMODULES keyword may be exceeded by the file store required for the final (less than 30) modules.
VALIDATION INSTRUCTIONS FOR LIFESPAN
Introduction
This section of the manual should be read by LIFESPAN Managers.
It describes the Validation program which can be used to delete unused module names and/or to check details of modules against files held, and to perform CRC checking of modules within a charge code.
Validation may be carried out on a LIFESPAN system at any time.
The Validation program must be run from the LIFESPAN installation account with the default directory and UIC set to that of the process directory.
Before the Validation program may be run, the LIFESPAN system must be closed down, and a backup copy should be made of all the database files.
This ensures that the LIFESPAN system can be restored to its previous state in the unlikely event of a failure during validation.
Note also, that neither the Hard Copy System nor the LIFESPAN Relationship Listing program nor any similar LIFESPAN facility should be in operation when the Validation program is run.
Before running the Validation program, ensure that the logical name LIFESPANCONFIGURATION has been set up to point to the configuration file for the LIFESPAN system being checked.
Also ensure that any logical names being used for charge codes have been set up.
Validation Options
The Validation program offers three facilities.
Delete Old Modules
Validate Modules
CRC Check of Online Modules
Delete Old Modules
This facility sequentially steps through all module names and:
deletes module names which were reserved before a specified date but for which there is no module
deletes all packages which only exist as issue 00.00Z and which were reserved before the specified date
If (in either case) the proposed module is required by another module, the name is not deleted and a warning is reported.
The last package module name reserved and the last module name reserved are not deleted.
If a package at issue 00.00Z has been Hard Copied, then the name is not deleted.
Validate Modules
This facility validates all online modules and files stored by LIFESPAN in two phases:
Phase I — Validation of Module Details
Phase II — Validation of Directories
Phase I — Validation of Module Details Sequentially steps through all issues of all modules and checks that:—
a source file exists for each issue of each online module
the source file for each issue of each online module scans
the data from the source file tallies with the data in LIFESPAN.
Phase II — Validation of Directories 
Sequentially steps through all Charge Codes and determines the Storage Directory associated with each Charge Code.
Sequentially steps through all files in each Storage Directory and checks that:—
the file scans
it contains an issue of an online module known to LIFESPAN
the filename specification for the module is correct.
CRC Check of Online Modules
This facility performs CRC checks on the online modules stored by LIFESPAN.
The checks are done on a charge code basis, specified by the user, on the latest ‘n’ issues of each module.
Running Validation
To run the Validation program, issue the following commands:— The system responds:
The required option should be entered.
Since the Validation program may take several hours to run, it is recommended that it is run overnight in batch mode.
Delete Old Modules
The prompt is as follows:—
At this stage, if an invalid date or a date later than the current date is entered, an error is reported and the date is requested again.
Output is sent to the file VALIFY.TXT, in the current default directory.
On completion of the program this output file may be viewed or printed as appropriate.
See Figure 6.1 for example output.
Messages which may be reported are as follows:
<module name>-Module name deleted The details for this module name have been successfully deleted.
Note that actual files containing skeleton package modules are not deleted; these files will be highlighted by the validation procedure as files containing unknown modules.
<module name> NOT DELETED — REQUIRED BY <package name> Although this module name has been reserved but not yet used, it has not been deleted, because it is required (ie. contained by) the given package.
<module name> NOT DELETED — HARD COPY EXISTS Although this package name has been reserved in name only and is not used by any other package, a hard copy has been taken.
This message applies to 0.0Z packages which were hard copied prior to LIFESPAN version 07.00.
LIFESPAN version 07.00 and subsequent versions ensure that 0.0Z packages with no later versions are not hard copied and therefore available for deletion by validdate.
The following messages report errors and should not occur.
If they do appear they should be reported to SST immediately:
<module name> DTG OR EXISTENCE STRING NOT FOUND
<module name> ERROR — Module Date later than today's date
The message ** PROCESSING COMPLETE ** appears at the end of the file VALIFY.TXT.
No further output is sent to the terminal.
Validate Modules
This facility does not require any further user input, and produces an output file, VALIDATE.MOD, in the current default directory.
See Figure 6.2 for example output.
In Phase I, for each module known to the LIFESPAN database the corresponding file is checked within the storage directories.
Possible messages are as follows:—
’ Success’module is valid.
’ File not found’severe error.
A file should exist online for the module but cannot be found.
’ Failed to SCAN’warning.
Earlier versions of the scanner have passed this module, but the latest version is more exacting.
These inconsistences will be corrected in a future issue of LIFESPAN.
’ Type Mismatch’, ‘Issues Don't Match’severe errors.
The contents of the file for the module no longer tallies with the details held by LIFESPAN.
’ Offline’Module version is currently offline and has not been validated.
’ Hard Copy Only Available’The magnetic copy of the module version has been deleted from LIFESPAN.
’ Module found online should be offline’error.
A file for the module was found online but LIFESPAN believes the module is offline.
Check the location of the file using option 1.2.0.
Check module is offline by initiating a restore of the module from the offline media.
This can be done by attempting to read the module out of LIFESPAN.
Once the module has been restored compare it with the module which was reported in the error message using the DCL DIFFERENCE command.
If they are the same you can delete the file containing the module reported in the error.
’ Module found online only hard copy should be available’error.
A file for the module was found online but LIFESPAN believes no magnetic copy of the module exists.
If you are happy that a hard copy exists then you may delete the module reported in the error.
In Phase II, for each file in the storage directories the corresponding module details are checked within the LIFESPAN database.
Possible messages are as follows:—
’ Success’file is valid.
’ File should be offline’error.
A file has been found for a module which should be offline.
Check the location of the file using option 1.2.0.
Check module is offline by initiating a restore of the module from the offline media.
This can be done by attempting to read the module out of LIFESPAN.
Once the module has been restored compare it with the module which was reported in the error message using the DCL DIFFERENCE command.
If they are the same you can delete the file containing the module reported in the error.
’ File should be HCOA’error.
A file has been found for a module for which no magnetic copies should exist.
If you are happy that a hard copy exists then you may delete the module reported in the error.
’ Failed to SCAN’warning, as above, or the file does not contain a valid LIFESPAN header.
’ Module NOT Known’warning.
The file contains a module whose name is not recognised by LIFESPAN.
This may be a skeleton package module which has been deleted, and if so, the file may now be deleted manually.
Or a skeleton package module for which creation did not complete properly.
In this case the file should be deleted and the package created again.
’ Issue NOT Known’warning.
The file contains a module whose name is recognised but whose version number is not.
This may be a version of a module which did not complete the process of entry into LIFESPAN.
If a higher version of the module exists within LIFESPAN incorporating all the desired features of the file reported in the warning message, then it may be deleted.
’ Wrong File Spec’warning.
If Phase I produces no severe errors, then files in the last THREE categories for Phase II (Module NOT Known/Issue NOT Known/Wrong File Spec) may be deleted manually.
The Validation Statistics present totals for the various categories of results.
The following totals should be the same:—
Phase I: Valid Online Modules
Phase II: Valid Files
The total for ‘Offline Modules’, ‘HCOA Modules’ plus ‘Valid Online Modules’in Phase I should equal ‘Number of Modules’in Phase I.
The total for ‘Number of Files’ in Phase II minus the total for ‘Modules/Issues Not Known’in Phase II should be equal to ‘Valid Files’from Phase II.
The total for ‘Number of Charge Codes’ in Phase II gives the number of charge codes checked.
All other totals should be zero.
If this is not the case, the results should be reported to SST.
CRC Check of Online Modules
The prompt is as follows:—
If a charge code is entered which is outside the range 1 to 9999 the prompt will be re-displayed.
Also if an unknown charge code is entered an error will be displayed and the prompt will again be re-displayed.
A valid and known charge code will result in the following prompt:—
Enter the number of issues to be checked for each module, eg:
1 — if only the latest issue is to be checked,
3 — if the latest 3 issues are to be checked, etc.
Invalid input will result in the prompt being re-displayed.
Output is sent to the file VALIFY.CRC, in the current default directory.
On completion of the program this output file will contain any detected CRC errors and may be viewed or printed as appropriate.
Example output:—
After the Validation
When the Validation program has been run and the output in VALIFY.TXT and/or VALIDATE.MOD or VALIFY.CRC has been checked and is found to be satisfactory, the LIFESPAN system may be restarted.
If the Validation program did not run successfully (ie. severe errors or unexpected non-zero totals appeared in VALIFY.TXT or VALIDATE.MOD), an SPR should be completed, and should be sent, together with listings of the appropriate output files, to SST.
If errors occurred only within Delete Old Modules, the safe copies of the database files should be restored to the process directory and the LIFESPAN system may be restarted — it will be in its previous state, and it should be possible for work on the system to continue.
LISTREL
Overview
The LISTREL program can only be run when LIFESPAN is shut down and should only be used by LIFESPAN Managers.
It allows a LIFESPAN Manager to generate three basic types of report on the contents of a LIFESPAN system and can be used in batch mode or interactively by choosing options from a menu.
The reports are called:
Relationships Listing
Package Structure Listing
Charge Code Listing
Relationships Listing
This report gives an alphanumerical listing of the modules contained in a LIFESPAN system.
For each module, or chosen subset of modules, it provides the following details:
the module's name.
the module's preferred version (or ‘none’ to indicate that there is no preferred version set).
the module's type.
the charge code under which the module's name was reserved.
the text ‘PASSWORD PROTECTED’ if the module has a password.
the module's existence string.
a list of all versions of the module contained in LIFESPAN and for each version:
its hard copy status and availability as indicated by one of the following:
HCOA — Hard Copy Only Available
HC — Hard Copied
NOHC — No Hard Copy
HCIP — Hard Copy In Progress
ONLINE — Currently Online
OFFLINE — Currently Offline
the relations contained in the MODULE-RELATIONS-ARE section of the module header, in abbreviated form.
all Package and Product modules which contain that module version.
An abbreviated version of the Relationships Listing can also be obtained.
This lists all the above details except those relating to individual versions of a module.
The mnemonics used in the Relationships Listing map onto the text strings used within a module header.
For example:
ctn-sou-of — CONTAINS-SOURCE-OF
req-sou-of — REQUIRES-SOURCE-OF
lstch — LAST-CHECKED-ISSUE
latst — LATEST-ISSUE
prfrd — PREFERRED-ISSUE
slctd — SELECTED-ISSUE
A two-part Index is printed at the end of the Relationships Listing which gives the number of the page within the report on which the details of the module may be found.
The first part is an index for all Package and Product modules and the second is an index for all types of module.
The following notation is used within the module index lists:
A Relationships Listing can be prepared for two subsets of the modules in a LIFESPAN system.
The subsets are:
specified charge code range.
The user is asked to enter the charge code(s) to be covered, and the Listing provides the module information on a charge code by charge code basis.
specified module name range.
The user is asked to enter the start and end points of the required range.
These need not be specified in full as the Listing begins on or after the start string and finishes on or before the end string without exceeding the specified range.
When the Relationships Listing has finished, or at the end of the section for each charge code if this option has been selected, statistics are provided on:
the number of different PACKAGE/PRODUCT/SOURCE/FOREIGN modules names encountered, together with the total number of versions of that type.
the average number of modules per Package.
the total number of emanating relationships encountered (when a Full Listing is specified).
the total number of using relationships encountered (when a Full Listing is specified).
the number of modules not in a Package (when a Full Listing is specified).
the number of module names which have been reserved but for which modules do not yet exist in the database.
This includes modules of type Package for which skeleton headers have been created but no further versions have been entered.
the number of modules for which the latest version is undergoing development.
the number of modules for which the latest version has been approved.
the total number of module names known to the database.
Package Structure Listing
This report gives a structured listing of a specific package, detailing its modules and sub-packages according to the version specified.
For each module in the package structure, there is an entry in the report which gives:
the relationship
the module name
the version number as specified by relationship
the text ‘PASSWORD’ if the module has a password
the destination file specification
the latest version number of the module, if the relationship is SELECTED or PREFERRED
information on any DCs attached to the package.
This Listing is completed by an alphanumerical list of all the modules in the structure including their version number and module type.
An abbreviated version of the Package Structure Listing can also be obtained which contains only the package modules in the structure.
If any module identifies as its relation an earlier version than the latest entered, then the relationship mnemonic is preceded by an asterisk character and the available version of the module is identified.
For example:
Any module not present in the database is marked as ‘no issue’ and the required version number is shown.
The following abbreviations are used in the Package Structure Listing to indicate the current state of a DC:
Note that any DC in state 4 (rejected) or state 5 (cancelled) does not appear in the Listing.
The set of DC identifiers which reference each module are given, suffixed by the appropriate abbreviation from the above list to denote the DC's status.
The suffix $ is added to the DC status of package modules when the package module is referenced on the DC and the DC is activated via that package.
The suffix @ indicates that a DC has been activated on a package and hence may cause the relevant DC number to be listed twice, suffixed first by @ and secondly by $.
An option is provided to allow the user to omit DCs in state 8 from the Listing.
The user is asked for the root package name and the version number for the Package Structure Listing.
The package name must be specified in full, but the version number can be supplied as one of the following:
the actual version number within optional brackets [], for example[01.01A]
L for latest
P for preferred
H to track the highest (latest) versions of sub-packages regardless of the actual version number specified in the module relationships.
In this case, the package to sub-package relationship is denoted by ‘final’.
Charge Code Listing
This report gives a list of all charge codes created in the LIFESPAN system and the storage directories to which these charge codes are set.
Customising the Listings
The user can customise the format of the Listing file by choosing Option 4 Amend Configuration Setup from the interactive menu.
The user can:
select the name of the Listing file to be generated.
print the Listing file on completion and, optionally, delete it once it has been printed.
print the Listing file with headings at the top and bottom of each page.
insert a blank line after each relation set.
divide the Listing into a series of smaller, more manageable files by specifying how many pages there should be in a file.
The user can enter 0 to indicate that no division is necessary.
specify how many lines there should be on each page; the minimum is 2 if no headings or footings are required, and if headings and footings are required the minimum is 8.
specify the number of characters per line; the minimum is 132.
Using LISTREL
This section explains how to run LISTREL and how to use its various options.
Batch Mode
The program may be run in batch mode by submitting a command file.
This file should contain the responses the user would have given to the prompts for the relevant options had the system been used interactively as described below.
The equivalent of each ‘response’ expected from each menu must be entered as there are no defaults; each entry must be made on a separate line.
Interactive Execution
The user should close down the LIFESPAN system if it is running and make sure that neither the Hard Copy facility nor the Validation facility are running.
The program operates directly on the database files and LIFESPAN must not be restarted nor the Hard Copy or Validation facilities run until the LISTREL program has finished.
The user must log onto the LIFESPAN process account or an account with access to the LIFESPAN database files.
If multiple LIFESPANs are in use this assignment must be issued: where <configfile> is the name of the LIFESPAN configuration file.
This name is set up in the SYSTEM logical name table when LIFESPAN is started.
The following DCL command must now be issued:
where: <inst> is the name of the installation directory.
The user will now be presented with an Index from which several Option pages, similar in use and appearance to LIFESPAN pages, can be chosen.
LISTREL will supply default responses to most or all of the prompts on the pages; if the defaults are acceptable the user can just press RETURN after viewing the page, but if changes are required to the defaults the user must TAB to each prompt to edit the response.
LISTREL Master Level Index
On startup the LISTREL Master Level Index is displayed, as shown in Figure 7.1.
The user should type the number of the required option at the Your Option prompt.
Each option is described below.
Option 1 Generate Relationships Listing
This option allows the user to generate an alphanumerically ordered Relationships Listing which can be grouped either by individual charge code or over the entire LIFESPAN system.
An example of this option is shown in Figure 7.2.
If the user wants the listing to be grouped by individual charge code, the user should enter ‘Y’ to the question ‘Relationships grouped by Charge Code (Y/N)’and press TAB.
LISTREL will then prompt the user to enter up to a maximum of 32 valid charge codes which are to be included in the Listing.
The user should enter each charge code separately and then press TAB.
When the user has entered all the charge codes, the user should press TAB again to move onto the next field.
To obtain a complete listing of all modules in the LIFESPAN system grouped by charge code, the user should press TAB when prompted to enter the first charge code.
In batch mode the user can request that up to the total number of charge codes established in the system are included in the Listing.
To obtain a Listing of modules ordered alphanumerically by module name, the user should answer ‘N’ to the question ‘Relationships grouped by Charge Code (Y/N)’and press TAB.
The user will now be asked whether ‘All or Partial Module Relationships (A/P)’ are required.
If all modules in the LIFESPAN system are to be listed the user should enter ‘A’; if only a subset is required the user should enter ‘P’.
The user should then press TAB.
If the user has requested only a subset the user will be prompted to enter a start and end module name.
These need not be specified in full as the Listing will start on or after the start string and finish on or before the end string, without exceeding the range given by them.
Finally, the user will be asked whether ‘Full or Abbreviated Relationships’ are required.
The user must enter ‘F’ to obtain a complete Listing containing information about relationships (both emanating and ‘used-by’) or enter ‘A’to obtain an abbreviated Listing.
When input is complete the user should press RETURN.
The Listing will be prepared as specified, with any customised features the user may have selected via Option 4 Amend Configuration Setup which is described later in this manual.
Option 2 Generate Package Structure Listing
This option allows the user to generate a Structure Listing based on a specified Package.
An example of this option is shown in Figure 7.3.
The user should enter the name of the desired package and then the package version.
The package name must be entered in full, but the version number can be specified as one of the following:
the actual version number within optional brackets [], for example[01.01A]
L for Latest
P for Preferred
H to track highest (latest) versions of sub-packages, regardless of the actual version number specified in the module relationships.
The user can select ‘F’ for Full Listings or ‘A’for Abbreviated Listings in which case only details of package modules will be included in the Listing.
The user can also indicate whether Approved Design Changes are to be contained in the Listing or not.
When input is complete, the user should press RETURN.
The Listing will then be prepared as specified, with any customised features the user may have selected via Option 4 Amend Configuration Setup which is described later in this section.
Option 3 Generate Charge Code Listing
This option allows the user to generate a Listing of all Charge Codes in the LIFESPAN system and details of their associated storage directory.
When the user selects this option the Listing will be prepared as specified, with any customised features the user may have selected via Option 4 Amend Configuration Setup which is described later in this section.
Option 4 Amend Configuration Setup
This option allows the user to customise the Listing file produced by Options 1, 2 and 3.
An example of this option is shown in Figure 7.4.
The user can specify the name of the output file by giving a valid VMS file specification; the default is LISTREL.LIS and the Listing file is created in the user's VMS account.
Each time a report is generated according to the other configuration parameters specified at this option, the report is appended to the Listing file.
The Listing which is generated may be viewed at the terminal by setting the Listing File Specification to SYS$OUTPUT.
In this case, the terminal is set wide for interactive viewing, and the page size is adjusted to the screen depth automatically.
The output pauses at the end of each page until the user presses RETURN.
The user can opt to have the Listing file ‘Printed’ or ‘Deleted’, or both, once it has been prepared; note that if these options are chosen the output file will be queued for printing first and, if required, deleted afterwards.
These options are inhibited if the Listing is viewed at the terminal.
The user can also choose to produce the Listing file with titles at the top and bottom of the page (‘Headings and Footings’) and to have a ‘Blank line inserted in the file after each relation set’.
In order to split the Listing into a series of manageable files, the user can indicate the maximum number of pages which are to be generated in any one version of a file.
When this limit is reached, the current file will be closed and printed/deleted as specified, and a new version of the file will be created for the next series of pages.
The ‘Pages per File’ should be entered as a decimal number; note that 0 should be used to indicate that no file splitting is to take place and that the default is 500 pages per file.
The user can also customise the number of ‘Lines per Page’ and the number of ‘Characters per Line’.
Both fields should be entered as a decimal number, the minimum number of characters per line is 132 and the defaults are 62 and 132, respectively.
Errors
Any failure to open or read any file will result in a message reporting the error and the associated file name, and providing some explanatory text.
No Listing is produced in these circumstances.
If there is any file access failure while the list is being produced, the program execution is terminated with a similar message.
Any problems or deficiencies should be reported to Sema Software Technology on an SPR form together with a Listing of the output, if appropriate.
PREFACE
Purpose
This manual describes the LIFESPAN Procedural Interface.
audience
This manual is aimed at programmers who want to develop their own software for use in conjunction with LIFESPAN.
Manual Structure
Section 1 gives an introduction to the Procedural Interface, Sections 2 to 22 describe the available interface procedures and Section 23 describes the required environment.
The Appendices contain a variety of information on error messages, examples of incident log files, routine specifications in PASCAL, interface specifications in PASCAL and FORTRAN and test programs.
INTRODUCTION
The Procedural Interface (PI)allows access to certain LIFESPAN functions, from software written by the user, during interactive use of LIFESPAN.
More specifically, PI allows user-written software to reserve module names; to generate package structures within LIFESPAN; to read complete package structures or individual modules out of LIFESPAN; to enter complete structures into LIFESPAN; to list out the details of complete package structures or view/update individual module details; to create Design Changes and view assessment details, to submit packages for QA approval and to perform the approvals.
PI enables new package, product and module names to be reserved in Lifespan.
PI allows users to ‘snap-shot’ a particular configuration of modules, by automatically generating a package structure within LIFESPAN, and recording the latest versions of the configuration as SELECTED versions within these packages.
PI also allows a form of ‘auto-build’ to be performed with LIFESPAN, by allowing the user to read out a complete package structure which records the exact composition of a particular build.
This configuration may then be compiled and linked using a command file or a set of command files that have also been read out as part of the structure.
Alternatively PI enables individual modules to be read in isolation or read from designated packages.
PI facilitates ‘single module’ and ‘bulk module’entry to be performed within LIFESPAN, by allowing a user to enter all or part of a complete package structure into LIFESPAN from a specified directory.
PI allows specified module details to be viewed and updated as necessary.
PI enables Design Changes to be created, updated, submitted, assessed and activated.
PI permits a user to view a DC, view the assessors of a DC, and view a user's assessment comment for a DC.
PI assists the QA process by permitting a package to be submitted for approval, by allowing a package to be prepared for approval, and also by granting/denying approval to a package.
Using PI
PI can be called from any standard record-structured VMS language.
The user must write software to set up the appropriate input parameters and invoke the required procedure.
This program must be compiled subsequently and linked to the supplied object libraries.
The procedures have return parameters indicating the success/failure of the operation and in addition an incident log file is created to contain a history of critical events that occurred, including any error messages.
In most cases, PI returns control to the calling software on completion.
However, if a severe error occurs while trying to write to the log file, the calling program is terminated with an appropriate error message (see Section 23).
Networking
PI allows suitably licenced clients access to LIFESPAN running on a host machine from user-written software executing on specified remote machines via DECNET.
Please consult your LIFESPAN Manager to determine which remote machines permit such access.
GENERATE_ROOT_PACKAGE
Function
Given a list of module names (up to a maximum of 1000), GENERATE_ROOT_PACKAGE will:
determine the current latest version of each of the modules in the LIFESPAN database.
generate a package structure containing these particular versions as SELECTED.
enter this package structure into LIFESPAN.
The package structure will have one package at its summit, the root package,containing sufficient sub-packages to reference all the required modules.
Note that if the list contains packages which contain modules as LATEST instead of SELECTED, a subsequent call to READ_COMPLETE_ROOT_PACKAGE will read out the latest versions of these modules at that time.
So, if a repeatable call to READ_COMPLETE_ROOT_PACKAGE is required, then packages supplied to GENERATE_ROOT_PACKAGE must contain versions of their modules as SELECTED.
Specification
where:
STATUS_RETURN — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of ERROR_RETURN_DETAIL is required.
ROOT_PACKAGE_DETAILS — is an input parameter specifying the details of the root package and any sub-packages which are to be generated.
The details required are:
The module name for the root package.
The password which will be used to limit access to the packages created.
The file name that is to be used when the root package is read out.
An existence string that will be used as the title of any packages created.
The charge code specifying where the created packages will be stored by LIFESPAN.
LIST_OF_CONTENTS — is an input parameter specifying the module names which are to be ‘CONTAINED’ by the root package and the file names to be used when the modules are subsequently read out by LIFESPAN.
LIFESPAN_USER — is an input parameter specifying the LIFESPAN user name and password denoting the owner and manager of the root package structure.
It also specifies the DEVICE:[DIRECTORY]in which the root package and its intermediate sub-packages will be created.
LIST_OF_DC_PACKAGE — is a return parameter providing a list of the DCs and packages created.
ERROR_RETURN_DETAIL — is a return parameter providing a report of errors encountered during the attempt to generate the package structure.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
Further, for each module in the LIST_OF_CONTENTS, it will indicate whether the module has a latest version within LIFESPAN and, for each package to be created, it will indicate whether the module name to be associated with it already exists within LIFESPAN.
LOG_FILE — is an input parameter indicating the name of the incident log file to be created in the directory specified in LIFESPAN_USER.
If no input is made then the log file name defaults to LIFESPAN_PI.LOG.
Description
The procedure initially connects to LIFESPAN and from the LIST_OF_CONTENTS, it constructs a TREE of packages whose root is that specified in ROOT_PACKAGE_DETAILS.
Checks are carried out to ensure that the name of the root package and any sub-packages to be created are unique; sub-package module names and filenames are derived from the root package module name and filename by appending a letter (A-Z) or digit combination (0–9).
Checks are then carried out to ensure that each module in the LIST_OF_CONTENTS has a latest version within LIFESPAN.
Any errors encountered in these checks are noted in ERROR_RETURN_DETAIL.
The interface does not terminate on the first error but carries out all checks.
However, the interface will only proceed to create and enter the package structure if all checks are successful.
The intermediate sub-packages and the root package module names are then reserved in LIFESPAN and the resulting DCs are activated via the appropriate package.
The CONTAINS relationships, which will specifically SELECT actual issue numbers, are generated in 00.01A versions of the packages, which are then entered into LIFESPAN.
A check is performed to ensure the packages have been successfully entered into LIFESPAN.
An incident log file, as specified in LOG_FILE (default LIFESPAN_PI.LOG), is created in the directory specified in LIFESPAN_USER, containing pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
READ_COMPLETE_ROOT_PACKAGE
Function
Given a package name and its issue number, the procedure READ_COMPLETE_ROOT_PACKAGE will request the transfer of the contents of the package, and the contents of all its sub-packages, to a specified working area.
The user can specify an issue number or use the default which is the latest version, and can specify an optional parameter allowing either the entire structure or just the root package to be read out.
Specification
where:
STATUS_RETURN — returns TRUE if no errors are detected and the operation is successfully completed or FALSE if an error has occurred, indicating that a more detailed examination of ERROR_RETURN_DETAIL is required.
ROOT_PACKAGE_REQUIRED — is an input parameter specifying the name of the root package which is to be read out and the issue number of this package.
If the issue number is space-filled then the latest version of the package will be used and its issue number will be returned.
It can also specify the password to be used to obtain access to any packages and modules.
LIFESPAN_USER — is an input parameter specifying the LIFESPAN user name and password denoting the person for whom the root package and its content will be read out.
It also specifies the DEVICE:[DIRECTORY]where all the modules being read out will be placed.
WAIT_FLAG — is an input parameter specifying whether the procedure is to check that all online modules are read out to the specified directory before returning.
MODULES_ONLINE — is a return parameter indicating the online/offline status of the contained modules as follows:
TRUE — all modules requested are ONLINE
FALSE — one (or more) of the modules requested is OFFLINE.
ERROR_RETURN_DETAIL — is a return parameter providing a report of errors encountered during the attempt to read out the package structure.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
DEPTH — is an optional input parameter indicating whether all of the package structure is to be read out (default) or just the root package.
LOG_FILE — is an input parameter indicating the name of the incident log file to be created in the directory specified in LIFESPAN_USER.
If no input is made then the log file name defaults to LIFESPAN_PI.LOG.
Description
The procedure initially connects to LIFESPAN.
It then requests that all modules in the root package structure are read out into the directory specified in LIFESPAN_USER.
If requested by WAIT_FLAG, the procedure waits for all online modules to be transferred.
The procedure does not wait for offline modules to be transferred, however a value is returned in MODULES_ONLINE to indicate whether any modules are offline awaiting transfer.
If access to a package or module is denied to the user, the procedure attempts to gain access to it by supplying the password specified in ROOT_PACKAGE_REQUIRED.
If this attempt fails, the procedure does not process this package or module any further.
An incident log file, as specified in LOG_FILE (default LIFESPAN_PI.LOG), is created in the directory specified in LIFESPAN_USER, containing pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
ENTER_COMPLETE_ROOT_PACKAGE
Function
Given a package name and its issue number, the procedure ENTER_COMPLETE_ROOT_PACKAGE requests the transfer of the contents of the package and the contents of all its sub-packages from a specified working area into LIFESPAN.
A parameter can be specified to limit the entry to the contents of the root package.
The user can specify an issue number or use the default which is the latest version.
The procedure will check whether the specified working area has any modules contained within the root package structure which are eligible for entry and, if required, will automatically enter them into LIFESPAN or simply report which modules could be entered.
An eligible module is one which:
is referenced by an active DC through the package containing the module.
This DC should be associated with the specified LIFESPAN_USER
scans successfully
has a higher development issue number than the latest currently held in LIFESPAN.
The incident log file will contain a report of all modules which could be entered into LIFESPAN together with the associated DC number and the name of the package through which it is being entered.
It will also contain a report of any modules present in the work area which could not be entered because:
they are not referenced by an active DC for that user activated through the containing package
their issue number is not higher than the latest in LIFESPAN
they do not scan successfully.
Note that the complete package structure need not be present in the work area; only those modules which are to be entered.
Further, failure to enter a particular module because, for example, it is not higher than the latest in LIFESPAN will not prevent eligible modules from being entered.
Specification
where:
STATUS_RETURN — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of ERROR_RETURN_DETAIL is required.
ROOT_PACKAGE_REQUIRED — is an input parameter specifying the name of the root package which is to be entered and the issue number of this package.
If the issue number is space-filled then the latest version of the package will be used and its issue number will be returned.
It can also specify the password to be used to obtain access to any packages and modules.
LIFESPAN_USER — is an input parameter specifying the LIFESPAN user name and password denoting the person for whom the root package and its content will be entered.
It also specifies the DEVICE:[DIRECTORY]where the modules are to be found.
TEST_MODE — is an input parameter specifying whether the procedure is to enter all eligible modules (TEST_MODE = FALSE) or only give a report of what modules could be entered (TEST_MODE = TRUE).
ERROR_RETURN_DETAIL — is a return parameter providing a report of errors encountered during the attempt to enter the contents of the root package.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input or both.
DEPTH — is an input parameter indicating whether all of the package structure is to be searched for eligible modules or just the root package.
LOG_FILE — is an input parameter indicating the name of the incident log file to be created in the directory specified in LIFESPAN_USER.
If no input is made then the log file name defaults to LIFESPAN_PI.LOG.
Description
The procedure initially connects to LIFESPAN.
For each contained package, the procedure determines the contents of all active DCs on the package for the user specified in LIFESPAN_USER, and which of the package's modules are present in the specified working directory.
Each module which is present and on an active DC is then scanned.
If it scans successfully and its issue number is higher than the latest in LIFESPAN, the module is entered into LIFESPAN (if TEST_MODE = FALSE).
The procedure performs two passes, the first to enter packages only, the second to enter non-package modules.
This is necessary to allow for the fact that the module relationships of a package may change by the addition of new module/packages or the removal of others, or both.
Note that if TEST_MODE is set to TRUE because no modules are entered into LIFESPAN, then not all modules eligible for entry may be listed.
However, whenever TEST_MODE is set to FALSE they will be entered into LIFESPAN, provided they satisfy the criteria defined above.
Therefore, a user may prefer to enter package modules manually, and use the procedural interface to enter the modules thereafter.
An incident log file, as specified in LOG_FILE (default LIFESPAN_PI.LOG), is created in the directory specified in LIFESPAN_USER, containing pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
LIST_COMPLETE_ROOT_PACKAGE
Function
Given a package name and its issue number, the procedure LIST_COMPLETE_ROOT_PACKAGE lists the contents of the package and the contents of all its sub-packages.
The user can specify an issue number or use the default, which is the latest version; the version number can also be specified as ‘H’ to track the highest (latest) versions of sub-packages regardless of the actual version number specified in the module relationships.
A parameter can be specified to limit the list to the root package only.
A module name can be specified so that only the the names of packages containing this module are shown.
In this way, the position(s) of a particular module in a package structure can be obtained.
For each module, the following information will be listed:
relationship mnemonic (slctd — selected, prfrd — preferred or latst — latest)
module name
module location: ON (online), OFF (offline), HCO (hard copy only), noiss (if module issue number not known).
version number specified by relationship
destination file specification.
If any module identifies as its relation an earlier version than the latest held by LIFESPAN, then the relationship mnemonic will be preceded by an asterisk (*) character.
If tracking by highest, the relationship mnemonic will be preceded by ‘final’.
Specification
where:
STATUS_RETURN — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of ERROR_RETURN_DETAIL is required.
ROOT_PACKAGE_REQUIRED — is an input parameter specifying the name of the root package which is to be listed and the issue number of this package.
If the issue number is space-filled then the latest version of the package will be used and its issue number will be returned.
The issue number can be specified as ‘H’ to track sub-packages by their latest version.
It can also specify the password to be used to obtain access to any packages and modules.
LIFESPAN_USER — is an input parameter specifying the LIFESPAN user name and password, for whom the root package and its contents will be listed.
It also specifies the DEVICE:[DIRECTORY]where the list file will be placed.
CHECK_MODULE — is an input parameter specifying the name of the module which is to be found in the package structure and to have its position listed.
If the length of this field is set to zero, the complete package structure will be listed.
ERROR_RETURN_DETAIL — is a return parameter providing a report of errors encountered during the attempt to list the package structure.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
DEPTH — is an input parameter indicating whether all of the package structure is to be listed or just the root package.
LOG_FILE — is an input parameter indicating the name of the incident log file to be created in the directory specified in LIFESPAN_USER.
If no input is made then the log file name defaults to LIFESPAN_PI.LOG.
Description
The procedure initially connects to LIFESPAN.
It then lists the contents of the root package and all sub-packages.
If the CHECK_MODULE name length is zero, all modules in the package structure are listed, otherwise only those packages containing CHECK_MODULE are listed.
If the issue number is specified as ‘H’, details of the latest version of packages will be obtained, regardless of the actual version number specified in the contained relationship.
An incident log file, as specified in LOG_FILE (default LIFESPAN_PI.LOG), is created in the directory specified in LIFESPAN_USER, containing pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_CREATE_DC
Function
Given a DC title, the procedure PI_CREATE_DC will request that a DC be created in LIFESPAN with that title.
Specification
where:
/STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL.ERRORS is required.
/USER_INPUT/ — is an input parameter specifying the DC title to be used when creating a new DC in LIFESPAN.
/LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
/RETURN_DETAIL/ — is a return parameter providing the following information:
ERRORS/ — provides a report of the errors encountered during the attempt to create the DC in LIFESPAN.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
DC_ID/ — provides the DC identifier reserved in LIFESPAN if the procedure managed to do this successfully.
Description
The procedure initially connects to LIFESPAN.
It then requests that a DC be created using the title supplied by the user.
The associated DC user will be the user who actually calls this procedure.
An incident log file (OPTION211_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_UPDATE_DC
Function
Given the information listed below, PI_UPDATE_DC will request that the given DC be updated within LIFESPAN.
The information required is:—
DC identifier
Basis DC identifier
DC classification
DC job reference
DC priority
DC description lines (maximum of 20)
DC superseded DCs (maximum of 10)
DC modules (maximum of 29)
DC SPRs (maximum of 10)
DC referenced DCs (maximum of 10)
This procedure can be used for three different purposes:
To enter information about a DC for the first time
To update the information already entered about a DC
To specify that a new DC is to be based on an existing DC, and to update the information to suit the new DC.
A DC may be updated as many times as you wish if the following rules are satisfied:
You are the user associated with the DC
The DC has not yet been submitted for assessment.
A DC may reference up to 29 modules (note that you should have a maximum of one package on any DC, to allow for successful approval) and, at the time of approval, all referenced modules must be contained within the package through which the DC is activated.
Specification
Where:
STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL is required.
USER_INPUT/ — is an input parameter specifying information to be included on the DC being updated.
LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
RETURN_DETAIL/ — is a return parameter providing a report of the errors encountered during the attempt to update the DC information.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
Description
The procedure initially connects to LIFESPAN.
It then validates the information supplied by the user and ensures that the following mandatory fields have been filled (either previously or by this call):
DC Title
DC Classification
DC Job Reference
DC description (at least one line)
Note that if you wish to base the current DC on an existing DC, the identifier of the Basis should be supplied.
The basis DC must already exist, and you must be the associated user of the DC or an interested user.
This will cause all subsequent pages to be replaced with the basis details (except for the DC title).
If you do not wish to base the current DC on an existing one, this field should contain the current DC identifier.
Note also that the priority field defaults to Routine, if this is the first time the DC has been updated.
An incident log file (OPTION212_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_SUBMIT_DC
Function
Given a DC identifier, the procedure PI_SUBMIT_DC will request that the DC be submitted in LIFESPAN for assessment by affected users.
After submitting the DC, no further modifications can be made to it, so it is necessary to be sure that no further changes are required.
The only way it can be changed after this point is to abort it (using LIFESPAN option 2.7.0) and to create a new DC based on this one.
In order to submit a DC successfully, the following rules must be satisfied:
You must have LIFESPAN DC Operations privilege
You must be the user associated with the DC
You must have access to all the modules defined in the DC
The DC must reference at least one module
The DC must be in state CREated.
Having submitted the DC, LIFESPAN sends details, via mail messages, to all interested parties for voting; i.e. the managers of any modules referenced, and the managers of any packages containing one or more of these modules.
This includes the user associated with the DC, who must also make an assessment.
No further work can be done on the DC until assessments have been received from these users.
Specification
Where:
STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL is required.
USER_INPUT/ — is an input parameter specifying the DC identifier to be submitted in LIFESPAN for assessment by affected users.
LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
RETURN_DETAIL/ — is a return parameter providing a report of the errors encountered during the attempt to submit the DC for assessment.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
Description
The procedure initially connects to LIFESPAN.
It then requests that the DC be submitted in LIFESPAN for assessment by affected users.
An incident log file (OPTION213_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_ASSESS_DC
Function
Given a DC identifier, an assessment comment and an indication as to whether you agree or disagree to the DC being implemented, the procedure PI_ASSESS_DC will request that your formal vote be recorded.
Once you have assessed this DC, your decision cannot be changed, so it is important to ensure that the consequences of the decision have been adequately considered.
You must be an assessor of the DC to register your decision (you will have been sent a mail message asking you to assess the DC).
This call follows the LIFESPAN DC access rules which restricts access to a DC to the associated DC user or an interested user (i.e. the manager of any modules on the DC or the manager of packages containing one or more of these modules).
If one or more assessors do not agree to the proposed changes, the DC will automatically be rejected (once all the votes have been cast).
If this happens you should create a new DC based on the rejected one and change it appropriately to include the assessors' comments.
If all assessors agree to the changes being implemented, the DC will automatically become agreed.
Specification
Where:
STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL is required.
USER_INPUT/ — is an input parameter specifying the DC identifier to be assessed, the assessment comment and this user's decision as to whether he agrees with the changes being implemented.
LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
RETURN_DETAIL/ — is a return parameter providing a report of the errors encountered during the attempt to assess the DC.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
Description
The procedure initially connects to LIFESPAN.
It then requests that the DC be assessed (for the logged on user) with his comments.
An incident log file (OPTION220_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_ACTIVATE_DCS
Function
Given a package name and a list of DCs, the procedure PI_ACTIVATE_DCS will request that the DCs be activated via the specified package.
Once the DC(s) have been activated, you may enter development versions of the modules referenced (on the DC(s)) into LIFESPAN.
In order to activate a DC successfully, the following rules must be satisfied:
You must be the user associated with the DC
The DC cannot refer to any modules referred to by a DC activated via another package (this prevents conflicting modifications)
The DC must be in the AGReed state
You must be the manager of the package.
In order to work on a DC it is necessary for all modules referenced to be in a single package.
If no such package is available, one may be created specifically to complete the work identified by the DC.
Otherwise, the DC must be aborted and replaced by a number of other DCs, each of which covers only part of the original work required.
Note that more than one DC can be activated via a package at the same time, up to a maximum of 10, provided that each satisfy the above conditions.
All the DCs can be worked on at the same time (which is why they must all be handled through one user and one package), and the package need only be approved once for them all.
At the time of approval all modules referred to by a DC must be contained in the package through which the DC has been activated.
Specification
Where:
STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL is required.
USER_INPUT/ — is an input parameter specifying the package via which the DCs will be activated and the list of DCs for activating.
LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
RETURN_DETAIL/ — is a return parameter providing a report of the errors encountered during the attempt to activate the DC(s).
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
Description
The procedure initially connects to LIFESPAN.
It then requests that the DC(s) be activated via the specified package to allow the referenced modules to be changed.
An incident log file (OPTION240_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_VIEW_DC
Function
Given a DC identifier, the procedure PI_VIEW_DC will request that the following DC details be returned:
Title/ — The DCs title
Class/ — The DC classification
Job Ref/ — The DC job reference
Date/ — The date of the last state change for the DC
User/ — The LIFESPAN user associated with the DC
State/ — The current state of the DC
Priority/ — The DC priority
Description/ — The DC description
Superseded DCs/ — A list of the DCs superseded by this DC
Modules/ — The modules to be updated
Related SPRs/ — A list of related SPRs
Referenced DCs/ — A list of the referenced DCs
This call follows the LIFESPAN DC access rules which restricts access to a DC (unless the optional switch has been set in the configuration file) to the associated DC user or an interested user (i.e. the manager of any modules on the DC or the manager of packages containing one or more of these modules) or, if applicable, the nominated approver of the package via which the DC has been activated.
Specification
Where:
STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL.ERRORS is required.
USER_INPUT/ — is an input parameter specifying the DC identifier.
LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
RETURN_DETAIL/ — is a return parameter providing the following information:
ERRORS/ — provides a report of the errors encountered during the attempt to view the DC.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
Description
The procedure initially connects to LIFESPAN.
It then returns the DC details for the given DC identifier.
An incident log file (OPTION281_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_VIEW_DC_ASSESSORS
Function
Given a DC identifier and start name, the procedure PI_VIEW_DC_ASSESSORS will request a list of DC assessors and whether they have assessed it.
The start name can be used to to begin the list from a particular start point.
This call follows the LIFESPAN DC access rules which restricts access to a DC to the associated DC user or an interested user (i.e. the manager of any modules on the DC or the manager of packages containing one or more of these modules) or, if applicable, the nominated approver of the package via which the DC has been activated.
Specification
Where:
STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL.ERRORS is required.
USER_INPUT/ — is an input parameter specifying the DC identifier and start name for the list of assessors to be returned.
LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
RETURN_DETAIL/ — is a return parameter providing the following information:
ERRORS/ — provides a report of the errors encountered during the attempt to obtain the DC assessors.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
USERS/ — provides a list of users (DC assessors) and whether they have assessed the DC.
Description
The procedure initially connects to LIFESPAN.
It then returns the list of DC assessors for the given DC identifier and start name.
Note that the start name need not be a valid LIFESPAN username as it is used to indicate the starting point for the user name search.
If the start name length is zero, the list will not be restricted and will start from the first user with an interest in the DC.
An incident log file (OPTION282_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_VIEW_DC_ASSESSMENT
Function
Given a DC identifier and LIFESPAN username, the procedure PI_VIEW_DC_ASSESSMENT will request the assessment information (assessor's comments and the list of modules which make him an assessor for this DC).
This call follows the LIFESPAN DC access rules which restricts access to a DC to the associated DC user or an interested user (i.e. the manager of any modules on the DC or the manager of packages containing one or more of these modules) or, if applicable, the nominated approver of the package via which the DC has been activated.
Specification
Where:
STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL.ERRORS is required.
USER_INPUT/ — is an input parameter specifying the LIFESPAN username and DC identifier for which the DC assessment is to be returned.
LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
RETURN_DETAIL/ — is a return parameter providing the following information:
ERRORS/ — provides a report of the errors encountered during the attempt to obtain the DC assessment.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
ASSESSMENT/ — indicates whether the given user has accepted, rejected or has not yet assessed the DC.
Note that if the user has not yet assessed the DC only the MODULES field in this structure will contain valid information.
MODULES/ — provides a list of modules which give this user an interest in the DC.
DC_INFO/ — provides the DC identifier, title, classification and job reference for the DC.
ASSESS_INFO/ — provides the LIFESPAN username, personal name, date of assessment and list of assessment lines.
Description
The procedure initially connects to LIFESPAN.
It then returns the assessment information for the given DC identifier and LIFESPAN user.
An incident log file (OPTION283_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_CREATE_PACK_OR_PROD
Function
Given a module owner, charge code, existence string, module name, filename and a flag to indicate whether the module is a package or a product, PI_CREATE_PACK_OR_PROD will request that the module name be reserved in LIFESPAN with the associated user-supplied information.
This is necessary since all module names must be known to LIFESPAN (and unique) before they can be used.
Specification
Where:
STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL.ERRORS is required.
USER_INPUT/ — is an input parameter specifying the details of the package or product which is to be created:
the module name for the package or product
the module owner (default: lifespan_user)
the filename to be used when the package or product is read out of LIFESPAN
an existence string to describe why the module is being reserved
the charge code where the package or product will be stored by LIFESPAN
a boolean flag to indicate whether the module being reserved is a package or a product.
LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
RETURN_DETAIL/ — is a return parameter providing the following information:
ERRORS/ — provides a report of the errors encountered during the attempt to reserve the module name.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
DC_ID/ — provides the DC identifier reserved in LIFESPAN if the procedure was successful.
Description
The procedure initially connects to LIFESPAN.
It then creates a package or product with the specified module name, filename, owner and existence string, under the specified charge code.
If the owner is not specified, this defaults to the user specified in LIFESPAN_USER.
If the package or product is reserved successfully, LIFESPAN will create a skeleton package module, which is basically a module header with an issue number of 00.00Z.
If the package or product is created successfully, a design change identifier will be returned in the agreed state.
The associated DC user will be the user who actually calls this procedure.
An incident log file (OPTION111_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_RESERVE_SRCE_FGN_AND_PMODEL
Function
Given a module owner, charge code, existence string, a list of up to 29 modules (indicating whether each is a source or foreign module), PI_RESERVE_SRCE_FGN_AND_PMODEL will request that the module names be reserved in LIFESPAN with the associated user-supplied information.
This is necessary since all module names must be known to LIFESPAN (and unique) before they can be used.
Specification
Where:
STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL.ERRORS is required.
USER_INPUT/ — is an input parameter specifying the details of the source, foreign and/or pmodel modules being reserved:
the module names and types
the module owner (default: lifespan_user)
an existence string to describe why the module is being reserved
the charge code where the module will be stored by LIFESPAN
LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
RETURN_DETAIL/ — is a return parameter providing the following information:
ERRORS/ — provides a report of the errors encountered during the attempt to reserve the module names.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
DC_ID/ — provides the DC identifier reserved in LIFESPAN if the procedure was successful.
Description
The procedure initially connects to LIFESPAN.
It then validates each of the modules and ensures that there are no duplicate entries in the list.
If successful, the module names are reserved in LIFESPAN under the specified charge code.
If the owner is not specified, this defaults to the user specified in LIFESPAN_USER.
If the source, foreign and/or pmodel modules are reserved successfully, a design change identifier will be returned in the agreed state.
The associated DC user will be the user who actually calls this procedure.
An incident log file (OPTION113_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_SUBMIT_A_PACKAGE
Function
Given a LIFESPAN package, LIFESPAN username and a date you wish the approval completed by (in the format DD-MMM-YYYY), the procedure PI_SUBMIT_A_PACKAGE will request that the given user approve the package by the given date (by means of a LIFESPAN mail message).
This means that when the package has been submitted:
no more work can be done on any of the modules in the package
all the DCs which are currently Active on the package will be changed to a state of Being Approved and will be locked.
The user requesting the package be submitted for approval must its manager and the nominated user must have LIFESPAN Quality Assurer privilege.
Note that you cannot submit a package to yourself for approval.
A package may only be submitted for approval if its contents are structured as follows:
the package must select itself
for modules which are subject to DCs via the package, there are a number of possibilities.
if the latest version of the module is a development version then the package must contain it as LATEST.
if the latest version of the module is an approved version then, although it is the subject of a DC, no development has taken place.
Such a module may be contained in the package as either LATEST or SELECTED APPROVED version.
Only if it is contained as LATEST will it be approved again and its issue number increased.
modules which are not the subject of any DC on the package, must be contained in the package as SELECTED APPROVED versions.
These modules will not be approved.
no modules may be contained in the package as PREFERRED.
Specification
Where:
STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL is required.
USER_INPUT/ — is an input parameter specifying the package to be submitted for approval, the nominated approver (who must have LIFESPAN Quality Assurer privilege) and the date the package is to be approved by.
This date must be today's date or a date in the future (in the format DD-MMM-YYYY).
LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
RETURN_DETAIL/ — is a return parameter providing a report of the errors encountered during the attempt to submit the package for approval.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
Description
The procedure initially connects to LIFESPAN.
It then requests that the given package be submitted for quality approval by the nominated LIFESPAN user.
A mail message is sent to that user requesting that the package be approved by the given date.
An incident log file (OPTION151_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_PREPARE_A_PACKAGE
Function
Given a LIFESPAN package and filename, the procedure PI_PREPARE_A_PACKAGE will request that the quality assurance listings be prepared in order to assess a package for approval.
You must be the package manager or the user nominated to approve the package to obtain the approval listings.
The package manager may only obtain these listings provided that the package has not yet been submitted for approval.
The nominated approver may only obtain the listings after the package has been submitted for approval.
In either case, listings will not be prepared immediately and there must be no errors in the structure (as detailed in PI_SUBMIT_A_PACKAGE).
If one or more modules are offline, you will need to repeat this call when all modules are available online.
Note, however, LIFESPAN will automatically request the modules be brought back online.
The nominated approver must use this routine before being allowed to grant approval to a package but need not prepare the listings to deny approval.
Specification
Where:
STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL is required.
USER_INPUT/ — is an input parameter specifying the package being prepared for approval and the filename to contain the listings.
This file will be placed in the directory specified in LIFESPAN_USER.
LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
WAIT_FLAG/ — is an input parameter specifying whether the procedure is to check that the QA listings file has been created before returning.
RETURN_DETAIL/ — is a return parameter providing a report of the errors encountered during the attempt to prepare the package for approval.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
Description
The procedure initially connects to LIFESPAN.
It then requests that the given package be prepared for approval and that the QA listings are produced.
If requested by WAIT_FLAG, the procedure waits until the listings file has been created in the user's directory specified in LIFESPAN_USER.
An incident log file (OPTION152_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_APPROVE_A_PACKAGE
Function
Given a LIFESPAN package, an approval comment and a BOOLEAN flag, the procedure PI_APPROVE_A_PACKAGE will request that the package be granted or denied approval as appropriate.
You must have LIFESPAN Quality Assurer privilege to approve a package and must have been previously nominated by the package manager.
If you are granting approval, you must have successfully prepared the package (and obtained the approval listings).
Note that only the nominated approver can grant approval to a package but that the nominated approver or one of his ascendants (who has Quality Assurer privilege) can deny approval to a package.
If one or more modules are offline, you will need to repeat this call when all modules are available online.
Note, however, LIFESPAN will automatically request the modules be brought back online.
By granting approval to a package, LIFESPAN will update all Design Changes to the Approved state.
All modules which are selected as LATEST within the package, together with the package module itself, will be edited by LIFESPAN to produce a new baseline of approved modules.
By denying approval to the package, LIFESPAN will return all Design Changes back to the Active state and allow the package manager to update the modules again and then resubmit the package for approval.
Specification
Where:
STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL is required.
USER_INPUT/ — is an input parameter specifying the package being approved, an approval comment and whether the package is being Granted approval or Denied approval.
If the package is being approved, the approval comment will be added as a comment to the modification record of every module being approved.
Otherwise, the comment is used in the mail message to inform the package manager that approval has been denied.
LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
WAIT_FLAG/ — is an input parameter specifying whether the procedure is to check that the package has been successfully approved before returning.
This parameter is only used by the routine if the package is being granted approval.
RETURN_DETAIL/ — is a return parameter providing a report of the errors encountered during the attempt to grant/deny approval to the package.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
Description
The procedure initially connects to LIFESPAN.
Depending on whether the nominated approver selects to grant or deny approval, the procedure will request this of LIFESPAN.
If requested by WAIT_FLAG, the procedure waits until the package has been successfully approved.
An incident log file (OPTION153_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
READ_FROM_PACKAGE
Function
Given a package name, issue and a list of modules, the procedure READ_FROM_PACKAGE will request the transfer of the specified modules in the package to a specified working area.
The user can specify an issue number or use the default which is the latest version.
Specification
Where:
STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of ERROR_RETURN_DETAIL is required.
ROOT_PACK/ — is an input parameter specifying the name of the package whose selected modules are to be read out and the issue number of the package.
If the issue number is space_filled then the latest version of the package will be used and its issue number will be returned.
It can also specify the password to be used to obtain access to any modules.
MODULES/ — is an input parameter specifying the modules in the package which are to be read out.
LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported and the modules being read out will be placed.
WAIT_FLAG/ — is an input parameter specifying whether the procedure is to check that all online modules are read out to the specified directory before returning.
MODULES_ON_LINE/ — is a return parameter indicating the online/offline status of the modules requested to be read out as follows:
TRUE/ — all modules requested are ONLINE
FALSE/ — one (or more) of the modules requested is OFFLINE.
ERROR_RETURN_DETAIL/ — is a return parameter providing a report of the errors encountered during the attempt to read out the requested modules.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
Description
The procedure initially connects to LIFESPAN.
It then requests that the user supplied modules (in the package) are read out into the directory specified in LIFESPAN_USER.
If requested by WAIT_FLAG, the procedure waits for all online modules to be transferred.
The procedure does not wait for offline modules to be transferred, however a value is returned in MODULES_ON_LINE to indicate whether any modules are offline awaiting transfer.
If access to a module is denied to the user, the procedure attempts to gain access to it by supplying the password specified in ROOT_PACK.
If this attempt fails, the procedure does not process this module any further.
An incident log file (READ_FROM_PACKAGE_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
READ_MODULE
Function
Given a module name, an issue and a file name, the procedure READ_MODULE will request the transfer of the specified module to a specified working area.
The user can specify an issue number or use the default which is the latest version.
Specification
Where:
STATUS_RETURN/ — returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of ERROR_RETURN_DETAIL is required.
USER_INPUT/ — is an input parameter specifying the name of the module to be read out and the issue number of the module.
If the issue number is space_filled then the latest version of the module will be used and its issue number will be returned.
It can also specify the password to be used to obtain to the module.
LIFESPAN_USER/ — is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the module file name and the DEVICE:[DIRECTORY]where any errors will be reported and the modules being read out will be placed.
WAIT_FLAG/ — is an input parameter specifying whether the procedure is to check that all online modules are read out to the specified directory before returning.
MODULES_ON_LINE/ — is a return parameter indicating the online/offline status of the module requested to be read out as follows:
TRUE/ — module requested is ONLINE
FALSE/ — module requested is OFFLINE.
ERROR_RETURN_DETAIL/ — is a return parameter providing a report of the errors encountered during the attempt to read out the requested modules.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
Description
The procedure initially connects to LIFESPAN.
It then requests that the user supplied module be read out into the file name and directory specified in LIFESPAN_USER.
If requested by WAIT_FLAG, the procedure waits for the module (if online) to be transferred.
The procedure does not wait for an offline module to be transferred, however a value is returned in MODULES_ON_LINE to indicate that the module is offline awaiting transfer.
If access to the module is denied to the user, the procedure attempts to gain access to it by supplying the password specified in MODULE.
If this attempt fails, the procedure does not process the module any further.
An incident log file (READ_MODULE_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_VIEW_MODULE_DETAILS
Function
Given a module name and optionally, a password, the procedure PI_VIEW_MODULE_DETAILS will request that the module's details be returned:
Module Type
The module's type: SOURCE, FOREIGN, PMODEL or PACKAGE.
Charge Code
The charge code where all versions of this module are stored in LIFESPAN.
Latest Version
The latest version of the module in LIFESPAN.
If no version has been entered, this will be NONE.
Preferred Version
The preferred version of the module.
If this has not been set, this will be NONE.
Module Owner
The LIFESPAN user designated the owner of the module.
Module Manager
The LIFESPAN user designated the manager of the module.
Module Title
The title for the module.
Product
If this module is a package, a flag to indicate whether this module has been reserved for issue as a product (TRUE) or not (FALSE).
To prevent unauthorised access to module details, LIFESPAN will only return this information if one of the following conditions are satisfied:
You must be the owner or manager of the module, or a relative of the module's owner or manager (ascendant or descendant) OR
You have been granted special access to the module by the owner or manager of the module OR
You have supplied the current module password, either now or at any time since the password was last changed, or the module has no password.
A module password must be supplied if you do not have automatic access to the module.
If a password is required, you will only ever provide it once, since LIFESPAN keeps track of which users have supplied the password for a specific module.
However, if the module's manager changes its password at a later date, this information is cancelled.
Whenever a new version of a module is entered into LIFESPAN, its existence string is modified to be the title of the new version of the module.
Specification
Where:
STATUS_RETURN
returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL.ERRORS is required.
USER_INPUT
is an input parameter specifying the module name and and password (if necessary to gain access to the module).
LIFESPAN_USER
is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
RETURN_DETAIL
is a return parameter providing a report of the errors encountered during the attempt to view the module's details.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
Also, if there were no errors, the information detailed above is returned.
Description
The procedure initially connects to LIFESPAN.
It then requests the module details for the given module.
An incident log file (OPTION171_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
PI_UPDATE_MODULE_DETAILS
Function
Given a module name, the procedure PI_UPDATE_MODULE_DETAILS will request that the following supplied information be updated:
Password
This may be changed to stop unauthorised users from accessing this particular module or cleared to remove any previously set password.
Preferred version
The preferred version is generally the version of the module which the module manager recommends for use.
This must be a version of the module already known to LIFESPAN.
If this field is zero length, no preferred version is set.
Module owner
The current owner of the module.
This defaults to the current module owner.
If being changed, the new name must be an existing LIFESPAN user, and the new module owner must be related to you (as the module manager).
Module manager
The current manager of the module.
This defaults to the current module manager.
If being changed, the new name must be an existing LIFESPAN user, and the new module manager must be related to you (as an ascendant or descendant).
The module manager of a package cannot be changed if there are currently any active DCs on the package.
Module Title (existence)
The module title (or existence string) can be changed to provide a better explanation of the module.
However, when a new version of the module is entered into LIFESPAN its existence string will be replaced by the title of the new version of the module (as specified in the module header).
In order to update the details of a module you must be the current module manager.
Specification
Where:
STATUS_RETURN
returns TRUE if no errors are detected and the operation is successfully completed, or FALSE if an error has occurred, indicating that a more detailed examination of RETURN_DETAIL is required.
USER_INPUT
is an input parameter specifying the module name and information you wish to update.
LIFESPAN_USER
is an input parameter specifying the LIFESPAN username and password to be used to access LIFESPAN.
It also specifies the DEVICE:[DIRECTORY]where any errors will be reported.
RETURN_DETAIL
is a return parameter providing a report of the errors encountered during the attempt to update the module's details.
This parameter will indicate whether an internal LIFESPAN error has occurred or an error resulting from invalid user input, or both.
Description
The procedure initially connects to LIFESPAN.
It then requests that the module details for the given module be updated as supplied by the user.
An incident log file (OPTION180_PI.LOG) is created in the directory specified in LIFESPAN_USER, to contain pertinent details of the success or failure of the call to this procedure.
Finally, the procedure disconnects from LIFESPAN.
OPERATING INSTRUCTIONS
This section describes the preparatory work which must be carried out before PI can be used.
Program Development
Software to invoke PI should be based on the specifications given in Sections 2 to 22.
If the invoking software is written in PASCAL, it should be compiled using the following PI environment files:
PIPEN.PEN parameter specification
PIEGENROT.PEN containing the interface specification for GENERATE_ROOT_PACKAGE
PIEREADRP.PEN containing the interface specification for READ_COMPLETE_ROOT_PACKAGE
PIEENTER.PEN containing the interface specification for ENTER_COMPLETE_ROOT_PACKAGE
PIELISTRP.PEN containing the interface specification for LIST_COMPLETE_ROOT_PACKAGE
PIECREDC.PEN containing the interface specification for PI_CREATE_DC
PIEUPDTDC.PEN containing the interface specification for PI_UPDATE_DC
PIESUBDC.PEN containing the interface specification for PI_SUBMIT_DC
PIEASSDC.PEN containing the interface specification for PI_ASSESS_DC
PIEACTDC.PEN containing the interface specification for PI_ACTIVATE_DCS
PIEVIEWDC.PEN containing the interface specification for PI_VIEW_DC
PIEASSORS.PEN containing the interface specification for PI_VIEW_DC_ASSESSORS
PIEASMENT.PEN containing the interface specification for PI_VIEW_DC_ASSESSMENT
PIECREPCK.PEN containing the interface specification for PI_CREATE_PACK_OR_PROD
PIESRCFGN.PEN containing the interface specification for PI_RESERVE_SRCE_FGN_AND_PMODEL
PIEQASUB.PEN containing the interface specification for PI_SUBMIT_A_PACKAGE
PIEQAPREP.PEN containing the interface specification for PI_PREPARE_A_PACKAGE
PIEQAAPPR.PEN containing the interface specification for PI_APPROVE_A_PACKAGE
PIEREADFP.PEN containing the interface specification for READ_FROM_PACKAGE
PIEREADMD.PEN containing the interface specification for READ_MODULE
PIEUPDTMD.PEN containing the interface specification for PI_UPDATE_MODULE_DETAILS
PIEVIEWMD.PEN containing the interface specification for PI_VIEW_MODULE_DETAILS
These environments were compiled using the VAX PASCAL compiler version 3.9.
After successful compilation, the software must be linked with PI object libraries, PI.OLB and PI_UTIL.OLB.
The link string should be specified as:
When linking, the following acceptable warning will be produced:
This will not affect the program operation.
The environment files and the object libraries are PI issue files and should reside on the LIFESPAN Installation Account.
Program Operation
Prior to running the software, the user should check that LIFESPAN is running with facilities made available, and should then invoke the LIFESPAN user access file to set up the necessary logical names (see the ‘Installation and Management of LIFESPAN’).
For each call to a PI routine, an incident log file is created in the directory specified in the input parameter LIFESPAN_USER.
This log contains details of the LIFESPAN user attempting to access PI.
For example:
USER 1 attempting to access LIFESPAN-PI on 19-SEP-1988 at 11:17:06.52
Failure to create this file or failure to subsequently write to this file, will cause the user program to be terminated with an appropriate error message, for example:
If this occurs the user should check that there is sufficient disk quota in the specified directory and that the user has write access to the directory.
Mail Messages
PI accesses the LIFESPAN mail system in the same manner as a normal user would, to check on the completion and success of various transactions.
To perform these checks, PI requires that the specified user has no mail in the LIFESPAN mail system on invocation.
If any mail exists, it is formatted to a file, or set of files, in the directory specified in LIFESPAN_USER, and then deleted from LIFESPAN.
Details of the mail file(s) created will be reported in the incident log file as follows:
Mail for this user is being cleared.
Mail can be found in the following files:-
If, when PI attempts to inspect the user's mail, the expected message is not present, then the mail that is present is printed, cleared, and reported in the incident log file, as described above.
There are two main reasons why mail messages may appear to be slow in arriving:—
the computer is busy servicing requests from other processes.
if using PI from a remote node, the DECNET communications may be slow.
In both cases, PI waits for the mail message and reports to the incident log file that it is ‘Waiting for mail’ periodically.
If the computer is slow, the mail message should eventually appear and PI will then continue with its normal operation.
If, after a set period of time PI has not received the expected mail message, it will ‘time-out’ and continue with its normal operation, assuming that the message has been deleted.
A subsequent failure may occur as a result of an earlier failure which the mail message attempted to report.
For this reason, the expected mail identifier is reported in the incident log file and the user is requested to manually check for success or failure.
An Example Interface — PI_TEST
PITEST.PAS provides a Pascal interface to the LIFESPAN PI version 05.00 routines.
It is only intended as an example and does not necessarily indicate the best way to call the routines.
e.g. Some of the routines require many inputs and would be best served by an external input file.
PI_TEST.EXE is a compiled and linked vesion of PITEST.PAS and may be run ‘as is’ with your existing LIFESPAN process.
You simply need to assign the logical LIFESPANCONFIGURATION to point to the configuration file of the LIFESPAN process you wish to access as follows:
where SYS$DEVICE:[LIFESPAN]LSLIVE.DAT is the full filename of the configuration file including the device and directory path.
PI_TEST.EXE may then be run by invoking the following command:
A menu will then appear allowing selection of one of the seventeen version 05.00 PI routines.
Having selected one of the options you will be prompted for further inputs.
The selected PI routine will then be called and an indication of its success or failure will be given.
If LIFESPAN ERROR is returned as TRUE then a LIFESPAN error has occurred.
If SOFT ERROR is returned as TRUE then the user supplied details have caused an error.
A clearer indication of the exact result of the call to the PI routine may be found in the PI routine log file which is automatically produced in the working directory.
After each call to a PI routine, simply pressing the Return key reverts you back to the main menu from which another PI routine may be called or you may exit by entering 0.
Writing Your Own Routines For LIFESPAN PI.
PITEST.PAS consists of a small main program and fifteen procedures.
The main program drives a menu allowing selection of any of the fifteen PI routines, obtains the basic user inputs applicable to all of the PI routines (e.g. LIFESPAN username, password and working directory), and calls the procedure corresponding to the PI routine selected.
The selected procedure then obtains any other inputs required by the chosen PI option and calls the delivered PI routine.
If you have a Pascal compiler you may wish to re-use, amend or string together various of the procedures within PITEST.PAS to produce your own routines e.g. you may wish to use the three options: create DC, update DC, and submit DC, to produce a routine enabling you to go through the whole create and submit procedure for DCs.
Having created a new routine it should be compiled in the normal way and then linked as described on in section 23.1.
If this is successful it may be run as described above.
ERROR DETAILS
Two categories of error may occur when using PI: ‘Recoverable Errors’ and ‘LIFESPAN Errors’.
Recoverable Errors
Each of the following errors has a possible recovery action as shown.
If the specified action does not resolve the error, then the user should contact YSS for assistance.
Error 
1014 Communication line to LIFESPAN has timed out.
Action
PI has encountered a communication failure.
This may be due to LIFESPAN running slowly.
Please try again later.
Error 
1016 No Communication lines to LIFESPAN available.
Action
LIFESPAN is currently handling its maximum number of users.
Please try again later when there is a free user slot available.
Error 
1020 LIFESPAN facility unavailable.
Action
Although LIFESPAN is running, facilities are at present not available.
Please request the LIFESPAN Manager to make facilities available.
Error 
1028 Communication failure for Logon to LIFESPAN.
Action
An unexpected failure occurred when communicating with LIFESPAN.
Please check that the LIFESPAN Manager has not stopped LIFESPAN.
Error 
1029 Logon to LIFESPAN Failed.
Action
Invalid LIFESPAN user name or password supplied to PI.
Please supply a valid name and password.
Error 
1036 LIFESPAN error creating package module.
See mail message: xxxxxx in the printed mail.
Action
PI has failed to create a package module.
Please read the specified mail message for more information on the error.
Error 
1046 Error creating new package file.
Action
Failure to create package module in the supplied working directory.
Please verify that there is sufficient disk quota and privilege to create a file in the supplied working directory.
Error 
1047 Error rewriting new package file.
Action
Failure to write to package module in the supplied working directory.
Please verify that there is sufficient disk quota and privilege to write to a file in the supplied working directory.
Error 
1055 Space filled module name invalid.
Action
Space filled module name supplied to PI.
This is invalid syntax.
Please supply a valid module name.
Error 
1056 Module name syntax invalid:
Action
Module name with invalid syntax supplied to PI.
Please supply a valid module name.
Error 
1057 Package name not reserved:
Action
PI has failed to reserve the specified package name.
See preceding error message in the incident log file for a fuller explanation of the error encountered.
Error 
1058 Filename syntax invalid:
Action
File name with invalid syntax supplied to PI.
Please supply a valid file name.
Error 
1060 Failed to connect to LIFESPAN.
Action
This error could arise in two ways: either LIFESPAN is not running, or the (correct) user access file to set up the required logical names has not been invoked.
Please check that you have invoked the user access file and, if necessary, request the LIFESPAN Manager to start up LIFESPAN and make facilities available.
Error 
1061 Content module name does not exist:
Action
Content module name supplied to GENERATE_ROOT_PACKAGE does not exist.
Please supply a valid module name.
Error 
1062 LIFESPAN error entering a package module
Action
PI has failed to generate a root package module.
Please read mail messages for more information on the error.
Error 
1064 Space Filled filename invalid.
Action
Space filled filename supplied to PI.
This is invalid syntax.
Please supply a valid filename.
Error 
1067 No latest issue for Content module name:
Action
Content module name supplied to GENERATE_ROOT_PACKAGE has no version within LIFESPAN.
Please supply a valid module name with at least one version within LIFESPAN.
Error 
1073 Space filled directory invalid.
Action
Space filled directory name supplied to PI.
This is invalid syntax.
Please supply a valid directory name.
Error 
1076 User name contains invalid character(s):
Action
User name with invalid syntax supplied to PI.
Please supply a valid user name.
Error 
1077 Space filled user name invalid.
Action
Space filled user name supplied to PI.
This is invalid syntax.
Please supply a valid user name.
Error 
1080 User password contains invalid character(s):
Action
User password with invalid syntax supplied to PI.
Please supply a valid user password.
Error 
1081 Space filled user password invalid.
Action
Space filled user password supplied to PI.
This is invalid syntax.
Please supply a valid user password.
Error 
1086 User has no access to 
Action
The LIFESPAN username supplied to PI is not permitted access to the listed module.
Please obtain access to the module or supply the correct password, if possible.
Error 
1087 Package name not known.
Action
The root package supplied does not exist.
Please supply a valid package name.
Error 
1088 Package issue xx.xxx not known.
Action
The version of the root package supplied does not exist.
Please supply a valid package version (or space fill field if LATEST required).
Error 
1089 is not a package module.
Action
The root package supplied is not a package module.
Please supply a valid package name.
Error 
1103 Module: is not available.
1403 Reason: Module issue is not known.
Action
The version of a module to be read via PI does not exist.
Please check that the module selections in the package being read out are as required.
Error 
Attempting Password access to module: in package: 1105 Not all modules accessible.
Action
User must have access to all modules to be read prior to calling READ_COMPLETE_ROOT_PACKAGE.
PI will attempt to access the module using the password supplied to access the root package.
Please obtain access to required modules or supply the correct password, if possible.
Error 
1113 Invalid existence string:
Action
Invalid existence string supplied to PI.
Please supply a valid existence string.
Error 
1114 Invalid package selection:
Action
Invalid package selection has been supplied to PI.
Please supply a valid package selection.
Error 
1115 User has no access to 
Action
User must have access to root package prior to calling READ_COMPLETE_ROOT_PACKAGE.
Please obtain access to the specified root package or supply the appropriate password.
Error 
1184 Generated Package name exists
Action
A package name which already exists has been supplied to GENERATE_ROOT_PACKAGE.
Please supply a new, unique name for the package and any sub-packages to be created.
Error 
1185 xx as number of contents is invalid.
Action
The number of modules to be contained in the root package structure supplied to GENERATE_ROOT_PACKAGE is invalid.
Please supply a valid number of modules.
Error 
1250 Data error for module: Account Validity: Invalid charge code.
Action
Invalid charge code supplied to PI.
Please supply a valid charge code.
Error 
1250 Data error for module: Module Existence: Module name already exists.
Action
Attempting to reserve a package module name which already exists.
Please supply a new, unique root package name.
Error 
Time out waiting for Mail Id: check manually.
Action
LIFESPAN is running slowly and mail expected by PI has not yet been received.
Check that the Mail Id in the file specified after this message for successful completion.
Error 
1304 Invalid package selection:
Action
Invalid package selection has been supplied to ENTER_COMPLETE_ROOT_PACKAGE.
Please supply a valid package selection (space fill field if LATEST required).
Error 
1314, 1401 Invalid package selection:
Action
Invalid package selection has been supplied to PI.
Please supply a valid package selection (space fill field if LATEST required or set field to H to track by highest).
Error 
1402 Maximum package depth exceeded — repeat listing at a lower level package.
Action
The maximum depth of packages that LIST_COMPLETE_ROOT_PACKAGE can handle has been reached.
Please repeat listing at a lower level to obtain the packages you require.
Error 
1403 Module — is not available.
Reason: Module name is not known
Action
This module is not known to LIFESPAN.
Please check that all modules are known to LIFESPAN.
Error 
1600, 1604 LIFESPAN Error adding entry to LIFESPAN 1608, 1612 Authorisation file.
Action
PI has failed to add a request for moving modules across the network to your LIFESPAN Authorisation file in your default directory.
Please check your protections on the Authorisation file and your default directory.
Error 
1601, 1605 LIFESPAN Error closing LIFESPAN Authorisation file 1609, 1613
Action
PI has failed to successfully close your LIFESPAN Authorisation file in your default directory.
Please check the protection on the Authorisation file and your default directory.
Error 
1602, 1606 LIFESPAN Error opening LIFESPAN Authorisation file.
1610, 1614
Action
PI has failed to open or create a LIFESPAN Authorisation file in your default directory.
Please check the protection on your default directory and that you have sufficient disk quota.
Error 
1603, 1607 LIFESPAN Error initialising LIFESPAN Authorisation file.
1611, 1615
Action
PI has failed to correctly initialise your Authorisation file in your default directory.
Please check your protection on the Authorisation file and your default directory and ensure that you have sufficient disk quota.
Error 
2005 Not all modules accessible.
Action
The LIFESPAN username supplied to PI does not have access to all modules.
Please obtain access to all modules or supply the correct password, if possible.
Error 
2006 Not all modules modifiable.
Action
The LIFESPAN username supplied to PI does not have sufficient privilege to modify some or all of the modules.
Please ensure that you have the privilege to modify the modules.
Error 
3029…3036 Invalid DC:
Action
Invalid DC identifier supplied to PI.
Please supply a valid DC identifier.
Error 
3037 Invalid DC(s) in list.
Action
Invalid DC identifiers have been supplied to PI.
Each of these are listed on a separate line after the error message.
Please supply valid DC identifier(s).
Error 
3038…3040 Logged on user is not an assessor of DC:
Action
The user currently logged on to LIFESPAN via PI is not an assessor of the DC, therefore access is denied.
Repeat the operation with another user who has access to the DC.
Error 
3041,3042 User is not an assessor of DC:—
Action
The username supplied is not an assessor of the DC, therefore access is denied.
Repeat the operation with another user with access to the DC.
Error 
3043…3046 Illegal update of DC:
Action
An attempt has been made to change the state of a DC which is an illegal transition (e.g. trying to update a dc after it has been submitted).
Please refer to the User's Guide to LIFESPAN (Chapter 5) for a full description of valid transitions.
Error 
3047 Illegal update of DC(s) 
Action
An attempt has been made to change the state of one or more DCs which is an illegal transition (e.g. trying to activate a dc which is already active).
Each of these are listed on a separate line after the error message.
Please refer to the User's Guide to LIFESPAN (Chapter 5) for a full description of valid transitions.
Error 
3050 Logged on user is not the associated user of all DCs 
Action
The user currently logged on to LIFESPAN via PI is not the associated user of the DCs listed, therefore they cannot be activated via the package.
Repeat the operation as each of the DCs associated user.
Error 
3048,3049,3051,3052, Logged on user is not associated user of DC: 3053,3129,3130,3135, 3138
Action
The user currently logged on to LIFESPAN via PI is not the associated user of the DC, therefore access is denied.
(e.g. trying to update a DC).
Repeat the operation as the DC's associated user.
Error 
3054 One or more modules are not accessible on DC:
Action
The user logged onto LIFESPAN has tried to submit a DC which references one or more modules for which access is not possible (since they are password protected).
You can gain access to the module in question by supplying the password for each module, using LIFESPAN option 1.7.0 or by the module manager(s) creating a special link.
Once access to all modules is gained, you should attempt to submit the DC again.
Error 
3055 One or more modules are not accessible on DC(s) 
Action
The user logged onto LIFESPAN has tried to activate a DC/DCs which reference one or more modules for which access is not possible (since they are password protected).
You can gain access to the module in question by supplying the password for each module, using LIFESPAN option 1.7.0 or by the module manager(s) creating a special link.
Once access to all modules is gained, you should attempt to activate the DC(s) again.
Error 
3056 DC privilege is required to submit DC:
Action
The user logged onto LIFESPAN has tried to submit the DC listed.
To submit any DC, DC operations privilege is required and so you should either ask your LIFESPAN Manager for this privilege or pass the DC to a suitable user with this privilege, using LIFESPAN option 2.5.0.
Error 
3057 Invalid package specified for activating DC(s):
Action
An invalid package name has been supplied for activating a DC/DCs.
Please check the spelling a try again.
Note that the package name must be already known to LIFESPAN and you must be its manager.
Error 
3058 Package is in approval, no further work allowed:
Action
The user has tried to activate a DC/DCs via a package which has been submitted for QA approval.
Either wait until the nominated approver has rendered his decision, activate the DC/DCs via a different package or ask the nominated approver to deny approval so that further work will be allowed.
Note that when a package has been submitted for QA approval, all changes are frozen for the given package.
Error 
3059 Logged on user is not the manager of package:
Action
The logged on user has tried to activate a DC/DCs via a package which he does not manage.
Only the package manager may activate DCs on it.
Either become the package manager (given to you by the existing manager using option 1.8.0) or activate the DC/DCs via a package which you own.
Error 
3060 One or more modules are already on an active DC elsewhere
Action
An attempt has been made to activate a DC/DCs where one or more of the modules referenced are already on an active DC via a different package.
You must wait until the current work has completed or perform this work in the package/packages where the active DC already exists.
Note that if these DCs reference more than one module, you may have to create new DCs to perform the work in different packages.
Error 
3061 Package already has maximum number of active DCs allowed:
Action
An attempt has been made to activate a DC/DCs via a package which already has the maximum allowable being worked on (10).
Either wait until the work in progress is completed or try consolidating the DCs into a fewer number of DCs.
Error 
3063 Invalid SPR(s) in list.
Action
Invalid SPR identifiers have been supplied to PI (update DC).
Each of these are listed on a separate line after the error message.
Please supply valid SPR identifier(s).
Error 
3064 Invalid Module(s) in list.
Action
Invalid module names have been supplied to PI (update DC).
Each of these are listed on a separate line after the error message.
Please supply valid module names which are known to LIFESPAN.
Error 
3065 Data error for list of module(s) Account Validity: Invalid charge code
Action
An invalid charge code has been supplied to PI.
Please supply a valid charge code.
Error 
3065 Data error for list of module(s) Owner existence:
Action
An invalid module owner has been supplied to PI.
Please supply a valid charge code.
Error 
3065 Data error for list of module(s) Module name already exists:
Action
The user has attempted to reserve a module name which is already known to LIFESPAN.
Please repeat specifying only new names (unknown to LIFESPAN).
Error 
3066…3069 Module is not a package:
Action
The module name specified is known to LIFESPAN (as a SOURCE or FOREIGN) but LIFESPAN expects a PACKAGE (or product).
e.g. Submitting a package for QA approval.
Repeat the operation specifying a known package module.
Error 
3070…3072 Module is unknown to LIFESPAN:
Action
The module name specified is unknown to LIFESPAN.
Repeat the operation specifying a known package module.
Error 
3075 DC module(s) are not referenced in package:
Action
The approval package does not contain module(s) which are listed on the DC(s) active via the package.
The package manager should either update the package to reference all modules on the DC(s) or abort the DC(s) referencing module(s) not in the package (and possibly create new DC(s)).
Error 
3076, 3077 User has insufficient privilege to perform QA operation
Action
The specified user has insufficient privilege to perform LIFESPAN QA.
Please ensure that you are currently the associated user of the package ie. either the package manager or the nominated approver (if it has been submitted for approval).
Error 
3078, 3079 Package has no active DC(s):
Action
The specified package has no active DCs and so QA operations cannot be performed.
e.g. submitting the package for approval.
Ensure that there is an active DC/DCs which covers all modules which have been changed in the package (perhaps such DCs have been aborted!).
Error 
3085 Package is currently in QA:
Action
The user has attempted to submit a package which has previously been submitted and is currently in QA for approval.
Once a package has been submitted for approval, no further work can be performed on the package until the nominated approver renders his decision.
Error 
3086 User does not have QA privilege
Action
The user nominated to perform QA on the package does not have LIFESPAN Quality Assurer privilege.
Repeat the operation specifying a user with this LIFESPAN privilege.
Error 
3088 Package is already being approved:
Action
The user has attempted to prepare a package for approval when the package is currently in the process of being approved.
After approval, only the package manager can obtain quality assurance listings.
Error 
3089, 3090 QA is currently too busy to accept further work, please try later
Action
The current number of requests pending in LIFESPAN is all that it can currently handle.
You should try the request again at a later time.
Error 
3091, 3092 User has insufficient QA privilege
Action
The specified user has insufficient privilege to perform LIFESPAN QA.
Please ensure that you are currently the associated user of the package ie. either the package manager or the nominated approver (if it has been submitted for approval) also that you have LIFESPAN Quality Assurer privilege.
Error 
3093, 3094 One or more modules are currently offline in package:
Action
One or more modules in the package to be approved are offline.
LIFESPAN QA has automatically requested the offlined modules to come back online.
Further processing of the package cannot be carried out until all modules are online.
Error 
3097 Package is not ready for approval:
Action
The user has attempted to grant approval to a package before the approval listings have been prepared.
Please ensure that you obtain the approval listings prior to trying again.
Error 
3098 No QA request for package:
Action
You have tried to approve a package which you have not been requested to approve.
Please try again with a valid package.
Error 
3103 Error reserving package name.
See mail message: in the printed mail.
Action
PI has failed to create the skeleton package module (at issue 00.00Z).
Please read the specified mail message for more information on the error.
Error 
3110 Error preparing package for approval.
See mail message: in the printed mail.
Action
PI has failed to prepare the package for QA approval.
Please read the specified mail message for more information on the error.
Error 
3113 Error approving package.
See mail message: in the printed mail.
Action
PI has failed to approve a package (and its modules).
Please read the specified mail message for more information on the error.
Error 
3116 Invalid future date:
Action
The specified date (for completion of approval of the package) is not valid.
The format must be dd-mmm-yyyy and the date must be today's date or later.
ie. you cannot ask for a package to be approved yesterday!!!
Error 
3117 LIFESPAN users cannot submit packages to themselves for QA approval
Action
The user has attempted to submit his package to himself for approval.
This is not permitted in LIFESPAN.
Users must submit their packages for independent QA.
Please retry specifying a different LIFESPAN username.
Error 
3119 Invalid package selection:
Action
Invalid package selection has been supplied to PI.
Please supply a valid package selection (space fill field if LATEST required).
Error 
3120 Module is not available: Reason: Module issue is not known.
Action
The version of a module to be read from LIFESPAN via PI does not exist.
Please check that the module selections in the package, for the modules being read out are as required.
Error 
3120 Module is not available: Reason: Module name is not known.
Action
This module is not known to LIFESPAN.
Please check that all modules are known to LIFESPAN.
Error 
3122 Error reading contents of a package.
See mail message: in the printed mail.
Action
PI has failed to read out the selected modules in the package.
Please read the specified mail message for more information on the error.
Error 
3124 Module is not contained in package:
Action
A module name has been supplied to PI routine Read_From_Package which is not contained in the package.
Only those modules contained in the package can be read out.
Repeat supplying valid module names.
Error 
3125 Mandatory field not supplied:
Action
The mandatory field listed has not been filled with information.
You should repeat supplying valid information for all mandatory fields.
Error 
3127, 3133 Duplicate module names are not permitted.
Action
The user has supplied duplicate module names in the list supplied.
e.g. Update DC — modules referenced.
Duplicate module names are not permitted and so you should repeat supplying a module name once only.
Error 
3128 There must be at least one module in the list.
Action
You have tried to specify zero modules in the list of modules names to be reserved.
This is not permitted since there is no purpose in trying to reserve zero modules.
There must be between 1 and 29 modules in the list.
Error 
3131 Duplicate DCs are not permitted in 
Action
The user has supplied duplicate DC identifiers in the named list.
e.g. Update DC — superseded DCs.
Duplicate DC identifiers are not permitted and so you should repeat supplying a DC identifier once only.
Error 
3132 DC has already been submitted and cannot now be updated:
Action
The user has attempted to update a DC that has previously been submitted.
LIFESPAN prevents a DC being updated after it has been submitted for assessment.
You cannot, therefore, update this DC.
Error 
3134 Duplicate SPRs are not permitted.
Action
The user has supplied duplicate SPR identifiers in the list of related SPRs when trying to update a DC.
Duplicate SPR identifiers are not permitted and so you should repeat supplying an SPR identifier once only.
Error 
3136 DC is not in state CREated, so cannot be submitted:
Action
The user has attempted to submit a DC which is not in state CREated.
This is the only valid state a DC can be in if it is to submitted for assessment by interested LIFESPAN users.
Error 
3137 DC references no modules, so cannot be submitted:
Action
The user has attempted to submit a DC which references no modules.
This is prevented by LIFESPAN since a DC must reference at least one module to be meaningful (since it makes no sense to have a DC otherwise as a DC's sole purpose is to allow modules to be updated).
Error 
3139 xx DCs exceeds the maximum active DCs on package:
Action
The user has tried to activate a number of DCs on a package.
The combined total of this and the existing active DCs (xx) exceeds the maximum of 10 active DCs on a package.
You should try and amalgamate these DCs so that the total does not exceed 10.
This may require aborting some and creating new one(s) based on the old.
Error 
3140 Number of items in is out of range:
Action
The user has specified a value for the number of items in the named list which exceeds the valid range.
Please try again with a valid value.
Error 
3142,3150 Logged on user does not have access to module:
Action
The user has attempted to access a module for which he has no access to.
Please obtain access to the module (from the module manager) or supply the correct password if possible.
Note that only the module's manager can update its details.
Error 
3143 Module name is unknown to LIFESPAN:
Action
The user has tried to access the details of a module which is not known to LIFESPAN.
Please retry with a valid module name.
Error 
3145 Unknown preferred issue specified for module:
Action
The user has specified a preferred issue of a module but this issue does not exist in LIFESPAN.
Please retry and specify a known issue of the module.
Error 
3146 Module Owner is not a LIFESPAN user:
Action
The module owner specified when trying to update the module details is not known to LIFESPAN.
Please retry and specify a valid LIFESPAN user who is related (either an ascendant or descendant) to the current module owner.
Error 
3147 Module Owner is not related to current user:
Action
The module owner specified when trying to update the module details is not related to the current module owner.
Please retry and specify a valid LIFESPAN user who is related (either an ascendant or descendant) to the current module owner.
Error 
3148 Module Manager is not a LIFESPAN user:
Action
The module manager specified when trying to update the module details is not known to LIFESPAN.
Please retry and specify a valid LIFESPAN user who is related (either an ascendant or descendant) to the current module manager.
Error 
3149 Module Manager is not related to current user:
Action
The module manager specified when trying to update the module details is not related to the current module manager.
Please retry and specify a valid LIFESPAN user who is related (either an ascendant or descendant) to the current module manager.
Error 
3151 Cannot update manager while a DC is active for package:
Action
The user has attempted to update the manager of a package while work is currently underway (active DC(s)).
You can only update the manager of a package when there is no work currently being inplemented.
Either wait until all work is complete or abandon the current changes.
Error 
3152 Invalid preferred issue specified:
Action
The user has specified a preferred issue which is not in the valid format.
Please retry specifying a preferred issue in the format 99.99A, where 9 represents a numeric and A represents an alphabetic.
Error 
3153 Part Number already in use:
Action
The user has specified a Part Number which is already in use.
This is not possible as Part Numbers must be unique.
Please retry specifying an alternative Part Number which is not already in use.
Error 
3154 Invalid module selection:
Action
The user has specified an invalid selection of a module.
You should specify L, P, blank, or a specific version number of the form NN.NNA eg. 01.00A
Error 
3155 Auto DC assess not changed for: Not package or product
Action
The user has specified an invalid selection of a module.
LIFESPAN Errors
LIFESPAN errors are unlikely to occur in normal use of PI.
However, if they do occur, then:
Check that LIFESPAN is running and that facilities are made available.
If using PI from a remote node, check that both DECNET and the FTSP (File Transfer Server Process) are running.
Check that the user access file used to set up the necessary logical name has been invoked.
For more information on this subject, please refer to the ‘Installation and Management of LIFESPAN’ manual.
Check the incident log file for errors which may have occurred earlier and resolve these.
This may in turn cure any subsequent errors.
Verify with the LIFESPAN Manager that online LIFESPAN users are not experiencing any problems with LIFESPAN and that there are no System Errors in the LIFESPAN error log.
If these checks fail to resolve the problem and if LIFESPAN appears to be running satisfactorily, please contact YSS for assistance.
EXAMPLE LOG FILES
This appendix contains example incident log files which PI outputs.
In each case an explanation of the messages is given.
Example 1 shows the incident log file which is produced when the procedure GENERATE_ROOT_PACKAGE is called by user USER 1 with invalid data.
The procedure does not generate and enter the desired structure.
Example 2 shows the incident log file for the procedure GENERATE_ROOT_PACKAGE when the errors reported in the previous example (example 1) were corrected.
The next two examples (3 and 4) show the incident log files produced by ENTER_COMPLETE_ROOT_PACKAGE when entering the following root structure:
Examples 5, 6, 7 and 8 are the incident log files produced by LIST_COMPLETE_ROOT_PACKAGE on the package structure shown above.
Example 5 shows the listing obtained for ROOTPACK1 with the default selection of latest, and example 6 shows the listing obtained when ROOTPACK1 is being checked for module APCK3SRC1.
Example 7 shows the listing obtained for ROOTPACK1 when the next version selects APCK and DPCK, prior to approval and example 8 shows the same listing when the selection is specified as Highest.
Note that the package module APCK3 and all its modules were OFFLINE when the procedure was called.
Example 9 shows the incident log file produced by READ_COMPLETE_ROOT_PACKAGE when reading out the structure shown above.
(a)
On invocation, the mail system for USER 1 was not empty.
The Procedural Interface formatted the mail to the files indicated before clearing the messages out.
(b)
The module, NOMODULE, supplied in the LIST_OF_CONTENTS, does not exist in LIFESPAN.
(c)
The module, NOISSUE, supplied in the LIST_OF_CONTENTS, is known in name only, that is, it has no version within LIFESPAN.
(d)
The syntax for the supplied root package name, T.;.;.;
, is invalid.
(e)
A space-filled existence string was supplied.
This is invalid for an existence string.
(f)
The procedure has been supplied with the module name TEST30ROOT.
This name and the names TEST30ROOT0 and TEST30ROOT1, which have to be created to accommodate all modules in the LIST_OF_CONTENTS, already exist in LIFESPAN.
GENERATE_ROOT_PACKAGE
(a)
The name of the root package has been changed from TEST30ROOT to TST30ROOT.
This name was unique within LIFESPAN and the package structure was successfully entered into LIFESPAN.
ENTER_COMPLETE_ROOT_PACKAGE
(a)
First pass, only package module is checked and entered.
(b)
Second pass, the contents of the new package are then obtained and the modules it contains are entered.
ENTER_COMPLETE_ROOT_PACKAGE
(a)
First pass, only package modules are checked and entered.
(b)
Package APCK1 had been entered on a previous run and had not changed.
(c)
Start of second pass, details of ‘new’ packages are obtained and eligible modules entered.
(d)
The contents of package APCK1 had been entered on a previous run and had not changed.
(e)
Module APCK3SRC2 failed to SCAN but APCK3SRC1 still entered.
(f)
EPCKFOR1 was a foreign module.
LIST_COMPLETE_ROOT_PACKAGE
(a)
Package APCK3 and all its modules were offline at the time of the listing.
(b)
APCK3SRC2 failed to scan previously and was not entered.
LIST_COMPLETE_ROOT_PACKAGE
LIST_COMPLETE_ROOT_PACKAGE
(a)
ROOTPACK1 has selected the next approved version of APCK,[01.01].
(b)
ROOTPACK1 has selected the next approved version of DPCK,[01.01].
Note that when listing by latest version, the actual version number in the package selection is used to list contained packages.
As version [01.01]of packages APCK and DPCK does not yet exist, no further decomposition occurs for these packages.
(Compare this with the next example, when tracking by Highest version).
LIST_COMPLETE_ROOT_PACKAGE
(a)
ROOTPACK1 has selected the next approved version of APCK,[01.01].
(b)
The latest version of APCK is shown here as [01.01A].
(c)
APCK3 and all its modules were OFFLINE.
(d)
APCK3SRC2 failed to SCAN previously and was not entered.
(e)
ROOTPACK1 has selected the next approved version of DPCK,[01.01].
(f)
The latest version of DPCK is shown here as [01.01A].
READ_COMPLETE_ROOT_PACKAGE
(a)
On invocation, the mail system for USER 1 was not empty.
The Interface Procedure formatted the mail to the files indicated before clearing the messages out.
(b)
The package module, APCK3, contained in APCK2 is currently OFFLINE.
(c)
The contents of APCK3 are currently OFFLINE.
ROUTINE SPECIFICATION — PASCAL
This appendix contains a complete specification of the PASCAL profiles of each of the procedures detailed above.
This specification is intended to show programmers the calling mechanisms used to aid the writing of PI programs in other languages such as ADA, CORAL, FORTRAN etc.
INTERFACE SPECIFICATION — PASCAL
This appendix contains a complete specification of the PASCAL interface to the procedures detailed above.
This specification is delivered in magnetic form along with the issue.
INTERFACE SPECIFICATION — FORTRAN
This appendix contains a complete specification of the FORTRAN interface to the procedures detailed above.
This specification is delivered in magnetic form along with the issue.
EXAMPLE TEST PROGRAMS — PASCAL
This appendix contains example PASCAL test programs showing how two of the interface procedures, GENERATE_ROOT_PACKAGE and READ_COMPLETE_ROOT_PACKAGE could be called.
They show how the name of the root package can be supplied to the programs from the DCL command line and how the remainder of the parameters can be set up as in-line code.
To invoke these programs, it is necessary to set up the DCL verbs as follows:
where PIVERB.DEF contains the following commands:
The programs can then be invoked as GENPACK, GETPACK followed by the name of the desired root package.
EXAMPLE TEST PROGRAMS — FORTRAN
This appendix contains example FORTRAN test programs showing how two of the interface procedures GENERATE_ROOT_PACKAGE and READ_COMPLETE_ROOT_PACKAGE could be called.
They show how the name of the root package can be supplied to the programs from the DCL command line and how the remainder of the parameters can be set up as in-line code.
To invoke these programs, it is necessary to set up the DCL verbs as described in Appendix F.  
PREFACE
Purpose
This User Guide explains how to use LIFESPAN PMR, the LIFESPAN PROJECT MANAGEMENT REPORTS Program, which allows a variety of reports on the content and state of Design Changes(DCs), Software Performance Reports (SPRs) and Software Status Reports (SSRs) within LIFESPAN to be produced.
audience
This User Guide provides all the knowledge required to operate LIFESPAN PMR effectively.
It is intended for all levels of user, however it is assumed that the reader is familiar with LIFESPAN and its operation.
If more information is required, reference should be made to the manuals in the References section.
Manual Structure
The first section of this manual gives an overview of the types of reports that can be generated using LIFESPAN PMR.
The subsequent sections explain how to run LIFESPAN PMR.
Each available option of LIFESPAN PMR is explained, with examples of the pages as they appear to the user.
Sample output from each option is also given.
The appendices provide references to useful documents and help on solving errors.
OVERVIEW OF LIFESPAN PMR
LIFESPAN PMR will allow existing LIFESPAN users to prepare:
Design Change Summary Reports.
Software Performance and Software Status Summary Reports.
LIFESPAN PMR can be executed interactively or via a steering file, but can only be run while LIFESPAN is available for interactive use.
Design Change Summary Reports
LIFESPAN PMR will allow existing LIFESPAN users to prepare Design Change Summary Reports of the following types:
DCs by Identifier
DCs for State
DCs for Date and State
DCs by Module Name and State
DCs for User
In each case, the report will be directed to a user-specified output file, suitable for printing on A4 paper.
For each DC, the Report will list:
DC Identifier
DC Title
Classification and Job Reference
Associated User
Current State
Date at which current state entered
Package through which the DC has been activated (if appropriate)
Modules Referenced
The user will be able to obtain an Abbreviated Report which will consist of the above information but excluding the module information.
A brief description of each report type is now given.
List DCs by Identifier
This report will provide a listing of all Design Changes within a specified range of DC identifiers.
The DCs will be listed in descending order of DC identifier.
List DCs for State
This report will provide a listing of all Design Changes in a specified state.
The user can also specify a range of DC identifiers to be considered for inclusion in the report.
The DCs will be listed in descending order of DC identifier.
List DCs for Date and State
This report will provide a listing of all Design Changes which have changed state since a specified date.
The state field will be optional and if not specified, all DCs which have changed state since the specified date will be provided.
The user can also specify a range of DC identifiers to be considered for inclusion in the report.
The DCs will be listed in descending order of DC identifier.
List DCs by Module Name and State
This report will provide a listing of all Design Changes which reference a particular module name or range of module names.
The user can specify a range of DC identifiers to be considered for inclusion in the report.
The user can also specify a DC state, so that only DCs in the specified state will be listed; if no state is specified, all relevant DCs will be listed.
In all cases, the DCs will be grouped alphanumerically by module name and, for each module name, in descending order of DC identifier.
List DCs for User
This report will provide a listing of all Design Changes which are associated with a particular LIFESPAN user.
The user can also specify a range of DC identifiers to be considered for inclusion in the report.
The DCs will be listed in descending order of DC identifier.
Software Performance and Software Status Summary Reports
LIFESPAN PMR will also allow an existing LIFESPAN user to prepare SPR/SSR Summary Reports of the following types:
SPRs for Root Package
SSRs for Root Package.
In each case, the report will be directed to a user-specified output file.
The Report will be divided into two sections: the first section will provide a structured listing of the Root package; the second section will give summary information for each SPR/SSR referenced in the structure.
For each module that appears in the structured listing in the first section, there will be an entry in the report which will give:
the relationship mnemonic; this will be one of the following:
slctd — the module is contained as SELECTED-ISSUE
prfrd — the module is contained as PREFERRED-ISSUE
latst — the module is contained as LATEST-ISSUE
the module name
the issue number as specified by the relationship.
If the issue number is not known to LIFESPAN, a ‘?’ character will be output alongside
the SPRs/SSRs that reference the module along with their status.
For SPRs the status will be:
Cr — Created
o — Outstanding
R — Replied To
C — Closed.
For SSRs the status will be:
Cr — Created
S — Submitted.
If any module identifies as its relation an earlier version than the latest entered, then the relationship mnemonic will be preceded by an asterisk character.
If the user is tracking packages by highest, the relationship mnemonic will be preceded by ‘final’.
For each SPR that appears in the structured listing, the second part of the report will list:
SPR Identifier
SPR Status
SPR Title
Originator
Creator/Creation Date
Submission Date
Holder/Accepted Flag
Referenced Modules within structure.
Alternatively, for each SSR that appears in the structured listing, the second part of the report will list:
SSR Identifier
SSR Status
SSR Title
Originator
Submitter
Date Last Updated
Referenced Modules within Structure
Related SPRs (if any).
The user will be able to obtain an Abbreviated Report which will consist of only the structured listing.
Further, the user will be able to select the status of SPRs/SSRs that are to appear in the report and will also be able to limit the report to only those modules which appear in the Root Package itself.
Finally, the user will be able to select whether all SSRs that reference a module in the structure appears in the report, regardless of version number, or only those SSRs which apply to the version number selected in the structure.
COMMON FEATURES OF THE USER INTERFACE
LIFESPAN PMR can be run interactively or via a steering file while LIFESPAN is available for interactive use.
This section describes how to use either method.
Interactive Use
All LIFESPAN PMR operations are based on a series of pages similar to LIFESPAN pages.
Each page has fields which require input.
After entering the required information, a terminator must be pressed as described below.
If the information entered into any field is invalid, an error message will be displayed at the foot of the page.
TAB and BACKSPACE
To move between fields on a page, the user should press TAB to go forwards and BACKSPACE to go backwards.
More specifically, the user should press TAB to move to the next field when input at the current field is complete.
However, LIFESPAN PMR will display a warning message and the cursor will remain where it is if:
BACKSPACE is pressed when the cursor is positioned on the first input field of the page;
TAB is pressed when the cursor is positioned on the last input field of the page.
RETURN
The RETURN key should be used to tell the system that all necessary information has been entered and that the report should be produced using the supplied data.
If all fields have been completed correctly, LIFESPAN PMR will display the message:
‘Generating --- Report…’
and will proceed to prepare the report.
During the creation of the report, the identifier of the DC, SPR and SSR currently being processed will be displayed periodically at the top of the screen, to inform the user of progress.
If any information has been entered incorrectly, the message:
‘Fields still have errors’
will be displayed and the cursor will move to the first field in error.
Similarly, if a field that requires input (mandatory field) has not been completed, the message:
‘Mandatory fields not filled’
will be displayed and the cursor will move to the field to be completed.
ABORT
The PF1/6 keys can be used to ABORT from the current page.
This will cause the message:
‘Do you wish to try again (Y/N)?’
to be displayed and the user can either press RETURN, leaving the default of N (No), or overtype the default with Y (Yes) and press RETURN.
In the former case, LIFESPAN PMR will return the user to the previous index page.
Pressing ABORT from the log on page will take the user back to VMS.
HELP
The PF2 key can be used to obtain help if the user is in any doubt about what to do next, what to enter or does not understand what is being displayed on a page.
The PF2 key is called the HELP key.
The help facility is multi-level.
Information about a specific field is displayed at the bottom of the page if the cursor is positioned on a field and HELP is pressed.
If this does not give enough information, more is usually available by pressing the HELP key again.
In some cases, whole pages of help information temporarily replace the original; pressing RETURN will take the user back to the page.
Successive Runs
On completion, each option will display a success or failure message on the page, followed by the prompt:
‘Do you wish to try again (Y/N)?’
To generate the same type of report again with the same or a different set of inputs, the user should enter Y (Yes) and press RETURN.
The cursor will then be moved to the first field on the page requiring input.
If the user does not want to generate another report of this type, he should leave the default of N (No) and press RETURN.
The user will then be returned to the previous index page.
Caching
When the user selects any option, having already accessed the system during the current session, LIFESPAN PMR's cache facility will automatically display the previous information input for each field.
If this is the value required, the user can move to the next field by pressing the TAB key.
If it is not the one required, the user can delete it by pressing the ‘LINEFEED’ key, then enter the desired value and press TAB.
However, if the user has not accessed a particular field type during the current session, the user must enter the required value and press TAB.
If the field is left blank, a default value will be provided and displayed.
Use via a Steering File
LIFESPAN PMR can also be run via a steering file.
This file should contain the responses the user would have given to the prompts for the relevant options had the system been used interactively.
The equivalent of each ‘response’ expected from each page must be entered; each entry must be on a separate line, without leading spaces and without blank lines between entries.
After completion of each option, the user is automatically taken back to the previous index page.
Using LIFESPAN PMR
This section explains how to run LIFESPAN PMR and how to use its various options.
Command Verbs
A command verb is used to allow users to invoke LIFESPAN PMR with a single command from the DCL command line.
To indicate that the utility is to be used via a steering file, the name of the steering file should be supplied with the command; to indicate that the utility is to be run interactively, no parameter should be specified.
The command verb, LIFESPAN_PMR, should have been set up previously by the System Manager.
The utility can be run now by typing:
Prior to running LIFESPAN PMR, the user should check that LIFESPAN is running with facilities made available, and should then invoke the LIFESPAN user access file to set up the necessary logical names (see ‘Installation and Management of LIFESPAN’).
Networking
LIFESPAN PMR can also be run from an authorised remote node with a networked version of LIFESPAN.
Please consult your LIFESPAN Manager to determine which remote nodes are authorised for your configuration of LIFESPAN.
Log On Page
Once LIFESPAN PMR has started up successfully, the first page to be displayed is the LIFESPAN PMR Log On Page, shown in Figure 3.1.
The LIFESPAN user name and password to be used for the report generation must now be entered.
The TAB and BACKSPACE keys can be used to move between the fields.
After both fields have been completed correctly, the RETURN key should be pressed.
If the information has been entered correctly and a link is established with LIFESPAN, the Master Level Index Page will be displayed.
Note that on all subsequent pages, the supplied user name will be displayed at the top of the page.
If an error occurs the user will be given another two opportunities to correct the situation; if the third attempt is also unsuccessful, the user will be returned immediately to VMS.
Master Level Index
The Master Level Index, shown in Figure 3.2, is the main entry point to the LIFESPAN PMR system.
All available options stem from this page.
The user should enter the number of the chosen option at the ‘Your Option’ prompt.
Each option is described below.
To indicate completion of LIFESPAN PMR, the user should enter ‘E’ at this prompt.
This will return the user to VMS.
Design Change Summary Report Index
The Design Change Summary Report Index, shown in Figure 3.3, is displayed to allow the user to select which type of DC Report is required.
The user should enter the number of the chosen option at the ‘Your Option’ prompt.
Each option is described below.
To indicate completion of DC Reports, the user can either enter ‘O’ to return to the Master Level Index, or ‘E’to exit LIFESPAN PMR and return to VMS.
Option 1.1 List DCs by Identifier
This option allows the user to generate a report of all Design Changes within LIFESPAN, ordered in descending order of DC identifier.
An example of the input page is shown in Figure 3.4.
Using TAB and BACKSPACE to move between fields, the user must enter certain details.
First, the user can supply start and end DC identifiers to indicate which DCs are to be included in the report.
LIFESPAN PMR will provide default values for these fields if the user leaves the fields blank.
These identifiers need not be valid and need only approximate to the range required, as LIFESPAN PMR will start and finish the report with valid identifiers which are nearest to those specified but which do not exceed the range given by them.
The user can also enter a valid name of a VMS file, up to 50 characters long, into which the report output will be placed.
If this field is left blank, LIFESPAN PMR will provide a default filename.
The user can also indicate whether an Abbreviated Listing or a Full Listing is required.
If this field is left blank, an Abbreviated Listing will be produced.
When input is complete, the user should press RETURN and a message will be displayed while the report is being generated.
On completion, a success or failure message will be displayed and the user will be able to repeat the operation or return to the DC Summary Report Index page.
Sample output from this option is illustrated in Figure 3.5.
Option 1.2 List DCs for State
This option allows the user to generate a report of all Design Changes within LIFESPAN in a specified DC state, ordered in descending order of DC identifier.
An example of the input page is shown in Figure 3.6.
Using TAB and BACKSPACE to move between fields, the user must enter certain details.
First, the user can supply start and end DC identifiers to indicate which DCs are to be included in the report.
LIFESPAN PMR will provide default values for these fields if the user leaves the fields blank.
These identifiers need not be valid and need only approximate to the range required, as LIFESPAN PMR will start and finish the report with valid identifiers which are nearest to those specified but which do not exceed the range given by them.
The user can also enter the numerical value of the DC state to be considered.
LIFESPAN PMR will provide reports on DCs in the following DC states:
1 — being created
2 — proposed
3 — agreed
4 — rejected
5 — cancelled
6 — active
7 — being approved
8 — approved
If this field is left blank, LIFESPAN PMR will provide a default value of 6 (Active).
The user can also enter a valid name of a VMS file, up to 50 characters long, into which the report output will be placed.
If this field is left blank, LIFESPAN PMR will provide a default filename.
The user can also indicate whether an Abbreviated Listing or a Full Listing is required.
If this field is left blank, an Abbreviated Listing will be produced.
When input is complete, the user should press RETURN and a message will be displayed while the report is being generated.
On completion, a success or failure message will be displayed and the user will be able to repeat the operation or return to the DC Summary Report Index page.
Sample output from this option is illustrated in Figure 3.7.
Option 1.3 List DCs for Date and State
This option allows the user to generate a report of all Design Changes within LIFESPAN which have been in a given state since a specified date.
The state field is optional and if not specified, all DCs which have changed state since the specified date will be listed.
The output will be ordered in descending order of DC identifier.
An example of the input page is shown in Figure 3.8.
Using TAB and BACKSPACE to move between fields, the user must enter certain details.
First, the user can supply start and end DC identifiers to indicate which DCs are to be included in the report.
LIFESPAN PMR will provide default values for these fields if the user leaves the fields blank.
These identifiers need not be valid and need only approximate to the range required, as LIFESPAN PMR will start and finish the report with valid identifiers which are nearest to those specified but which do not exceed the range given by them.
The user can specify a valid date in the format <dd-MMM-yyyy>.
If no date is specified, today's date will be used.
The user can enter the numerical value of the DC state to be considered.
The possible DC states are defined in Option 2 above.
If this field is left blank, all DC states will be considered for inclusion in the report.
The user can also enter a valid name of a VMS file, up to 50 characters long, into which the report output will be placed.
If this field is left blank, LIFESPAN PMR will provide a default filename.
The user can also indicate whether an Abbreviated Listing or a Full Listing is required.
If this field is left blank, an Abbreviated Listing will be produced.
When input is complete, the user should press RETURN and a message will be displayed while the report is being generated.
On completion, a success or failure message will be displayed and the user will be able to repeat the operation or return to the DC Summary Report Index page.
Sample output from this option is illustrated in Figure 3.9.
Option 1.4 List DCs by Module Name and State
This option allows the user to generate a report of all Design Changes within LIFESPAN which reference a particular module name or range of module names.
The user can also specify a DC state, so that only DCs in the specified state will be listed; if no state is specified, all DC states will be considered for inclusion in the listing.
The report will be grouped alphanumerically by module name, and for each module name, in descending order of DC identifier.
An example of the input page is shown in Figure 3.10.
Using TAB and BACKSPACE to move between fields, the user must enter certain details.
First, the user can supply start and end DC identifiers to indicate which DCs are to be included in the report.
LIFESPAN PMR will provide default values for these fields if the user leaves the fields blank.
These identifiers need not be valid and need only approximate to the range required, as LIFESPAN PMR will start and finish the report with valid identifiers which are nearest to those specified but which do not exceed the range given by them.
The user can supply start and end module names to indicate which referenced modules are to be included in the report.
These names need not be complete module names and need only approximate to the range required, as LIFESPAN PMR will start and finish the report with valid names which are nearest to those specified but which do not exceed the range given by them.
If no start name is specified, the listing will start with the first alphanumerical module in LIFESPAN; if no end module name is specified, the listing will end at the last alphanumerical module in LIFESPAN.
The user can also enter the numerical value of the DC state to be considered.
The possible DC states are defined above.
If this field is left blank, DCs of all states will be considered for inclusion in the report.
The user can also enter a valid name of a VMS file, up to 50 characters long, into which the report output will be placed.
If this field is left blank, LIFESPAN PMR will provide a default filename.
The user can also indicate whether an Abbreviated Listing or a Full Listing is required.
If this field is left blank, an Abbreviated Listing will be produced.
When input is complete, the user should press RETURN and a message will be displayed while the report is being generated.
On completion, a success or failure message will be displayed and the user will be able to repeat the operation or return to the DC Summary Report Index page.
Sample output from this option is illustrated in Figure 3.11.
Option 1.5 List DCs for User
This option allows the user to generate a report of all Design Changes within LIFESPAN associated with a particular LIFESPAN user, ordered in descending order of DC identifier.
An example of the input page is shown in Figure 3.12.
Using TAB and BS to move between fields, the user must enter certain details.
First, the user can supply start and end DC identifiers to indicate which DCs are to be included in the report.
LIFESPAN PMR will provide default values for these fields if the user leaves the fields blank.
These identifiers need not be valid and need only approximate to the range required, as LIFESPAN PMR will start and finish the report with valid identifiers which are nearest to those specified but which do not exceed the range given by them.
The user can also enter the name of the existing LIFESPAN user who is responsible for the DCs to be included in the report.
If this field is left blank, the name of the current LIFESPAN user will be used.
The user can also enter a valid name of a VMS file, up to 50 characters long, into which the report output will be placed.
If this field is left blank, LIFESPAN PMR will provide a default filename.
The user can also indicate whether an Abbreviated Listing or a Full Listing is required.
If this field is left blank, an Abbreviated Listing will be produced.
When input is complete, the user should press RETURN and a message will be displayed while the report is being generated.
On completion, a success or failure message will be displayed and the user will be able to repeat the operation or return to the DC Summary Report Index page.
Sample output from this option is illustrated in Figure 3.13.
SPR/SSR Summary Report Index
The SPR/SSR Summary Report Index, shown in figure 3.14, is displayed to allow the user to select which type of SPR/SSR Report is required.
The user should enter the number of the chosen option at the ‘Your Option’ prompt.
Each option is described below.
To indicate completion of SPR/SSR Reports, the user can either enter ‘O’ to return to the Master Level Index, or ‘E’to exit LIFESPAN PMR and return to VMS.
Option 2.1 List SPRs for Root Package
This option allows the user to generate a report of all SPRs within LIFESPAN which reference modules within a specified Root Package structure.
An example of the input page is shown in Figure 3.15.
Using TAB and BACKSPACE to move between fields, the user must enter certain details.
First, the user must either supply the name of an existing Product Title, up to 50 characters long, or the name of an existing package and selection.
The selection must be one of the following:
P — Preferred
L — Latest (default)
H — Highest, to track the latest versions of sub-packages regardless of the actual version number specified in the module relationships.
A — Actual.
In this case, an additional prompt will appear for the user to enter the required version number.
When the user enters the name of a valid Product Title and presses TAB, the corresponding package name, selection and version number will be displayed and the cursor will move to the SPR Status field.
If the user now wishes to enter a different Root Package name, he must first BACKSPACE to the Product Title field, press LINEFEED to clear the field, then press TAB to move to the Root Package field.
An error message will be displayed if the user enters the title of a Product which has no associated package.
A warning message will be displayed if the user enters the title of a product which either has no corresponding version number or the corresponding version number does not exist, and the latest version of the corresponding package known to LIFESPAN will be used.
Similarly, an error message will be generated if the users selects the Preferred version of a package, when no preferred version has been set.
The user can select the status of SPRs to be included in the report by entering one of the following values for the SPR Status field:
U — Unsubmitted
S — Submitted (equivalent to O+R+C)
O — Outstanding
R — Replied To
C — Closed
A — All (default).
The user can enter a valid name of a VMS file, up to 50 characters long, into which the report output will be placed.
If this field is left blank, LIFESPAN PMR will provide a default filename.
The user can indicate whether an Abbreviated Listing (A) or a Full Listing (F) is required.
If this field is left blank, an Abbreviated Listing will be produced.
The user can also select whether SPRs for All (A) the modules in the Root Package structure are to be included in the report, or only those for modules in the Root (R) Package itself.
If this field is left blank, all modules in the structure will be processed.
When input is complete, the user should press RETURN and a message will be displayed while the report is being generated.
On completion, a success or failure message will be displayed and the user will be able to repeat the operation or return to the SPR/SSR Summary Report Index page.
Sample output from this option is illustrated in Figure 3.16.
Option 2.2 List SSRs for Root Package
This option allows the user to generate a report of all SSRs within LIFESPAN which reference modules within a specified Root Package structure.
An example of the input page is shown in Figure 3.17.
Using TAB and BACKSPACE to move between fields, the user must enter certain details.
First, the user must either supply the name of an existing Product Title, up to 50 characters long, or the name of an existing package and selection, as described for Option 2.1 above.
The user can select the status of SSRs to be included in the report by entering one of the following values for the SSR Status field:
U — Unsubmitted
S — Submitted
A — All (default)
The user can enter a valid name of a VMS file, up to 50 characters long, into which the report output will be placed.
If this field is left blank, LIFESPAN PMR will provide a default filename.
The user can indicate whether an Abbreviated Listing or a Full Listing is required.
If this field is left blank, an Abbreviated Listing will be produced.
The user can also select whether SSRs for All (A) the modules in the Root Package structure are to be included in the report, or only those for modules in the Root (R) Package itself.
If this field is left blank, all modules in the structure will be processed.
Finally, the user can specify whether he wants All(A) relevant SSRs included in the report, regardless of version number, or only those SSRs which relate to specific modules and version numbers which appear in the package structure ie. Current(C) SSRs.
When input is complete, the user should press RETURN and a message will be displayed while the report is being generated.
On completion, a success or failure message will be displayed and the user will be able to repeat the operation or return to the SPR/SSR Summary Report Index page.
Sample output from this option is illustrated in Figure 3.18.
Example of use via a Steering File
Figure 3.19 shows the format of a steering file which generates the same output as the interactive examples given in this section.
It is assumed that LIFESPAN is accessed via user USER1 with password USER1.
REFERENCES
You may find it useful to refer to the latest issues of the following manuals if you want more detailed information about using LIFESPAN.
These are
’ Introduction to LIFESPAN’, Issue 9, R645/56, Sema Software Technology.
’ Creating and Controlling Modules and Packages with LIFESPAN’, Issue 9, R645/57, Sema Software Technology.
’ Installation and Management of LIFESPAN’, Issue 10, R645/60, Sema Software Technology.
’ Operations Guide to LIFESPAN’, Issue 3, R645/61, Sema Software Technology.
’ User's Guide to LIFESPAN’, Issue 2, R645/58, Sema Software Technology.
’ Reference Guide to LIFESPAN’, Issue 2, R645/59, Sema Software Technology.
ERROR DETAILS
Any errors that result from incorrect input will be written to the screen.
However, should an unexpected error occur during use of the program, a message will be written to the incident log file, LIFESPAN_PMR.LOG, in the user's current directory.
The following errors may appear in this file and an action is provided which may rectify the situation.
Error 
1014 Communication line to LIFESPAN has timed out.
Action
PMR has encountered a communication failure.
This may be due to the system running slowly.
Please try again later.
Error 
1016 No Communication lines to LIFESPAN available.
Action
LIFESPAN is currently handling its maximum number of users.
Please try again later when there is a free user slot available.
Error 
1020 LIFESPAN facility unavailable.
Action
Although LIFESPAN is running, facilities are at present not available.
Please request the LIFESPAN Manager to make facilities available.
Error 
1028 Communication failure for Logon to LIFESPAN.
Action
An unexpected failure occurred when communicating with LIFESPAN.
Please check that the LIFESPAN Manager has not stopped LIFESPAN.
Error 
1029 Logon to LIFESPAN Failed.
Action
Invalid LIFESPAN user name or password supplied to PMR.
Please supply a valid name and password.
Error 
1060 Failed to connect to LIFESPAN
Action
This error could arise in two ways: either LIFESPAN is not running, or the user access file to set up the required logical names has not been invoked.
Please check that you have invoked the user access file and, if necessary, request the LIFESPAN Manager to start up LIFESPAN and make facilities available.
If these actions fail to resolve the problem, verify with the LIFESPAN Manager that online LIFESPAN users are not experiencing any problems with LIFESPAN and that there are no System Errors in the LIFESPAN error log.
If LIFESPAN appears to be running satisfactorily, please contact YSS for assistance.
PREFACE
Purpose
LIFESPAN RDBI, the LIFESPAN RELATIONAL DATABASE INTERFACE, allows the LIFESPAN Manager to extract User, Module, Process Model and Design Change (DC) information from LIFESPAN and transfer it to a proprietary relational database of his choice.
Two relational databases are supported, ORACLE RDBMS for DEC VAX/VMS and DEC's Rdb/VMS.
Regular operation of LIFESPAN RDBI allows transferred information to be kept up to date with changes occurring in LIFESPAN.
The facilities of the relational database may be used by LIFESPAN users to perform complex queries on transferred LIFESPAN information and produce customised reports.
The information made visible by the use of such database facilities is restricted according to the same security rules imposed by LIFESPAN.
This User Guide describes the operation of LIFESPAN RDBI and provides details required to access transferred LIFESPAN information within the chosen relational database.
audience
The User Guide is intended for all levels of user, however it is assumed that the reader is familiar with LIFESPAN and its operation.
If more information is required, reference should be made to the complete set of LIFESPAN manuals (references 1 to 6).
It is also assumed that the reader is familiar with relational database technology and the concepts and terminology therein.
Manual Structure
Section 1 of the Guide gives an overview of the methods of transfer provided by LIFESPAN RDBI, plus the information eligible for transfer.
It also describes how access to transferred information may be restricted to conform to the standard LIFESPAN security rules.
The detailed operation of LIFESPAN RDBI varies according to the relational database used.
This is fully described in Section 2.
This section also discusses creating a suitable relational database to accommodate LIFESPAN information and tuning it to improve the performance of queries.
Section 3 of the Guide explains in detail the views provided in the relational database of LIFESPAN User, Module, Process Model and DC information.
It also gives examples of typical queries which users may wish to perform on LIFESPAN information and some sample outputs from these queries.
Sections 1 and 2 are targeted specifically for the LIFESPAN manager, with section 3 intended for LIFESPAN users who wish to access the transferred data.
Appendix A provides a list of referenced documents which may by useful to the reader.
Appendix B provides a list of error messages which may be generated by LIFESPAN RDBI, along with guidance on their solutions.
Appendix C describes the keywords which may be used in the RDBI configuration file.
Appendix D outlines the operational restrictions of LIFESPAN RDBI.
OVERVIEW OF LIFESPAN RDBI
LIFESPAN RDBI allows the LIFESPAN Manager to transfer selected information from LIFESPAN into a relational database.
User, Module and Design Change (DC) information is eligible for transfer, and the Manager may configure LIFESPAN RDBI to transfer whichever of these three types of information is required.
Information Available for Transfer
The information available for transfer is as follows:
User
the basic details of each user (e.g. name, address, roles) plus their family relationships and any special access links between them
details of all charge codes available to users
Module
the basic details of each module (e.g. name, type, subtype, substate, title), their versions and their relationships to each other; transfer may be restricted to approved modules only
Process Model
the basic details of each process model (e.g. module name, state, class, type, subtype)
DC
the basic details of each DC (e.g. identifier, title, priority) plus their relationships to modules, other DCs and Software Performance Reports (SPRs)
optionally DC assessments may also be transferred.
General module header information is not transferred, nor is module, DC or DC assessment descriptions.
Full details of information available for transfer are provided in Section 3, along with an explanation of how this information is presented to the user in the relational database.
If you wish to use the facilities of one of the supported relational databases to perform further queries than those provided or report on any of the available LIFESPAN information, please contact your LIFESPAN Manager who can arrange this for you.
Security Control
Once in the relational database, access to LIFESPAN information is controlled by the same security rules as imposed by LIFESPAN itself.
Only users which were specified during the configuration of LIFESPAN RDBI may view LIFESPAN information within the relational database, and they may only view the same information as they have access to in LIFESPAN.
A different set of users may be specified for each of the types of information transferred by LIFESPAN RDBI.
Specified users must be LIFESPAN users and must also be registered relational database users.
There is one exception to the security rules, which is that the LIFESPAN Manager can always view any LIFESPAN information in the relational database.
Transfer Methods and Dates
Information on Users, Modules, Process Models and DCs may be transferred in one of two methods, ‘bulk’ or ‘incremental’.
‘Bulk’ causes all data contained in LIFESPAN for the specified type to be transferred;
‘Incremental’ causes transfer of only that data which has been modified or added to LIFESPAN since data of that same type was last transferred.
Two other transfer categories exist; ‘inhibit’ and ‘delete’.
‘Inhibit’ prevents data transfer in a particular type and ‘delete’deletes all previously transferred data in that type.
For each type of information transferred, LIFESPAN RDBI maintains a date in the relational database indicating when information of that type was last transferred.
This tells the user when the information contained in the relational database was last updated within LIFESPAN.
USING LIFESPAN RDBI
Introduction
This section describes how to set up your relational database to accept LIFESPAN information and how to configure and run LIFESPAN RDBI.
Some instructions differ depending on whether you use DEC Rdb/VMS or ORACLE RDBMS as your relational database.
The LIFESPAN RDBI data transfer program may only be operated by the LIFESPAN Manager.
It is a stand-alone program and should only be run when the LIFESPAN process is not running.
To avoid inconvenience it may be scheduled to run at a specific time when LIFESPAN itself is not required.
Setting up your Relational Database
Details of how to create your relational database depend on whether DEC's Rdb or an ORACLE database is being used.
This task should be performed by the LIFESPAN manager or by the database administrator.
DEC Rdb/VMS
A DEC Rdb/VMS relational database may be created automatically by LIFESPAN RDBI following the instructions in the RDBI configuration file (see Appendix D).
Alternatively, it may be created on the LIFESPAN RDBI installation account by using the following SQL command:
where
directory is the VMS directory where the database is to reside
databasename is the unique database name chosen by yourself
The size allocated to the index storage area (ie 30000 blocks above) should be about 2/3 of that reserved for the data (ie 50000 blocks above).
The example given above would require about 165,000 blocks of disk space on ‘disk’:['directory'].
It is estimated that a database of this size could contain the following (note that these figures are only estimates):
these figures equate to LIFESPAN 08.00 database files of approximately the following sizes:
LIFESPAN RDBI (running on a MicroVax 2000) would take approximately 1 day of CPU time to bulk transfer a LIFESPAN 08.00 database of this size.
A rough estimate for data transfer time can be obtained by comparing the size of your LIFESPAN database with the sizes specified above.
A linear relationship may be assumed.
It is recommended that your database is large enough to cope with current LIFESPAN data plus an allocation for future data.
The database will grow in size automatically as necessary but the data transfer times will increase if your database continually requires to be extended.
The following line should be added to the login command file associated with ‘disk’:['directory']:
Just as users should not be given direct access to the LIFESPAN process account, nor should they be given direct access to the account which contains the LIFESPAN RDBI database.
User Access to DEC Rdb/VMS
VMS users wishing to work with DEC Rdb/VMS must have the following privileges and quotas:
Invoke the DCL command $SHOW PROCESS/PRIVILEGE from within the users account to determine whether they have the required privileges.
Use the VMS Authorize utility as follows to grant the privileges if they are not available:
Quotas:
Notes:
(a) The value of BIOLM and DIOLM should be equal or greater than the value for the defined number of database buffers.
Use the RMU/DUMP command to display this value.
(b) This value should be raised to 2000 if CDD/Plus is used.
(c) This should be at least 1 if any precompilers are to be used.
Invoke the DCL command $SHOW PROCESS/QUOTA from within the users account to determine whether they have the required quotas.
Use the VMS Authorize utility as follows to change the process quotas if they are not available.
Note, users must log out and log in again for the new quotas to take effect.
These privileges and quotas have been taken from the VAX Rdb/VMS Installation Guide, reference 10.
Ideally, this volume should be consulted to check that the most up to date recommendations are used.
ORACLE RDBMS
An ORACLE RDBMS database should be created using the ORACLE ORACLEINS program (or via SQL*DBA, reference 8) as detailed in the ORACLE Installation and User's Guide (reference 7).
All default settings should be used except the database size parameter.
This should be estimated using the guidelines above.
All VAX/VMS accounts which require to access this database must execute the ORAUSER.COM file from their login command file to define the logicals and symbols referenced by ORACLE (again, see Reference 7) e.g.  where
oracleaccount is the root directory where the ORACLE database was installed
orasid is the SID (system identifier) associated with your database
nodename is the node where the your ORACLE instance resides
Note that it is not necessary to create a separate database instance for LIFESPAN RDBI.
An existing one may be used provided it has the accounts detailed below available within it.
A number of accounts must be set up in this database.
The first account is solely for the use of the LIFESPAN RDBI data transfer program and should be created using the following SQL*Plus command:
It is important that the account is created with password NEWPASSWORD.
LIFESPAN RDBI will encrypt this password the first time the data transfer program is run.
Users should not be given access to this account.
The ‘username’ chosen should be made available to users of the data.
It must be prefixed to the view names in their queries e.g. 
Unless the system tablespace is to be used by this account then the ORACLE database administrator should create a new tablespace (using the size guidelines presented in section 2.2.1) and then link this tablespace to the new user by entering the following SQL*Plus commands:
Users who wish to access the transferred data should have accounts created using the following SQL*Plus command:
GRANT CONNECT, RESOURCE TO ‘username’ IDENTIFIED BY ‘password’;
A characteristic of an ORACLE view is that it will truncate a column header to the size of the field it represents (ie if the field is smaller).
To overcome this the following SQL*Plus format statements should be included in the LOGIN.SQL file (created in the VMS directory from which the database will be accessed) of each user who wishes to execute the views provided by LIFESPAN RDBI:
Relational Database Backups
Relational database backups should be performed at the same time as LIFESPAN backups.
Your LIFESPAN 08.00 documentation should be consulted for further details.
It is important that your LIFESPAN 08.00 database files do not get out of step with your relational database files.
Otherwise, a complete bulk transfer will be required to make the two consistent again.
Using LIFESPAN RDBI
Before running the LIFESPAN RDBI data transfer program the LIFESPAN Manager must add the following logicals to the login command file associated with the account from which LIFESPAN RDBI will be run i.e. the LIFESPAN process account.
where
process directory is the VMS pathname to the LIFESPAN process directory (i.e. where the 59.
FIL files reside),
installation directory is the VMS pathname to the directory which contains the LIFESPAN RDBI executables
The LIFESPAN RDBI issue consists of a command file which initialises the logicals required by the LIFESPAN RDBI data transfer program.
This command file is called RDBISETUP.COM and is available on the LIFESPAN process directory (i.e. where the 59.
FIL files reside).
The first two logical assignments in this file (ie to RDBICONFIGURATION and LIFESPANCONFIGURATION) should be modified to point to LIFESPAN RDBI and LIFESPAN configuration files respectively.
An example LIFESPAN RDBI configuration file (RDBI.DAT) is also available in the issue and should be modified to suit your transfer requirements.
Details of this are documented below in the section ‘Configuring LIFESPAN RDBI’.
The LIFESPAN configuration file currently being used on the system should be the one pointed to by the logical LIFESPANCONFIGURATION.
Configuring LIFESPAN RDBI — Overview
First of all the LIFESPAN Manager must find out which LIFESPAN users, in addition to himself, wish to access LIFESPAN information once it is transferred to the selected database.
These users may opt to access any one of, or combination of, User, Module and Design Change information.
The LIFESPAN Manager is automatically given access to all User, Module and DC information.
In order to access transferred information LIFESPAN users must also be registered users of the relational database.
In the case of DEC Rdb/VMS a registered user must have a VMS account which has privileges and quotas as specified above in the section, ‘User Access to DEC Rdb/VMS’.
In the case of ORACLE RDBMS a registered user must have an account created in the same instance into which LIFESPAN RDBI is transfering data.
Next the Manager must decide which methods of transfer he wishes.
There are a number of methods which may be independently selected for each type of information to be transferred.
These are,
Bulk — all information of specified type is transferred
Incremental — only transfer information which has been modified or added to LIFESPAN since the last transfer for that type
Inhibit — don't transfer any information of given type
Delete — delete from relational database all information previously transferred for the specified type
‘Bulk’ transfer should be used the first time information of a given type is transferred, thereafter this information can be kept up to date with LIFESPAN by use of ‘incremental’transfers.
Although it should not normally be necessary, ‘bulk’ can be used at any time to completely refresh LIFESPAN information in the relational database.
User/module names will be transferred when ‘inhibit’ or ‘delete’is specified for either user or module details.
This ensures that this information does not get out of step with data in the other subsystems e.g. user names are linked to dc details (i.e. owner), module names to dc modules etc.
Finally as some transfers, in particular‘bulk’ may be rather time consuming, the LIFESPAN Manager has the ability to restrict the elapsed time over which LIFESPAN RDBI runs.
This is over and above the ability to schedule the transfer to run at given times.
If LIFESPAN RDBI cannot complete within the restricted time, it will stop at a sensible position from which it can subsequently restart.
This may mean that the transfer of some types of information may stop part way through or not be started at all.
The user can always tell exactly when data of a given type was last transferred by use of the Transfer Dates View described in Section 3.2.
The error log file, see figure 2.2, will also detail the categories which were, or were not, transferred.
It should be noted that there are certain times at which LIFESPAN RDBI will not stop the data transfer process immediately.
Such times, and the overall structure of LIFESPAN RDBI data transfer are outlined below in the section, ‘Structure of LIFESPAN RDBI Data Transfer’.
Once the LIFESPAN Manager has identified which data has to be transferred and for whom, the method of transfer to be used and the transfer schedule, LIFESPAN RDBI should be configured to run with these characteristics.
This configuration is described below.
Configuring LIFESPAN RDBI — Detail
LIFESPAN RDBI is configured by use of a Configuration File.
This file is stored as RDBI.DAT in the LIFESPAN process directory (i.e. where the 59.
FIL files reside).
It conforms to the same overall syntax as LIFESPAN's configuration file but with different keywords.
An example is shown in Figure 2.1.
The keywords and their definitions are detailed in Appendix C.
Running LIFESPAN RDBI
Before running LIFESPAN RDBI the following should be checked.
LIFESPAN version 08.00 and either DEC Rdb/VMS or ORACLE RDBMS are available on your system.
The versions of these database systems which are compatible with LIFESPAN RDBI are as indicated in the LIFESPAN RDBI installation notes (reference 11).
The account from which LIFESPAN RDBI is to be run i.e. the LIFESPAN process account, has sufficient quotas as specified in the LIFESPAN RDBI installation notes (reference 11).
RDBISETUP.COM has been edited so that the two logicals RDBICONFIGURATION and LIFESPANCONFIGURATION point to the RDBI configuration file and LIFESPAN configuration files respectively within your system.
The two logicals RDBI$PROC_ACC and RDBI$INST_ACC have been assigned in the login.com associated with the LIFESPAN process account.
This is the login.com which will be invoked by the LIFESPAN RDBI data transfer batch job.
The LIFESPAN RDBI configuration file has been edited to configure the LIFESPAN RDBI transfer run.
The LIFESPAN process has been shutdown.
Once the above tasks have been completed LIFESPAN RDBI may be run.
The LIFESPAN Manager should log in to the LIFESPAN RDBI process directory (i.e. where the 59.
FIL files reside) and issue the following commands: where
RDBI Configuration File is the logical name specified for the LIFESPAN RDBI configuration file in RDBISETUP.COM
Batch Queue is the name of the batch queue to be used by LIFESPAN RDBI.
As a result of these commands LIFESPAN RDBI will be queued to execute from the stated batch queue at the time specified in its configuration file.
When it runs its progress will be logged via its error log file, an example of which is given in Figure 2.2.
This file may be listed, during execution, to monitor data transfer progress.
A description of all errors which may be reported in the error log file is provided in Appendix B.
As with all batch jobs, a batch job log file, in this case RDBI.LOG, is produced in the login directory associated with the LIFESPAN process account.
This and the RDBI.BAT files should be purged after successful RDBI transfers.
Note that automatic print-out of RDBI.LOG is suppressed.
If a print-out is required it must be performed manually by the LIFESPAN Manager.
Structure of LIFESPAN RDBI Data Transfer
LIFESPAN RDBI data transfers can be broken down into the following phases:
(a) Transfer of USER DETAILS, i.e.
user names and details (user names only if transfer mode is inhibit or delete),
charge codes,
special relations,
application of indexes to tables containing the above data if USER DETAILS transfer mode is BULK.
(b) Transfer of PROCESS MODEL DETAILS, i.e.
states and associated state names for each process model,
process model details.
(c) Transfer of MODULE DETAILS, i.e.
module names and details (module names and subtypes only if transfer mode is inhibit or delete),
module specs. and relations,
module locations,
application of indexes to tables containing the above data if MODULE DETAILS transfer mode is BULK.
(d) Transfer of DC DETAILS, i.e.
DC details,
DC assessments (only if assessments specified),
application of indexes to tables containing the above data if DC DETAILS transfer mode is BULK.
(e) Application of indexes specified in the LIFESPAN RDBI configuration file.
LIFESPAN RDBI provides a facility to control how long the above data transfer process is allowed to run (re.
configuration file parameter DURATION).
It should be noted however, that LIFESPAN RDBI will NOT terminate if it is applying indexes when the specified transfer time elapses.
Instead it will continue until the particular set of indexes have been applied, and then terminate.
This ensures that the integrity of the database is maintained.
For large systems application of indexes to module and DC related tables may take a considerable amount of time.
It is recommended that this is taken into consideration when scheduling LIFESPAN RDBI bulk data transfers.
RELATIONAL DATABASE VIEWS
Introduction
This section describes all LIFESPAN information which, on request, LIFESPAN RDBI transfers to the selected relational database.
The database views via which this information is presented to users of the relational database are also explained.
You may use the specified views to query the relational database using SQL or a suitable proprietary database report generator.
Examples of some typical queries are provided at the end of the section.
If you are using ORACLE RDBMS, then you must know the ORACLE user name used by LIFESPAN RDBI to transfer LIFESPAN information.
During queries this name must be prefixed to all references to view names.
e.g.
SELECT USER_NAME, PARENT FROM ‘username’.
USER_DETAILS;
Please refer to your LIFESPAN Manager for the transfer user name.
In order to query LIFESPAN information in the relational database you must be a registered user of both LIFESPAN and of the database.
You must also inform the LIFESPAN Manager which information you wish to query, that is User, Module, Process Model and/or DC.
Finally, prior to accessing the relational database you must set your DEC Rdb/VMS or ORACLE default database, as appropriate, to whichever database your LIFESPAN Manager has set up to retain the transferred LIFESPAN information.
For example, for DEC Rdb/VMS users wishing to use SQL enter the following:
$ASSIGN ‘disk’:['directory']databasename SQL$DATABASE
$RUN SYS$SYSTEM:SQL$
For users wishing to use RDO the following should be entered:
where
directory is the VMS directory where the database resides
databasename is the name of the database you wish to connect to
Details of how ORACLE RDBMS users should attach to a database are given in section 2, ‘ORACLE RDBMS’.
When querying the database you are only able to see information to which you have read access in LIFESPAN.
Information to which you have no read access simply does not appear in query outputs; you are not informed that there is LIFESPAN information in the relational database of which you have no visibility.
Transfer Dates View
User, Module and Design Change information may be viewed as described in the next few paragraphs.
For each of these types of information a date is maintained in the relational database indicating when that information was last updated within LIFESPAN.
These dates are presented in the view (i.e. DATES_VIEW) shown in Figure 3.1.
It should be noted that these dates represent the time stamp of the last associated record transferred into the relational database.
These values are initialised by the LIFESPAN 07.00 to LIFESPAN 08.00 upgrade programs and until your LIFESPAN 08.00 system updates them they may represent values of more than one hundred years old.
Viewing User Information
When user information is requested for transfer, details of every user in LIFESPAN and their user relationships to each other are transferred along with details of all charge codes.
For each user these details are:
user name, privileges and roles
personal name and location
parent's user name
the identity of the default node via which the user normally accesses LIFESPAN
user name of each user to which special access links have been granted.
For each charge code the following information is transferred:
charge code number
the name of the user responsible for the charge code
the VMS directory allocated to the charge code
All the above information is presented to users of the relational database via the series of database views shown in Figure 3.2.
This figure shows the name of each view plus the name and syntax of each column in the view.
The amount of information presented in the USER_DETAILS view is quite large.
It is therefore recommended that you select only those fields which you are most interested in e.g. 
The entries in some columns of the database views are restricted to only take a predefined set of values.
These are the columns in the USER_DETAILS view showing the privileges for the user.
Each such column may either take the values ‘Y’(the user has the given privilege) or ‘.’
(the user doesn't have the privilege).
The entries in all other columns are unrestricted.
Viewing Module Information
When module information is requested for transfer, details on every module in LIFESPAN are transferred along with details pertaining to the various versions of these modules and their relationships to each other.
Module version information may be restricted to details on approved module versions only, with details on intermediate development versions omitted.
For each module the following details are transferred:
module name, type and existence string
preferred version of the module
flag indicating whether the module is password protected or not
charge code to which the module belongs
user names of the owner and the manager of the module
date the name of the module was reserved
flag indicating whether automatic DC assessment has been set TRUE or FALSE for the module (packages only)
module part number
For each module version the following details are transferred:
module name
issue number of the module version
subtype name of the module version
substate identifier of the module version
hard copy status; that is whether a hard copy of the module version has been requested and if so what stage the hard copy process has reached
deletion nominated date; that is, if LIFESPAN has identified that version is eligible for deletion, the date that this occurred
current storage location of the module version; that is online LIFESPAN storage, LIFESPAN offline system or only in LIFESPAN hard copy system.
In the latter case the module version is no longer available in magnetic form.
date the module version was last accessed (i.e. read or entered) in LIFESPAN
For each related module of each module version, the following details are transferred:
name of related module
type of module relationship (e.g. CONTAINS_SOURCE_OF, IS_TESTED_BY)
if it is a tight coupling relationship, the type of tight coupling (i.e. LATEST, SELECTED or PREFERRED).
If the coupling is ‘SELECTED’ then the associated issue number is also transferred
if the relationship is CONTAINS_SOURCE_OF, then the name of the file in which the module is to be transferred to and from user's accounts.
All the above information is presented to users of the relational database via the series of database views shown in Figure 3.3.
This figure shows the name of each view plus the name and syntax of each column in the view.
The entries in some columns of the database views are restricted to only take a predefined set of values.
. These columns and their values are:
Further explanation of these values may be found in the LIFESPAN documentation (references 1 to 6).
All columns representing issue numbers of module versions have the standard LIFESPAN format (e.g. 10.08B) except that approved issue numbers are shown with a ‘∘’ as their development letter (e.g. 01.01 is shown as 01.01∘).
This ensures that issue numbers appear in their correct order when listed numerically.
The entries in all columns not specified above are unrestricted.
Viewing DC Information
When DC information is requested for transfer the following details are available for viewing:
DC identifier, title and current state
DC priority, classification and job reference
the name of the user responsible for the DC, that is the associated user, and the date at which that user was passed responsibility
if the DC has reached the ‘active’ state, the package via which it was activated
the status history of the DC, that is for each state through which the DC has passed, including the current state, the date at which the DC last entered that state.
(Note that DCs may pass through the same state more than once.
For example, a DC which has been submitted for approval with a package reverts to ‘active’ state if the package approval is denied)identifier of each SPR to which the DC has been related
identifier of each DC which the given DC supersedes or refers to
name of each module for which the DC proposes a change
For users of DEC Rdb/VMS the view DC_HISTORY is ordered on DC_IDENTIFIER and STATE_CHANGED_ON.
It is not possible to provide this ordering for users of ORACLE RDBMS.
Optionally DC assessment information can also be transferred.
In this case, the following information is transferred for each assessor of each submitted DC
the LIFESPAN user name of the assessor, and whether the assessor accepted or rejected the DC, or has not yet assessed it.
the date at which the assessment was requested
the date at which the assessment was given
the names of the modules which caused the user to become an assessor of the DC.
These will comprise of those modules for which the DC proposes a change and of which the assessor is manager; also any packages which the assessor manages and which contain any of the modules for which the DC proposes change.
See Appendix D, ‘LIFESPAN RDBI Operational Restrictions’.
The above information is presented to users of the relational database via the series of database views shown in Figure 3.4.
This figure shows the name of each view plus the name and syntax of each column in the view.
The entries in some columns are restricted to only take one of a predefined set of values.
These columns and their values are:
Further explanation of these values may be found in the LIFESPAN documentation (references 1 to 6).
The entries in all columns not specified above are unrestricted.
Sample Queries
With the views just described it is possible to perform many queries on LIFESPAN information and produce complex reports.
These queries may either be issued using the Structured relational database Query Language (SQL) or one of the proprietary report writers provided with the selected relational database.
A number of sample queries are provided with LIFESPAN RDBI showing typical queries you may wish to perform.
They are supplied as SQL command files in the LIFESPAN RDBI installation directory and may be executed from SQL by typing the following command:
where file is the name of the SQL command file and LSRDBIINST is the VAX/VMS directory where file resides.
The sample queries are provided for use with DEC Rdb/VMS and ORACLE RDBMS (requiring SQL and SQL*PLUS interactive licences respectively).
If you wish to use them with ORACLE you must prefix all view names with the ORACLE user name used by LIFESPAN RDBI to transfer the LIFESPAN information.
Your LIFESPAN Manager will be able to tell you this name.
The sample queries are as follows:
List Modules and their Packages for a Specified User.
This query is held in SQL command file MODPCK.QRY.
When executed it lists all the LIFESPAN modules and packages for which you have read access, and for which ‘SOFTWARE REPOSITORY’ is manager.
The modules are listed beside each package version along with the names of the files which that package version uses to transfer them in and out of LIFESPAN.
The LIFESPAN user name ‘SOFTWARE REPOSITORY’ should be substituted by a valid LIFESPAN user name in your system.
The query command is shown in Figure 3.5 along with an example of its results in Figure 3.6.
List Online Modules.
This query is held in SQL command file ONMOD.QRY.
When executed it lists in alphabetical order all versions of LIFESPAN modules which are currently online and to which you have read access.
The query command is shown in Figure 3.7 along with an example of its results in Figure 3.8.
List Immediate Descendants.
This query is held in SQL command file DSSC.QRY.
When executed it lists the LIFESPAN user name and personal name of all the immediate descendants of the LIFESPAN manager.
The user name ‘MANAGER’ may be substituted by any other LIFESPAN username to determine their immediate descendants.
The query command is shown in Figure 3.9 along with an example of its results in Figure 3.10.
List Users and Privileges.
This query is held in SQL command file USRPRV.QRY.
When executed it lists the privileges of all LIFESPAN users of which you have visibility.
The users are listed in alphabetical order.
The query command is shown in Figure 3.11 along with an example of its results in Figure 3.12.
List Charge Codes.
This query is held in SQL command file CC.QRY.
When executed it lists in numerical order all charge codes to which you have access, plus the LIFESPAN users responsible for them and the storage directories to which the charge codes have been allocated.
The query command is shown in Figure 3.13 along with an example of its results in Figure 3.14.
In addition to using these queries directly, you may make a copy of the SQL command files and extend and/or customise them to suit your own needs.
REFERENCES
1.
Introduction to LIFESPAN, R645/56
2.
User's Guide to LIFESPAN, R645/58
3.
Reference Guide to LIFESPAN, R645/59
4.
Installation and Management of LIFESPAN, R645/60
5.
Creating and Controlling Modules and Packages with LIFESPAN, R645/57
6.
Operations Guide to LIFESPAN, R645/61
7.
ORACLE for DEC VAX/VMS Installation and User's Guide, Part No.1001 — V6.0, Version 6.0 August, 1989
8.
ORACLE Database Administrators Guide, Part No.3601 — V6.0 November 1988
9.
ORACLE Error Messages and Codes Manual, Part No.3605 — V6.0 November 1988
10.
VAX Rdb/VMS Installation Guide, December 1989
11.
LIFESPAN RDBI Installation Notes
12.
VAX Rdb/VMS Guide to Database Maintenance and Performance, December 1989
13.
ORACLE RDBMS Performance Tuning Guide, Part No.5317-V6.0, August 1989
RDBI ERROR MESSAGES
Introduction
The following error messages are those that may be reported in the RDBI error log file while running LIFESPAN RDBI.
The messages are ordered alphabetically by error string.
An extra level of error handling, to process database generated error messages, has also been built into LIFESPAN RDBI.
These messages will also be reported in the RDBI error log file and will be in the following format:
where, error_number and error_text are values generated by the relational database.
Further details of these messages may be found in reference 1, if ORACLE RDBMS is being used, or in VMS directory SYS$HELP, files MSG.DOC, RDB_MSG.DOC and RDMS_MSG.DOC if DEC Rdb/VMS is being used.
While LIFESPAN RDBI is running the error log file may be accessed by typing it to the screen.
It is recommended that this error log is never allowed to grow so large that typing it to the screen takes a significant amount of time.
LIFESPAN RDBI cannot access this file while it is locked by another user.
In such circumstances LIFESPAN RDBI will make a number of attempts to write to the error log.
If this is unsuccessful then the message will be written to the batch log (i.e. RDBI.LOG in the home directory).
A number of other error messages, which are related to the internal workings of LIFESPAN RDBI, may also be reported.
These errors are not documented below and if they occur should be reported to Sema Software Technology along with any database generated error messages described above.
Errors
Batch queue specification error 
When running LIFESPAN RDBI two parameters MUST be specified on the command line i.e. the name of the RDBI configuration file, followed by the name of the batch queue from which LIFESPAN RDBI will run.
You have not specified the batch queue correctly.
Re-run LIFESPAN RDBI and specify a valid batch queue.
Details of the LIFESPAN RDBI command line can be found in section 2, ‘Running LIFESPAN RDBI’.
Batch queue not specified on command line 
When running LIFESPAN RDBI two parameters MUST be specified on the command line i.e. the name of the RDBI configuration file, followed by the name of the batch queue from which LIFESPAN RDBI will run.
You have not included the name of the batch queue in the command line.
Re-run LIFESPAN RDBI and specify a batch queue.
Details of the LIFESPAN RDBI command line can be found in section 2, ‘Running LIFESPAN RDBI’.
Charge Code details not transferred as TRANSFER SCHEDULE time expired 
This category of data was not transferred as the time allocated at the TRANSFER SCHEDULE keyword, in the RDBI configuration file, elapsed during the data transfer.
Re-run LIFESPAN RDBI and set the USER DETAILS transfer category to INCREMENTAL.
If possible increase the amount of time allocated for the data transfer at the TRANSFER SCHEDULE keyword.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Charge Code details not transferred due to a previous error 
No charge code data has been transferred because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
Could not access database specified in configuration file 
LIFESPAN RDBI has failed to connect to the relational database specified in the RDBI configuration file.
Edit the RDBI configuration file and ensure that either the DEC Rdb/VMS database specified at the SCHEMAID keyword, or that the ORACLE RDBMS database specified at the SECURITY KEY keyword exists and is reachable by LIFESPAN RDBI.
Appendix C, ‘Configuration File Keywords’, details the use of these keywords.
Could not access LIFESPAN configuration file 
The LIFESPAN configuration file specified at the LSCONFIGURATIONFILE keyword, in the RDBI configuration file, could not be found, or, it could not be opened.
Check that the LIFESPAN configuration file specified is available and can be accessed by LIFESPAN RDBI.
DC ACCESS keyword not specified in configuration file 
A list of users who have to be granted access to DC information must be specified in the RDBI configuration file.
These users are listed at the DC ACCESS keyword.
This keyword was found to be missing from the RDBI configuration file.
Note that this keyword must be included even if there are no users to be granted access.
Edit the RDBI configuration file to include a DC ACCESS keyword (and details of any users who have to be granted access to DC information).
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
DC Assessment data not transfered as TRANSFER SCHEDULE time expired 
This category of data was not transferred as the time allocated at the TRANSFER SCHEDULE keyword, in the RDBI configuration file, elapsed during the data transfer.
Re-run LIFESPAN RDBI and set the DC DETAILS transfer category to INCREMENTAL.
If possible increase the amount of time allocated for the data transfer at the TRANSFER SCHEDULE keyword.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
DC Assessments not transfered due to a previous error 
No DC Assessment data has been transferred because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
DC Data not transfered as TRANSFER SCHEDULE time expired 
This category of data was not transferred as the time allocated at the TRANSFER SCHEDULE keyword, in the RDBI configuration file, elapsed during the data transfer.
Re-run LIFESPAN RDBI and set the DC DETAILS transfer category to INCREMENTAL.
If possible increase the amount of time allocated for the data transfer at the TRANSFER SCHEDULE keyword.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
DC Data not transfered due to a previous error 
No DC Data has been transferred because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
DC Details activity not started as TRANSFER SCHEDULE time expired 
The transfer of DC data was not started as the transfer time allocated, in the RDBI configuration file, expired during or just after module details data transfer.
Re-run LIFESPAN RDBI.
If possible increase the amount of time allocated for the data transfer at the TRANSFER SCHEDULE keyword.
Details of this keyword can be found in Appendix D, ‘Configuration File Keywords’.
DC Details data not DELETED due to a previous error 
No DC Details data has been deleted because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
Duplicate mapping at MAP USERNAME keyword in configuration file 
You have attempted to map the same LIFESPAN user onto more than one relational database user.
This is not permitted.
Edit the RDBI configuration file and ensure that mappings are from one LIFESPAN user to one relational database user, or, from many LIFESPAN users onto one relational database user.
Failed to ALTER ORACLE transfer username password.
LIFESPAN RDBI has failed in its attempt to encrypt the ORACLE transfer account password.
This error is not fatal and will not prevent data transfer.
However, the transfer account password will remain set at NEWPASSWORD.
Ensure that the SECURITY keyword of the RDBI configuration file is set correctly.
Failed to create DEC Rdb/VMS database using details provided in config file 
LIFESPAN RDBI has failed in its attempt to automatically create a DEC Rdb/VMS database using the details specified at the SCHEMAID keyword in the RDBI configuration file.
Check that the details specified at the SCHEMAID keyword are correct (see Appendix C, ‘Configuration File Keywords’), that LIFESPAN RDBI has access to the account where the database has to be created, and that enough quota exists for the size of database required.
Failure when accessing details in LIFESPAN CONFIGURATION file 
LIFESPAN RDBI has failed while either accessing the configuration file associated with your LIFESPAN database, or accessing the.
FIL files referenced within this configuration file.
Check that the configuration file specified at the LSCONFIGURATIONFILE keyword in the RDBI configuration file is the correct one.
That is, it is the one currently being used by your LIFESPAN system and can be accessed by LIFESPAN RDBI.
Also, check that the.
FIL files referenced are available to LIFESPAN RDBI. e.g. It may be that the LIFESPAN process may not have been shut down.
Invalid database user: <user name> 
This message will be output if LIFESPAN RDBI cannot create one of its USER, MODULE or DC related views.
Edit the RDBI configuration file and ensure that all relational database users specified at the MAP USERNAME keyword are valid i.e. if DEC Rdb/VMS is the target database then all users are existing VMS users, or if ORACLE is the target database than all users are valid ORACLE users (but not the name of the transfer account).
Also, if DEC Rdb/VMS is the target database then ensure that any UICs specified at the MAP_USERNAME keyword have been done so correctly.
Invalid DC DETAILS transfer mode found in configuration file 
An invalid transfer mode was found at the DC DETAILS keyword in the RDBI configuration file.
Edit the RDBI configuration file and ensure that the transfer mode specified is either BULK, INCREMENTAL, INHIBIT or DELETE.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Invalid DC TRANSFER category found in configuration file 
An invalid DC transfer category was found at the DC DETAILS keyword in the RDBI configuration file.
Edit the RDBI configuration file and ensure that the transfer category specified is either ASSESSMENTS or NOASSESSMENTS.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Invalid Duration Time specified in configuration file 
The format of the duration time parameter specified, in the RDBI configuration file, at the TRANSFER SCHEDULE keyword is incorrect.
Edit the RDBI configuration file and correct the format of this parameter (correct format is dddd hh:mm).
Invalid LS user name specified at MAP USERNAME keyword 
You have attempted to map a user who does not currently exist in LIFESPAN onto a relational database user.
This is not permitted.
Edit the RDBI configuration file and ensure that only users who exist in LIFESPAN, and have been specified at the USER/MODULE/DC ACCESS keywords, have been used at the MAP USERNAME keyword.
Invalid MODEL DETAILS transfer mode found in configuration file 
An invalid transfer mode was found at the MODEL DETAILS keyword in the RDBI configuration file.
Edit the RDBI configuration file and ensure that the transfer mode specified is either BULK, INCREMENTAL, INHIBIT or DELETE.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Invalid MODULE DETAILS transfer mode found in configuration file 
An invalid transfer mode was found at the MODULE DETAILS keyword in the RDBI configuration file.
Edit the RDBI configuration file and ensure that the transfer mode specified is either BULK, INCREMENTAL, INHIBIT or DELETE.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Invalid MODULE TRANSFER category found in configuration file 
An invalid module transfer category was found at the MODULE DETAILS keyword in the RDBI configuration file.
Edit the RDBI configuration file and ensure that the transfer category specified is either ALL or ONLYAPPROVED.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Invalid Repeat Time specified in configuration file 
The format of the repeat time parameter specified, in the RDBI configuration file, at the TRANSFER SCHEDULE keyword is incorrect.
Edit the RDBI configuration file and correct the format of this parameter (correct format is dddd hh:mm).
Invalid SIZE parameter specified at SCHEMAID keyword 
You have specified the size parameter of the SCHEMAID keyword, in the RDBI configuration file, incorrectly.
Edit the RDBI configuration file and ensure that this parameter contains only digits (maximum 8).
Details of this keyword can be found in Appendix C ‘Configuration File Keywords’.
Invalid Start Time specified in configuration file 
The format of the start time parameter specified, in the RDBI configuration file, at the TRANSFER SCHEDULE keyword is incorrect.
Edit the RDBI configuration file and correct the format of this parameter (correct format is dd-MMM-yyyy hh:mm).
Invalid USER DETAILS transfer mode found in configuration file 
An invalid transfer mode was found at the USER DETAILS keyword in the RDBI configuration file.
Edit the RDBI configuration file and ensure that the transfer mode specified is either BULK, INCREMENTAL, INHIBIT or DELETE.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Invalid user specified at DC ACCESS keyword 
You have specified a LIFESPAN user who does not currently exist within LIFESPAN, at the DC ACCESS keyword, in the RDBI configuration file.
Edit the RDBI configuration file and ensure that the LIFESPAN users, specified at the DC ACCESS keyword, currently exist within LIFESPAN.
Invalid user specified at MODULE ACCESS keyword 
You have specified a LIFESPAN user who does not currently exist within LIFESPAN, at the MODULE ACCESS keyword, in the RDBI configuration file.
Edit the RDBI configuration file and ensure that the LIFESPAN users, specified at the MODULE ACCESS keyword, currently exist within LIFESPAN.
Invalid user specified at USER ACCESS keyword 
You have specified a LIFESPAN user who does not currently exist within LIFESPAN, at the USER ACCESS keyword, in the RDBI configuration file.
Edit the RDBI configuration file and ensure that the LIFESPAN users, specified at the USER ACCESS keyword, currently exist within LIFESPAN.
Maximum number of DC ACCESS keywords exceeded in configuration file 
You have specified more than 10 DC ACCESS keywords in the RDBI configuration file.
Edit the RDBI configuration file and ensure that the DC ACCESS keyword is specified no more than 10 times.
Maximum number of MODULE ACCESS keywords exceeded in configuration file 
You have specified more than 10 MODULE ACCESS keywords in the RDBI configuration file.
Edit the RDBI configuration file and ensure that the MODULE ACCESS keyword is specified no more than 10 times.
Maximum number of USER ACCESS keywords exceeded in configuration file 
You have specified more than 10 USER ACCESS keywords in the RDBI configuration file.
Edit the RDBI configuration file and ensure that the USER ACCESS keyword is specified no more than 10 times.
Maximum number of user mappings exceeded in configuration file 
You have specified more than 301 mappings at the MAP USERNAME keyword in the RDBI configuration file.
In this version of LIFESPAN RDBI the maximum number of mappings that should ever be specified is 301 i.e. one for every user specified at the USER ACCESS, MODULE ACCESS and DC ACCESS keywords and one for the Manager.
Edit the RDBI configuration file and ensure that mappings are only specified for LIFESPAN users listed at the USER ACCESS, MODULE ACCESS and DC ACCESS keywords.
Note that mappings can only be specified from one LIFESPAN user to one relational database user, or, from many LIFESPAN users to one relational database user.
MODULE ACCESS keyword not specified in configuration file 
A list of users who have to be granted access to module information must be specified in the RDBI configuration file.
These users are listed at the MODULE ACCESS keyword.
This keyword was found to be missing from the RDBI configuration file.
Note that this keyword must be included even if there are no users to be granted access.
Edit the RDBI configuration file to include a MODULE ACCESS keyword (and details of any users who have to be granted access to module information).
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Module Data not transferred due to a previous error 
No module data has been transferred because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
Module Details activity not started as TRANSFER SCHEDULE time expired 
The transfer of module data was not started as the transfer time allocated, in the RDBI configuration file, expired during or just after user details data transfer.
Re-run LIFESPAN RDBI.
If possible increase the amount of time allocated for the data transfer at the TRANSFER SCHEDULE keyword.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Module Details data not DELETED due to a previous error 
No module details data has been deleted because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
Module Details not transferred as TRANSFER SCHEDULE time expired 
This category of data was not transferred as the time allocated at the TRANSFER SCHEDULE keyword, in the RDBI configuration file, elapsed during the data transfer.
Re-run LIFESPAN RDBI and set the MODULE DETAILS transfer category to INCREMENTAL.
If possible increase the amount of time allocated for the data transfer at the TRANSFER SCHEDULE keyword.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Module details not transferred due to a previous error 
No module details data has been transferred because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
Module locations not transferred as TRANSFER SCHEDULE time expired 
This category of data was not transferred as the time allocated at the TRANSFER SCHEDULE keyword, in the RDBI configuration file, elapsed during the data transfer.
Re-run LIFESPAN RDBI and set the MODULE DETAILS transfer category to INCREMENTAL.
If possible increase the amount of time allocated for the data transfer at the TRANSFER SCHEDULE keyword.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Module locations not transferred due to a previous error 
No module location data has been transferred because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
Module names not transfered due to a previous error 
No charge code data has been transferred because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
Module specs. and relations not transferred as TRANSFER SCHEDULE time expired 
This category of data was not transferred as the time allocated at the TRANSFER SCHEDULE keyword, in the RDBI configuration file, elapsed during the data transfer.
Re-run LIFESPAN RDBI and set the MODULE DETAILS transfer category to INCREMENTAL.
If possible increase the amount of time allocated for the data transfer at the TRANSFER SCHEDULE keyword.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Module specs. and relations not transferred due to a previous error 
No module specification and relation data has been transferred because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
No DC DETAILS keyword in RDBI configuration file 
You have ommitted to specify a DC DETAILS keyword in the RDBI configuration file.
Edit the RDBI configuration file and include the keyword DC DETAILS.
Transfer mode should be either BULK, INCREMENTAL, INHIBIT or DELETE.
Transfer category should be either ASSESSMENTS or NOASSESSMENTS.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
No MODEL DETAILS keyword in RDBI configuration file 
You have omitted to specify a MODEL DETAILS keyword in the RDBI configuration file.
Edit the RDBI configuration file and include the keyword MODEL DETAILS.
Transfer mode should be either BULK, INCREMENTAL, INHIBIT or DELETE.
Details of this keyword can be found in Appendix C, ‘Configuration File Keyword’.
No MODULE DETAILS keyword found in configuration file 
You have ommitted to specify a MODULE DETAILS keyword in the RDBI configuration file.
Edit the RDBI configuration file and include the keyword MODULE DETAILS.
Transfer mode should be either BULK, INCREMENTAL, INHIBIT or DELETE.
Transfer category should be either ALL or ONLYAPPROVED.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
No RDBI configuration file specified in command line 
When running LIFESPAN RDBI two parameters MUST be specified on the command line i.e. the name of the RDBI configuration file, followed by the name of the batch queue from which LIFESPAN RDBI will run.
You have not included the name of the RDBI configuration file in the command line.
Re-run LIFESPAN RDBI and specify an RDBI configuration file.
Details of the LIFESPAN RDBI command line can be found in section 2, ‘Running LIFESPAN RDBI’.
ORACLE username/password not specified at SECURITY KEY keyword 
An ORACLE username and password has not been specified in the RDBI configuration file.
This is the ORACLE account which will be used to hold the transferred LIFESPAN data.
Edit the RDBI configuration file and include the name of an ORACLE account which has been created solely for the use of the RDBI transfer program.
Details of how this account should be created and used can be found in section 2, ‘ORACLE RDBMS’.
Process Model data not DELETED due to a previous error 
No process model data has been deleted because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
Process Model Data not transferred due to a previous error 
No process model data has been transferred because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
Process Model details activity not started as TRANSFER SCHEDULE time expired 
The transfer of module data was not started as the transfer time allocated in the RDBI configuration file, expired during or just after DC details data transfer.
Re-run LIFESPAN RDBI.
If possible increase the amount of time allocated for the data transfer at the TRANSFER SCHEDULE keyword.
Details of this keyword can be found in Appendix C, ‘Configuration File Kywords’.
Process Model details not transferred as TRANSFER SCHEDULE time expired 
This category of data was not transferred as the time allocated at the TRANSFER SCHEDULE keyword, in the RDBI configuration file, elapsed during the data transfer.
Re-run LIFESPAN RDBI and, if possible, increase the amount of time allocated for the data transfer at the TRANSFER SCHEDULE keyword.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Process Model State Data not transferred due to a previous eror 
No process model data has been transferred because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error and then re-run LIFESPAN RDBI.
SCHEMAID keyword not specified in configuration file 
You have ommitted to specify a SCHEMAID keyword in the RDBI configuration file.
Edit the RDBI configuration file and include the keyword SCHEMAID.
At this keyword you must specify the type of relational database your LIFESPAN database has to be transferred to i.e. RDB or ORACLE.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
SECURITY KEY keyword not specified in configuration file 
You have ommitted to specify a SECURITY KEY keyword in the RDBI configuration file.
Edit the RDBI configuration file and include the keyword SECURITY KEY.
At this keyword you must specify the username and password of the ORACLE account where your LIFESPAN database has to be transferred to.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Special Relation details not transferred as TRANSFER SCHEDULE time expired 
This category of data was not transferred as the time allocated at the TRANSFER SCHEDULE keyword, in the RDBI configuration file, elapsed during the data transfer.
Re-run LIFESPAN RDBI and set the USER DETAILS transfer category to INCREMENTAL.
If possible increase the amount of time allocated for the data transfer at the TRANSFER SCHEDULE keyword.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Special Relations not transferred due to a previous error 
No special relation data has been transferred because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
START TIME specified in RDBI config file should be later than current time 
You have attempted to schedule LIFESPAN RDBI to run at a time in the past.
Edit the RDBI configuration file and ensure that the start time specified, at the TRANSFER SCHEDULE keyword, is some time in the future.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
TRANSFER SCHEDULE keyword not specified in configuration file 
You have ommitted to specify a TRANSFER SCHEDULE keyword in the RDBI configuration file.
Edit the RDBI configuration file and include the keyword TRANSFER SCHEDULE.
At this keyword you must specify the time at which you wish LIFESPAN RDBI to run (start time), the amount of time you wish it to run for (duration), and the time at which you wish it to be re-scheduled (repeat time).
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
Unknown database identifier found in configuration file 
You have specified an unknown relational database type, in the RDBI configuration file, at the SCHEMAID keyword.
Edit the RDBI configuration file and ensure that the relational database type specified is either RDB or ORACLE.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
USER ACCESS keyword not specified in configuration file 
A list of users who have to be granted access to user information must be specified in the RDBI configuration file.
These users are listed at the USER ACCESS keyword.
This keyword was found to be missing from the RDBI configuration file.
Note that this keyword must be included even if there are no users to be granted access.
Edit the RDBI configuration file to include a USER ACCESS keyword (and details of any users who have to be granted access to user information).
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
User Data not transferred due to a previous error 
No user data has been transferred because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
User Details activity not started as TRANSFER SCHEDULE time expired 
The transfer of user data was not started as the transfer time allocated, in the RDBI configuration file, expired during LIFESPAN RDBI initialisation.
Re-run LIFESPAN RDBI.
If possible increase the amount of time allocated for the data transfer at the TRANSFER SCHEDULE keyword.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
User Details data not DELETED due to a previous error 
No user details data has been deleted because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
USER DETAILS keyword not specified in configuration file 
You have ommitted to specify a USER DETAILS keyword in the RDBI configuration file.
Edit the RDBI configuration file and include the keyword USER DETAILS.
Transfer mode should be either BULK, INCREMENTAL, INHIBIT or DELETE.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
User Details not transferred as TRANSFER SCHEDULE time expired 
This category of data was not transferred as the time allocated at the TRANSFER SCHEDULE keyword, in the RDBI configuration file, elapsed during the data transfer.
Re-run LIFESPAN RDBI and set the USER DETAILS transfer category to INCREMENTAL.
If possible increase the amount of time allocated for the data transfer at the TRANSFER SCHEDULE keyword.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
User Details not transferred due to a previous error 
No user details data has been transferred because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
User Names not transferred as TRANSFER SCHEDULE time expired 
This category of data was not transferred as the time allocated at the TRANSFER SCHEDULE keyword, in the RDBI configuration file, elapsed during the data transfer.
Re-run LIFESPAN RDBI and set the USER DETAILS transfer category to INCREMENTAL.
If possible increase the amount of time allocated for the data transfer at the TRANSFER SCHEDULE keyword.
Details of this keyword can be found in Appendix C, ‘Configuration File Keywords’.
User Names not transferred due to a previous error 
No user name data has been transferred because a fatal error has occurred in a previous area of LIFESPAN RDBI.
Correct the error reported and then re-run LIFESPAN RDBI.
WARNING — database accessed using NEWPASSWORD.
On first entering the ORACLE database (where password–NEWPASSWORD) LIFESPAN RDBI will change the password.
This password, known only to LIFESPAN RDBI, ensures that no unauthorised users have direct access to the database.
This warning message is output if the ORACLE database is accessed using NEWPASSWORD.
Ignore this warning the first time LIFESPAN RDBI is run.
If this message is output again it shows that someone has had direct access to the ORACLE database.
Warning — DC Requested users cannot be changed when activity is in delete mode 
You have changed the list of users specified at the DC ACCESS keyword in the RDBI configuration file.
This is not permitted when the DC DETAILS transfer mode is DELETE.
This warning message will be output until the DC DETAILS transfer mode is changed to BULK or INCREMENTAL, or until the list of users at the DC ACCESS keyword is returned to its previous state.
Warning — DC Requested users cannot be changed when activity is inhibited 
You have changed the list of users specified at the DC ACCESS keyword in the RDBI configuration file.
This is not permitted when the DC DETAILS transfer mode is INHIBIT.
This warning message will be output until the DC DETAILS transfer mode is changed to BULK or INCREMENTAL, or until the list of users at the DC ACCESS keyword is returned to its previous state.
Warning — MDET Requested users cannot be changed when activity is in delete mode 
You have changed the list of users specified at the MODULE ACCESS keyword in the RDBI configuration file.
This is not permitted when the MODULE DETAILS transfer mode is DELETE.
This warning message will be output until the MODULE DETAILS transfer mode is changed to BULK or INCREMENTAL, or until the list of users at the MODULE ACCESS keyword is returned to its previous state.
Warning — MDET Requested users cannot be changed when activity is inhibited 
You have changed the list of users specified at the MODULE ACCESS keyword in the RDBI configuration file.
This is not permitted when the MODULE DETAILS transfer mode is INHIBIT.
This warning message will be output until the MODULE DETAILS transfer mode is changed to BULK or INCREMENTAL, or until the list of users at the MODULE ACCESS keyword is returned to its previous state.
Warning — Udet Requested users cannot be changed when activity is in delete mode 
You have changed the list of users specified at the USER ACCESS keyword in the RDBI configuration file.
This is not permitted when the USER DETAILS transfer mode is DELETE.
This warning message will be output until the USER DETAILS transfer mode is changed to BULK or INCREMENTAL, or until the list of users at the USER ACCESS keyword is returned to its previous state.
Warning — Udet Requested users cannot be changed when activity is inhibited 
You have changed the list of users specified at the USER ACCESS keyword in the RDBI configuration file.
This is not permitted when the USER DETAILS transfer mode is INHIBIT.
This warning message will be output until the USER DETAILS transfer mode is changed to BULK or INCREMENTAL, or until the list of users at the USER ACCESS keyword is returned to its previous state.
CONFIGURATION FILE KEYWORDS
Introduction
The following keywords may be used in the RDBI configuration file:
(A) SECURITY_KEY
This keyword is only required when your relational database is ORACLE.
It has two parameters, firstly the user name that LIFESPAN RDBI will use to access ORACLE;(refer to section 2, ‘Setting up your Relational Database’), secondly a security key to prevent unauthorised access to ORACLE.
A random set of characters should be chosen for this key.
Both keys are free text with a maximum of 20 characters each.
(B) LSCONFIGURATIONFILE
The full file specification of the configuration file for the LIFESPAN system from which LIFESPAN RDBI will transfer information.
It is recommended the logical specified in RDBISETUP.COM be used.
The logical name chosen should contain no more than 28 characters.
(C) ERROR_LOG
Specifies the name of the file to which LIFESPAN RDBI will log its progress and report any errors.
It is created in the LIFESPAN process directory (i.e. where the 59.
FIL files reside) and may be listed to the screen, during LIFESPAN RDBI execution, to monitor data transfer progress.
An example is provided in Figure 2.2.
Errors which may be reported are described in Appendix B.
(D) SCHEMAID
This keyword is used to specify which relational database is to be used.
If ORACLE RDBMS is the target database then specify ‘ORACLE’(no other parameters are required).
If DEC Rdb/VMS is the target database then specify ‘RDB’ followed by the identity of the database ie ‘disk:[directory]databasename’(maximum of 58 characters).
Note a logical (or a concealed logical) should not be used.
An optional third RDB parameter is also available i.e. size (maximum of 8 digits with the unit of measurement–Kilobytes).
LIFESPAN RDBI checks to see if the database specified exists.
If it does not and the size parameter is specified then a DEC Rdb/VMS database will automatically be created by LIFESPAN RDBI.
Two thirds of the size parameter specified will be allocated to tablespace, with the other third allocated to index space.
Note that 512 bytes is equivalent to 1 block.
(E) TRANSFER_SCHEDULE
This keyword is used to control when LIFESPAN RDBI runs and for how long.
It has three parameters start time, duration and repeat time.
START TIME indicates the time the transfer run will begin.
It has the format DD-MMM-YYYY HH:MM, for example 10-MAY-1990 23:00.
DURATION indicates how long the transfer run may continue.
If it has not completed within this time, the transfer run will stop shortly after the transfer duration has expired.
The format for DURATION is DDDD HH.MM, for example 0001 00:00 gives a duration of 1 day.
REPEAT TIME is used to schedule LIFESPAN RDBI to run repeatedly at given time intervals, for example nightly or once a week.
The format of REPEAT TIME is DDDD HH:MM, for example 0001 00:00 means nightly and 0007 00:00 means weekly.
If a zero repeat time is given then LIFESPAN RDBI runs once only.
(F) USER_DETAILS
Specifies the transfer method to be used for transferring User Information, that is BULK, INCREMENTAL, INHIBIT or DELETE.
(G) USER_ACCESS
Lists the LIFESPAN users who wish to view User Information in the relational database.
A maximum of 10 users may be specified at each USER_ACCESS keyword.
The USER_ACCESS keyword may be repeated up to 10 times allowing specification of up to 100 users.
All others will be ignored.
The LIFESPAN Manager need not be specified — he is automatically given access.
Note that as the number of users specified at this keyword increases so does the USER DETAILS data transfer time and the response time of the USER DETAILS related views.
(H) MODULE_DETAILS
Specifies the transfer method to be used for transferring Module Information, that is BULK, INCREMENTAL, INHIBIT or DELETE.
A second keyword allows either ALL modules or ONLYAPPROVED to be transferred.
(I) MODULE_ACCESS
Lists the LIFESPAN users who wish to view Module Information in the relational database.
A maximum of 10 users may be specified at each MODULE_ACCESS keyword.
The MODULE_ACCESS keyword may be repeated up to 10 times allowing specification of up to 100 users.
All others will be ignored.
The LIFESPAN Manager need not be specified — he is automatically given access.
Note that as the number of users specified at this keyword increases so does the MODULE DETAILS data transfer time and the response time of the MODULE DETAILS related views.
(J) DC_DETAILS
Specifies the transfer method to be used for transferring Design Change Information, that is BULK, INCREMENTAL, INHIBIT or DELETE.
A second keyword, ASSESSMENTS or NOASSESSMENTS, dictates whether or not assessment data will be transferred.
i.e. whether the views DC_ASSESSORS and DC_ASS_MODS will reference any data.
(K) DC_ACCESS
Lists the LIFESPAN users who wish to view DC Information in the relational database.
A maximum of 10 users may be specified at each DC_ACCESS keyword.
The DC_ACCESS keyword may be repeated up to 10 times allowing specification of up to 100 users.
All others will be ignored.
The LIFESPAN Manager need not be specified — he is automatically given access.
Note that as the number of users specified at this keyword increases so does the DC DETAILS data transfer time and the response time of the DC DETAILS related views.
(L) MODEL_DETAILS
Specifies the transfer method to be used for transferring Process Model Information, that is BULK, INCREMENTAL, INHIBIT or DELETE.
(M) MAP_USERNAME
This keyword is used to specify the relational database identities of LIFESPAN users wishing to access transferred information.
These identities are known as the ‘mapped user names’.
A LIFESPAN user name should be specified followed by the user name which is to be used in the relational database i.e. the mapped ‘user name’.
If ORACLE is being used then users should not be mapped to the transfer account.
A third parameter is allowed and should be used if the target database is DEC Rdb/VMS and the VMS username is not comparable with its UIC. e.g. if the VMS username is RDBITEST and the associated UIC is [C2168, RDBITEST]then this parameter may be left blank.
However, if the UIC was [C2168, ABC]then this UIC should be specified as the third parameter.
This keyword may be duplicated 301 times for different LIFESPAN users.
The mapped user name of the LIFESPAN Manager plus each LIFESPAN user specified under keywords USER_ACCESS, MODULE_ACCESS and DC_ACCESS must be specified unless that name is the same as the LIFESPAN user name.
The latter is the default and assumed to be the case wherever a user name mapping does not exist.
Mapped user names must exist in the relational database prior to the operation of LIFESPAN RDBI.
This includes the default case where the LIFESPAN user name and mapped user name are the same.
If the required mapped user names do not exist, LIFESPAN RDBI will report an error.
(N) INDEX
This keyword may be used to add indexes to the relational database tables of LIFESPAN information and hence improve the performance of particular queries.
The INDEX keyword may be repeated up to 30 times.
LIFESPAN RDBI currently applies a number of indexes (hashed in DEC Rdb/VMS) to various tables in the database.
The indexes which have been applied are there to maximise the performance of the views provided by LIFESPAN RDBI.
The following SQL (for DEC Rdb/VMS) and SQL*PLUS (for ORACLE RDBMS) commands may be used to display details of these indexes:
If, however, you find you are regularly executing a query and the performance is not acceptable then it may be that the performance could be improved by applying additional indexes to the database.
For further information on database performance refer to references 12 and 13.
LIFESPAN RDBI OPERATIONAL RESTRICTIONS
DC Assessors
To obtain access to DC information users associated with a DC are put onto a list of ‘interested users’.
Interested users of a DC are the creator of a DC, any user who subsequently owns the DC, any user who is the manager of a module referenced by the DC, any user who is the manager of a package which references directly a module referenced by the DC, and any user asked to approve the package through which the DC was activated.
Upon submission of the DC, the current owner of the DC, managers of modules referenced by the DC, and managers of packages directly referencing modules referenced by the DC are asked to assess the DC.
This is a subset of the interested users list.
The interested users list within LIFESPAN corresponds to the list of assessors in the DC_ASSESSORS view in LIFESPAN RDBI.
A LIFESPAN RDBI view of a DC, its assessors, and their assessments, even when the DC is in the approved state, will therefore reveal a list of assessors who have not all assessed the DC.
Such users will have NOT ASSSESSED recorded in the ‘status’ column of the DC_ASSESSORS view.
This is completely consistent with LIFESPAN.
Deletion of Unused Module Names
Using the LIFESPAN utility Validate it is possible to delete unused module names.
Thereafter, the module name is unknown to LIFESPAN and any DC references to the module are no longer visible.
LIFESPAN RDBI however, currently has no ability to delete entries from its database tables.
Incremental transfers of data therefore do not reflect module name deletion.
The module names still appear in the module relations table and are still visible to users querying the LIFESPAN RDBI database.
Only by performing a complete MODULE DETAILS bulk data transfer are module name deletions reflected in the LIFESPAN RDBI database.
PREFACE
Purpose
This manual replaces R645/59 — Issue 1, and has been updated to take account of the revised User Interface for LIFESPAN.
This manual has three main objectives:
To explain in detail how a user begins work on LIFESPAN.
To explain the aspects of LIFESPAN which are common to all operations.
To explain how to use all the LIFESPAN facilities which are currently available.
audience
This manual is essential reference for all LIFESPAN users.
Manual Structure
The manual is broadly divided into two parts.
The first part (Sections 2 and 3) provides the basic information which every LIFESPAN user needs to know when accessing the system.
The second part (Sections 4 onwards) explains all the available facilities.
Each section is based on an option in the Master Level Index, shown in Section 4.
INTRODUCTION
All day-to-day work on LIFESPAN is carried out interactively with a Visual Display Unit (VDU).
This manual describes how to use the LIFESPAN User Interface, in terms of user input via the keyboard, and the information which is displayed on the VDU.
LIFESPAN uses a hierarchy of Options to carry out the required tasks, each option consisting of one or more Pages.
All of the currently available options are explained with examples of the pages as they appear to the user.
The ‘User's Guide to LIFESPAN’ explains how to perform the tasks supported by LIFESPAN, using combinations of the options described here.
You do not need to learn to use the whole of LIFESPAN before you start to use the system; LIFESPAN provides a comprehensive on-line help facility to keep you informed every step of the way.
Keep this manual by you when using LIFESPAN and refer to it for specific and detailed information on particular facilities 
COMMON FEATURES OF USER INTERFACE
Introduction
This section describes the features of the LIFESPAN User Interface which are common to all facilities.
These are:
Options, Indexes and Pages
The Help facility
Fields
LIFESPAN Special Function Keys
LIFESPAN Responses
LIFESPAN Mail
The LIFESPAN Cache facility
The Multi-Form Index facility.
Options, Indexes and Pages
Each facility, or Option,which can be accessed by the LIFESPAN User Interface is identified by means of an Option Number .
Each option consists of one or more Pages .
When you access LIFESPAN, you are presented with an Index,consisting of a set of logically related options, from which a selection may be made.
An example of an index page is shown in figure 2.1.
When an option number is entered, LIFESPAN displays the associated page.
The last two options on this index page are common to all index pages:
N — New Option This avoids the use of further index pages and takes you directly to the Option prompt, so that you can enter the number of the option you require.
E — Exit from LIFESPAN This is used when work on LIFESPAN is finished.
Control is returned to the VMS directory from which you accessed LIFESPAN.
In addition, all index pages (except the Master Level Index) have one more option in common :
0 — Previous Menu This returns you to the index page one level higher in the hierarchy of indexes.
One of these standard options (N, E, 0) appears as a default beside Your Option and is selected by pressing RETURN.
If it is not the one required, you should overtype it with the correct option number and press RETURN.
The aim of Index pages is to lead you easily and quickly to the option required, without needing to know, or remember, all the steps before starting.
The pages lead automatically from general areas of interest to specific LIFESPAN operations, depending on the sequence of options selected from each page.
Having selected an option, you are then presented with the first (or only) page of the option.
These are referred to hereafter as Display Pages.
An example of a display page is given in figure 2.2.
The page allows information to be entered and displayed on the screen.
All interaction with LIFESPAN is carried out via display pages.
Together, Indexes and display pages make up the LIFESPAN User Interface which covers all LIFESPAN activities.
Normally, the first step in any process is to select an option from an index page, and thereafter to request or provide information on display pages.
In addition, all pages contain standard information at the top as follows (see figure 2.2):
User name this is shown in the top left hand corner and displays the LIFESPAN user name of the current user (eg. MANAGER )
Option the option which is being selected (this changes when a new option is entered);(eg. 1.2.0 )
Halt the date and time of the next scheduled LIFESPAN shutdown (eg. 20-JUN-1990 11.29 ).
Node the host node name of the LIFESPAN process being accessed (eg. YGVX06 ).
Mail relating to the mail messages for the current user, the New figure shows the number of unread mail messages and the Old figure shows the number of mail messages which are still retained in LIFESPAN but which have already been printed or read by the user.
The LIFESPAN box, in the top centre of the page, shows the following:
Version the version of the currently running LIFESPAN process (eg. 07.00 ).
Process name the name of the LIFESPAN process being accessed.
In the above example, the process name is shown as OMEGA .
The Help Facility
Whenever you are in doubt about what to do next, what to enter, or do not understand what is being displayed on the page, more information can be obtained by pressing the Help key,(the PF2 key on the keypad).
The help facility is multi-level.
Initially, a simple message is displayed at the foot of the current page, but if this information is insufficient, more is available by pressing the Help key repeatedly until sufficient detail is displayed to solve any problems.
In some cases, whole pages of information are displayed, temporarily replacing the original page.
Fields
When a page is called up, the cursor is positioned in the first input field on the page, ie. where information may be entered.
For example, in figure 2.1 the cursor would be at the foot of the list of options and would require only one user input, but other pages may contain more fields and require more information.
In this case, the cursor can be moved between the fields over the page using the appropriate special function keys (TAB ,BACKSPACE etc).
An explanation of the available function keys and how these are used is given below and a summary is given in Appendix A.
Any invalid information which is entered into the fields causes an asterisk (*) to be displayed beside the field.
If you return to this field, an error message is displayed at the foot of the screen.
When all the necessary information has been supplied and any input errors corrected, the request can be sent to LIFESPAN by pressing the RETURN key.
Scrolled Areas
LIFESPAN makes use of special fields called Scrolled areas to allow you to view or update information which is best presented in a tabular form.
The scrolled area is actually a series of lines, each containing one or more fields.
The TAB and BACKSPACE keys can be used to move between fields and the UP ARROW and DOWN ARROW keys can be used to move between lines.
If there is more information than can be displayed on the page at any one time, the lines can be ‘scrolled’ up or down to access the hidden information.
Scrolled area indicators allow the user to determine, at a glance, if there are ‘hidden’ entries in a scrolled area; ie. entries which lie outside the display area.
The right hand edge of the box enclosing the scrolled area is used to display a ‘marker’ at this position.
Different markers are used to indicate:
the first entry of the data being scrolled,(the FIRST marker).
the last entry of the data being scrolled,(the LAST marker).
all other entries of the data being scrolled,(the DATA marker).
the last line of the scrolled area,(the MAX marker).
blank entries which lie between the last entry of the data being scrolled and the last line of the scrolled area,(the DEFAULT marker).
if there is only one entry in the data being scrolled, then the first and last entry markers described above are combined to form a single marker representing the two,(the SINGLE marker).
A diagram of the various scrolled area markers is shown in figure 2.3.
LIFESPAN Special Function Keys
All LIFESPAN operations are based on a series of pages containing fields of information.
In order to enter and edit information in these fields, and to move the cursor from field to field, certain special function keys are used.
In the following definitions Key 1/Key 2 means ‘press Key 1 and then press Key 2’.
TAB
This key moves the cursor forward to the next input field in the option (if one exists).
If you are on the last field of an option and you press TAB, an error message is reported at the foot of the page.
If the cursor is currently in a scrolled area, pressing TAB will move it to the next input field on the line within the scrolled area.
If it is pressed while on the last input field of a line, then the cursor will be moved to the first input field of the next line.
Furthermore, if it is pressed while on the last input field of the last line of a scrolled area, then it has the same effect as EXIT SCROLLED AREA FORWARDS , described below.
If a scrolled area is not full but can be extended to a given maximum, then pressing TAB from the last input field of a line containing an entry will reposition the cursor on the next (blank) line.
Repeatedly doing this will move the cursor through all of the blank lines until it reaches the maximum.
While on the last input field of this line, pressing TAB will enable you to leave the scrolled area.
BACKSPACE
This key moves the cursor backwards to the previous input field in the option (if one exists).
If you are on the first field of an option and you press BACKSPACE, an error message is reported at the foot of the page.
If the cursor is currently in a scrolled area, pressing BACKSPACE will move it to the previous input field on the line within the scrolled area.
If it is pressed while on the first input field of a line, then the cursor will be placed on the last input field of the previous line.
Furthermore, if it is pressed while on the first input field of the first line of a scrolled area, then it has the same effect as EXIT SCROLLED AREA BACKWARDS , described below.
RETURN or ENTER
This key indicates that you have completed input.
This causes LIFESPAN to check the contents of all fields.
If all mandatory fields have been completed and all completed fields contain valid entries, your request will be actioned.
Otherwise, the cursor will be placed at the first field which does not satisfy either of the above two conditions.
Up Arrow — the SCROLL UP key
This key moves the cursor upwards to the previous line of a scrolled area (if one exists).
This key is only applicable in scrolled areas.
Down Arrow — the SCROLL DOWN key
This key moves the cursor downwards to the next line of a scrolled area (if one exists).
This key is only applicable in scrolled areas.
PF1/Up Arrow — the EXIT SCROLLED AREA BACKWARDS key
This key moves the cursor backwards to the previous input field, exiting from the current scrolled area (only applicable when issued from within a scrolled area).
PF1/Down Arrow — the EXIT SCROLLED AREA FORWARDS key
This key moves the cursor forwards to the next input field, exiting from the current scrolled area (only applicable when issued from within a scrolled area).
PF2 — the HELP key
This key accesses the series of Help forms associated with the option.
It displays the help text for the current field, and, if the key is pressed again, it will display successive help pages for the current page.
PF1/1 — the BREAKOUT key
This key enables you to temporarily exit from a LIFESPAN option to access VMS.
The prompt LIFESPAN Breakout will appear at the top left-hand edge of the screen and to all intents and purposes this can be treated as if it were the DCL $ prompt.
You can produce a directory listing, move between directories, invoke PI routines, copy and edit files and so on as you would expect from the $ prompt.
You can even invoke another LIFESPAN session as another user.
When you wish to return to the LIFESPAN session from which you performed the breakout you should type ‘lo’ or ‘logout’.
This key is accessible from any field within any LIFESPAN user image option, including the index pages and option prompts.
PF1/2 — the CACHE key
This key displays the Cache form for user selection.
It is only valid if it is pressed while on a field which is used by the LIFESPAN cache facility (see below).
PF1/3 — the MULTI-FORM key
This key displays the Multi-Form Index page for the current option.
It allows you to select the next field to access (see below).
PF1/4 — the PRINT SCREEN key
This key requests that a copy of the currently displayed page be sent to a file called FORM.LST on the VMS directory from which you accessed LIFESPAN.
No confirmation appears on the screen.
If PF1/4 is pressed more than once during a single LIFESPAN log on session, all the requests will be directed to one copy of FORM.LST, which can then be printed after you have returned to VMS.
PF1/5 — the START AGAIN key
This key moves the cursor to the first field of the option.
PF1/6 — the ABORT key
This key enables you to exit immediately from the option, without performing any additional processing.
DELETE
This key deletes the last character typed in.
This key is invalid when the cursor is in the left-most character position of a field.
LINEFEED or Control J
This key deletes all characters in the field, regardless of the position of the cursor (except for those characters built into the field, called ‘field marker characters’).
This is useful for fields containing data such as passwords (which are not echoed to the screen for security reasons) where it is impossible to see if the field already contains characters.
Left Arrow
This key moves the cursor to the previous character position within a field (if there is one).
Right Arrow
This key moves the cursor to the next character position within a field (if there is one).
Control R or W
This key refreshes the screen.
The screen is cleared, and all fields currently marked as displayed are re-displayed.
The Control key must be held down while the R or W key on the keyboard is pressed.
PF1/DELETE
This key cancels a sequence started by pressing the PF1 key.
It allows the function to be typed again safely.
PF3 — the OVERSTRIKE key
This key overwrites the character at the cursor position.
PF1/PF3 — the INSERT key
When this key is pressed, instead of overtyping, the existing characters are moved to the right of the cursor.
A diagram, showing the various function keys is shown in figure 2.4.
LIFESPAN Responses
LIFESPAN always gives an immediate response to a user interaction, but not all the options are handled while the user sits at the terminal.
LIFESPAN determines which processes take place at the terminal and which are carried out as background activities, largely depending on the time they will take to complete.
Processes which are executed at the terminal include displaying the contents of a package, creating a Design Change and displaying information about users.
LIFESPAN responds to these on the screen.
If the user inputs syntactically invalid data, an asterisk (*) appears beside the field in error and an appropriate error message is displayed at the foot of the page when the field is revisited.
Scrolled areas alternatively contain error columns which are used to display input errors.
If any semantic errors are made, ie. when syntactically valid values have been input but the values are not acceptable to LIFESPAN in this situation, LIFESPAN responds with an error message.
Again, an asterisk (*) appears beside the field in error.
The user is then returned to the most likely field in error.
Background activities generally involve slower processes.
Started automatically, they free the terminal for other uses (e.g. compiling, editing), so that work is not held up and you can still use LIFESPAN interactively while they take place.
Background activities include transferring modules into and out of the LIFESPAN database.
Information about these processes does not disappear however, but is stored by the Mail System and can be displayed on the screen or sent to a file on the directory from which LIFESPAN is being accessed, to be read at a more convenient time.
LIFESPAN Mail
The Mail System provides four routine services:
Transfer of messages from LIFESPAN to a specific user.
Usually these are messages to notify the user that some background task has been completed, or has failed.
Transfer of messages from LIFESPAN to several users.
Usually an administrative service, e.g. notifying all interested parties that a Design Change is awaiting assessment.
Transfer of messages from one user to another.
Any LIFESPAN user can send a message to any other user (except himself).
Transfer of messages from LIFESPAN to the LIFESPAN Manager.
Usually messages that some regular housekeeping activity has been performed, or has failed.
Operation of the Mail System is wholly automatic and orientated towards the convenience of LIFESPAN users.
Mail messages are accumulated for each user and the number of currently held messages is shown at the top of each display page.
Each user, having inspected an item of mail, can elect to delete the message, retain it for later examination, or have it formatted to a file for printing.
The Mail System is fully described in Section 10.
The LIFESPAN Cache facility
It is helpful to users to be able to provide a means of storing a number of items representing certain LIFESPAN configuration types (eg. module names, DC identifiers, SPR identifiers, etc.) so that previously used items can be recalled.
This reduces the number of errors from mistyping, speeds up the operation of the user interface and provides a session memory.
The LIFESPAN cache provides this facility.
On entry to an option, all fields which have data items maintained by the cache are automatically initialised, using the most recent data held in the cache.
Each field may then be edited in the usual manner.
Cache can be accessed to select a previous input value by pressing the special function key PF1/2 , while on a field whose data type is cacheable.
Structure and contents of Cache
The cache is simply a store consisting of partitions for each data type to be cached.
Each partition contains space for a finite number of items which are added and deleted in a pre-defined order.
When an attempt is made to add an item which is already in the cache, the item is moved to the top of the cache.
When a partition becomes full, further additions to the partition causes an item to be deleted.
There are, in fact, three types of cache available:
A ‘General’ cache — containing items of data types which may be transferred from an invocation of one option to an invocation of a completely different option.
An example of this type of cache is used to transfer a ‘DC Identifier’ from use in option 2.1.2 — Update DC to use in option 2.7.1 — View One DC.
A ‘Local’ cache — containing items of data types which may be transferred only from one invocation of an option to another invocation of the same set of options.
An example of this type of cache is used to transfer a Filename from use in one invocation of option 1.5.2 — Prepare Package for Approval to another invocation of the same option.
A ‘Module Name’ cache — allowing access to the ‘General’cache for module names or visibility of all the module names known to the LIFESPAN database.
In both cases you are able to order the cache in first in first out order, alphabetically, or search the contents using wild cards.
A wild card search enables specification of both wild strings and characters.
Data types held in cache
The following data types are represented in the ‘General’ cache.
The number of instances of each type is fixed (currently 100).
MODULE NAME and MODULE TYPE
PACKAGE NAME
USER NAME
PRODUCT IDENTIFIER and PRODUCT TITLE
CLIENT IDENTIFIER, CLIENT TITLE and CONTACT NAME
SPR IDENTIFIER and SPR TITLE
SSR IDENTIFIER and SSR TITLE
DC IDENTIFIER and DC TITLE
ISSUE IDENTIFIER
CHARGE CODE
Note that some of these data types have other types associated with them eg. MODULE NAME and MODULE TYPE.
It is useful to include this extra information to fully define the item to be cached.
In these cases, the main type is referred to as the primary item and the type associated with it is referred to as the secondary item.
The following data types are represented in the ‘Local’ cache.
The appropriate user interaction option number is also shown
PACKAGE FILENAME (Option 1.1.1)
APPROVAL LISTINGS FILENAME (Option 1.5.2)
DC LISTINGS FILENAME (Option 2.6.1)
SPR LISTINGS FILENAME (Option 3.6.0 and associated sub-options).
SSR LISTINGS FILENAME (Option 4.6.0 and associated sub-options).
Method of addition and deletion of data items
As specified previously, items of any data type are added to and deleted from the associated partition of the cache in a pre-defined order.
This order is basically a First In First Out method with a simple modification.
When a new item is to be added to the partition, it is added at the top .
This is the entry which is accessed first when an item is to be read.
When a second or subsequent ‘instance’ of an item (one with the same value as an existing item) is to be added, the existing instance is moved from its current position to the top of the partition.
The items between the top of the partition and the gap formed by the moving of the instance are shuffled down in order to remove the gap.
When an item is to be added to a full partition, the item at the Bottom , ie. the item which was added first, is deleted and the rest of the items shuffled down so that room can be created for the new item at the top.
Storage and Retrieval of Cache
A logical name,LIFESPANCACHE,is used to allow cache to be stored and retrieved between sessions.
If you wish to make use of this facility, you should set up the logical name before invoking LIFESPAN (e.g. you could make the assignment within your login.com).
This logical name points to a file containing the cache to be pre-loaded on startup of the user image, and used subsequently to store your cache on normal completion of the session.
If the logical name is not defined or the file is in the wrong format, cache will not be retrieved or stored.
The format of the steering file is as follows:
Each keyword can be repeated up to 100 times, and appear in any order.
Any additional entries will cause earlier entries to be removed as normal.
If a secondary item is not specified (eg. an SPR Title), this value is space-filled and the value will be set up by the Cache facility when the data item is next accessed.
In this case, the vertical bars must still be specified.
The bars are not needed for cache types without an associated secondary item (eg. User Name).
The primary item will be checked to ensure that it is syntactically correct, but no checks will be made to ensure that it is semantically correct (ie. that the information exists in LIFESPAN).
It is your responsibility to ensure that the data is correct.
An example of the form associated with the Cache Indexing facility (except the module name cache) is shown in figure 2.5.
The scrolled area has an allowance for 100 entries containing details of each data item held in the cache partition associated with the current input field.
The scrolled area contains the following fields:
No This is an unique integer value which is used to identify a particular cached data item value (display only).
Cache type 68 characters representing a cache data type value (display only).
Note that the heading at the top of this column (ie. the cache type) will vary depending on the cache partition being accessed.
In figure 2.5 the cache type is Package Name .
Mark field for user input.
You can select the data type to be copied from cache in one of two ways:
using the up/down arrow keys to move to the required entry, entering any character (in the Mark field) and then pressing RETURN, or
pressing PF1/<down arrow> while in the scrolled area and then entering the required number at the prompt Data item no.
An example of the form associated with the module name cache is shown in figure 2.6.
The view selection prompt allows you to specify whether you wish to view the cache in the standard last used order (N ), alphabetically (A ) or perform a wild card search (W ) of the cache contents.
If the cache is to be viewed in last used order or alphabetically then the ‘General’ cache for module names is displayed in the same manner as used for other data types represented in the ‘General’cache.
If a wild card search is chosen however, then you are further prompted for the wild card search string, the search place; either the ‘General’ module name cache (C ) or the LIFESPAN database (L ), and a start string from which the search is to begin.
The start string is automatically populated with any alphanumeric characters preceding the wild characters.
The cache facility then returns module names which match the specified string in groups of 30.
You can select the module name to be copied from the scrolled area to the user image option field in the same ways as you would from the ‘General’ cache.
Wild strings are specified using the character * and wild characters specified using the character % .
If more than 30 module names match the wild card search string then you will have to reinvoke the cache with the start string set to that of the 30th module name if you wish to view the other module names.
The Multi-Form Index facility
For cases where an option handles a large amount of information, an index form, showing the names of all fields which are handled by the option can be used to help you through the option.
This form indicates the next field to be processed, all fields which have been accessed and all fields which are mandatory (and therefore require to be accessed).
The facility is available for all options, and is particularly useful for options which extend over two or more pages.
You may invoke this index form by pressing PF1/3 , the Multi-Form key.
This will display the relevant information as illustrated in figure 2.6.
You can select the required field name from the form, if this is different from the current value, by inputting an appropriate field number.
On exit from the form, the field number will be used to select the next field.
The scrolled area has an allowance for 100 entries containing details of each field on the form currently being processed.
The scrolled area contains the following fields:
Field No — a unique integer value which is used to identify a particular field (display only).
Field Name — 40 characters representing the name of the field (display only).
This may be blank if the field has no corresponding name.
M (Mandatory /Optional)— Y is displayed if the field no. is Mandatory.
N otherwise (display only).
C (Contains)— VAL is displayed if the field no. contains valid data.
INV is displayed if the field no. contains invalid data.
The entry will be blank if the field no. contains no data (display only).
Mark — field for user input.
Error — error field (display only).
You can select the next field to process in one of two ways:
using the up and down arrow keys to move to the required entry, entering any character (in the Mark field) and then pressing RETURN, or
pressing PF1/<down arrow> while in the scrolled area and then entering the required number at the prompt Which field .
USING LIFESPAN
When LIFESPAN is installed, there is only one user: the LIFESPAN Manager, whose user name is MANAGER.
He has the maximum privileges over the system as a whole, including creating new users.
Users who have the appropriate privilege may then create other new users, forming a hierarchical User Tree.
Every user of LIFESPAN must log on to the system via a unique user name and password, allocated in this way.
This hierarchy lies at the heart of all LIFESPAN facilities, as it is the status of the users and the privileges they have which determines the level of activity they are allowed to pursue.
For example, to have automatic access to a module, the user must be a relation of the module's manager (the person who created the module) or owner.
Relations can be defined as either parents — anyone above the user in the family, or descendants — anyone below the user in the family tree.
Relations are all on the same, single, branch of a tree.
Before accessing LIFESPAN, all prospective users should contact the LIFESPAN Manager.
The Manager will either create the new user himself, or refer to another user with the privilege to ‘create user’.
The latter case is more likely if the new user is to be working as part of a team, since the team leader will probably have the privilege to create users according to the needs of the project.
The facilities available for creating users and allocating privileges are described fully in Section 11 of this manual.
One more important aspect of using LIFESPAN which should be explained at the outset is that every module must have a charge code associated with it.
When LIFESPAN is installed, the LIFESPAN Manager sets up a series of charge codes to be used for holding modules in related sets.
This means that all users must know which charge codes to use when they start to create new modules so that their modules can be stored against the correct charge code for their project.
Again, new users should ask the LIFESPAN Manager in the first instance about the charge codes, although he may have allocated responsibility for groups of codes to project leaders.
The charge code system is also described in Section 11.
Logging On
One of the fundamental aspects of LIFESPAN is that it can be accessed at any time from any directory to which you have access.
For each project, for example, LIFESPAN can be used from the directory which contains the relevant modules to be entered into LIFESPAN.
Similarly, when transferring modules out of LIFESPAN, they can be copied directly into your working directory.
Invoking LIFESPAN
When logged on to VMS, you may obtain details of how to access LIFESPAN by typing ‘HELP LIFESPAN’.
Usually LIFESPAN can be called up by typing one word, as set up by the LIFESPAN Manager, and details are given by the Help facility.
Networking
LIFESPAN can be accessed across a network from authorised remote nodes; ie. a user on one machine can access LIFESPAN on another machine and use the full range of available options.
The LIFESPAN Manager will confirm whether a node is authorised or not.
The only noticeable difference when using LIFESPAN across a network is the creation of the additional file, 000_LIFESPAN.FTAF, in your SYS$LOGIN directory.
You must not delete this file.
Log On Page
Once LIFESPAN has been accessed, the first LIFESPAN page to be displayed is the LIFESPAN Log On Page, shown in figure 3.1.
The LIFESPAN user name and password which have been allocated for the work about to be done must now be entered.
The TAB key must be pressed after typing the user name to move to the password field.
After the password is entered (it does not appear on the screen for security reasons), the ENTER (or RETURN)key should be pressed to indicate completion of the Log On page.
When the user name and password have been entered correctly, LIFESPAN displays the message ‘Successful Logon’, and the cursor moves to the Option field at the top of the screen.
Refer to figure 3.2.
Should the log on attempt fail, the best course of action is to check the user name, delete the password using the LINEFEED key, and re-enter the password.
If several unsuccessful attempts have been made, the LIFESPAN Manager or immediate parent should be consulted to discover if your user name has in fact been created, or to modify the password if necessary.
If too many users attempt to access LIFESPAN at once, it will not be possible to log on, and a Transaction Failure message will appear.
Another attempt should be made later.
Starting Work
After a successful logon, the cursor will be positioned in the top left hand corner of the page, beside Option .
There are now two courses of action open to you:
Press the RETURN key, or
Enter an option number.
Pressing Return
By pressing the RETURN key here, the first LIFESPAN index page will appear, listing the major LIFESPAN facilities.
This page, called the Master Level Index,is the subject of the next section.
All the facilities available in LIFESPAN can be accessed by selecting an option starting from the list on the Master Level Index.
Entering an Option Number
When you become familiar with the LIFESPAN system, specific options can be accessed directly by entering the required 2 or 3 digit option number, without the need to select options from a series of index pages.
If the wrong option has been selected, the current option can be aborted by pressing the ABORT key.
Logging Off
When work on LIFESPAN is finished, logging off takes place by selecting option E from any index page or from the Option prompt.
This restores control to VMS.
Transaction Failures
If a failure occurs while using LIFESPAN, the current displayed page is temporarily replaced by a Transaction Failure page which describes the fault and indicates what action to take (usually to log off or consult the LIFESPAN Manager).
A list of ‘Transaction Failures’ and their remedies is given in Appendix E. 
MASTER LEVEL INDEX
The Master Level Index, shown in figure 4.1, is the main entry point to the facilities of the LIFESPAN system.
The interfaces to these facilities stem from the options listed on this index page.
The rest of this manual is structured so that a section is devoted to each of these main options in turn, providing examples of all the currently available LIFESPAN facilities.
MODULE MANAGEMENT AND QUALITY ASSURANCE
Introduction
Module Management and Quality Assurance is Option 1 of the Master Level Index.
It provides a range of facilities concerning the day-to-day handling of modules, such as reserving module names and transferring modules into and out of LIFESPAN.
All these facilities are accessed from the index page shown in figure 5.1.
1.1.0
Reserve Module Names
Summary
This index enables you to select either the option to reserve a package or product name or alternatively reserve up to 29 source, foreign or pmodel names.
An example of this index page is shown in figure 5.2.
All module names must be unique throughout LIFESPAN and must be known to LIFESPAN before you can use them.
Before a module can be entered into LIFESPAN, its name must be reserved (to avoid module name conflicts with other users) and the resulting Design Change activated via the package through which the work will be carried out (using option 2.4.0 — Activate DCs).
1.1.1
Create Package /Product
Summary
This option allows you to reserve a package or product name in LIFESPAN.
All module names must be unique throughout LIFESPAN and must be known to LIFESPAN before they can be used.
An example of this option is shown in figure 5.3.
You will automatically become the manager of the module created.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option but you must either be the user associated with the charge code or an ascendant or descendant of that user.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Module owner (Mandatory Input Field)
This will initially be displayed as your LIFESPAN user name.
If you are not to be the owner of the module, the user name can be changed.
In this case, the new name must be that of an existing user, and the new module owner must be related to you (as the module manager).
The module owner can be up to 28 alphanumeric characters long, including spaces.
Charge code (Mandatory Input Field)
A Charge Code in LIFESPAN corresponds to a directory in VMS.
It is used to store all modules entered (under that Charge Code) into LIFESPAN.
The Charge Code must already have been set up by the LIFESPAN Manager.
In addition, the module owner must be related to the person responsible for the Charge Code.
The Charge Code is a number up to four digits long.
For further information on Charge Codes, refer to Section 11 of this manual.
Existence (Optional Input Field)
The existence string should be used to provide a brief reason why the module name is being reserved and to give an indication of what the module contains at present or is meant to contain in the future.
It is replaced with the module title each time the module is entered into LIFESPAN.
The existence string can be up to 52 printing characters long.
Module name (Mandatory Input Field)
The unique name selected for the module.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
The name may be typed in lower case, but LIFESPAN will convert all letters to upper case and will suppress all space characters.
Filename (Mandatory Input Field)
This is the name used each time the package module is transferred to and from the user's directory.
The filename must be a valid VMS filename, up to 64 characters long.
Package (Y/N)(Mandatory Input Field)
This indicates whether the module name is to be reserved as a Package (enter Y ) or as a Product (enter N ).
Product modules are used for packages destined for issue as a Product .
For further information on Issues and Products, refer to Section 9 of this manual.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to reserve the module name, and press the RETURN key.
If the operation is successful, LIFESPAN will create a skeleton package module, which is basically a module header with an issue number of 00.00Z.
LIFESPAN will automatically create a unique Design Change (DC) in the Agreed state, referencing the package name reserved.
The DC identifier will be displayed on the screen and careful note should be taken of it.
To obtain authority to change the newly reserved name, option 2.4.0 — Activate DCs should now be selected to activate the DC through this package.
For further information on the DC system, refer to Section 6 of this manual.
A Part Number equal to the package name is automatically assigned to the package.
The part number, like the module name, must be unique and therefore an error will be indicated if you try to reserve a package name equal to a part number which already exists.
Source, Foreign and Pmodel module names can be reserved using option 1.1.3.
Do you wish to retain this data (Y/N)(Mandatory Input Field)
If you wish to retain the current data and create another package/product with minor changes to the input, enter Y and press the RETURN key.
1.1.3
Reserve Source, Foreign And Pmodel Modules
Summary
This option allows you to reserve up to 29 Source, Foreign or Pmodel modules names at any one time.
All module names must be unique throughout LIFESPAN and must be known to LIFESPAN before they can be used.
An example of this option is shown in figure 5.4.
You will automatically become the manager of all the modules reserved.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option but you must either be the user associated with the charge code or an ascendant or descendant of that user.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Module owner (Mandatory Input Field)
This will initially be displayed as your LIFESPAN user name.
If you are not to be the owner of the module, the user name can be changed.
In this case, the new name must be that of an existing user, and the new module owner must be related to you (as the module manager).
The module owner can be up to 28 alphanumeric characters long, including spaces.
Charge code (Mandatory Input Field)
A Charge Code in LIFESPAN corresponds to a directory in VMS.
It is used to store all modules entered (under that Charge Code) into LIFESPAN.
The Charge Code must already have been set up by the LIFESPAN Manager.
In addition, the module owner must be related to the person responsible for the Charge Code.
The Charge Code is a number up to four digits long.
For further information on Charge Codes, refer to Section 11 of this manual.
Existence (Optional Input Field)
The existence string should be used to provide a brief reason why the module names are being reserved and to give an indication of what the modules contain at present or are meant to contain in the future.
It is replaced with the respective module titles each time the modules are entered into LIFESPAN.
The existence string can be up to 52 printing characters long.
The existence string will apply to each name reserved.
Scrolled area (Mandatory Input Field)
The scrolled area allows you to input the new module names and their corresponding type.
For every module name entered, the module type must be specified.
Only 7 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access the remaining lines.
Up to 29 lines can be accessed.
Module name (Mandatory Input Field)
This column enables you to specify the unique names selected for the modules you wish to reserve.
Each module name can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
The name may be typed in lower case, but LIFESPAN will convert all letters to upper case and will suppress all space characters.
Type (Mandatory Input Field)
This column enables you to specify the module type for the new name you wish to reserve.
The module type must be entered as one of the following characters:
S Source
F Foreign
M Pmodel
Errors (Display Field)
An error code will be displayed in this column if any invalid information has been entered and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to reserve the modules names, and press the RETURN key.
LIFESPAN will automatically create a unique Design Change (DC) in the Agreed state, referencing the module names reserved.
The DC identifier will be displayed on the screen and careful note should be taken of it.
To obtain authority to change the newly reserved names, option 2.4.0 — Activate DCs should now be selected to activate the DC via the package through which the work will be carried out.
For further information on the DC system, refer to Section 6.
A Part Number equal to the module name is automatically assigned for each module name reserved.
The part number, like the module name, must be unique and therefore an error will be indicated if you try to reserve a module name equal to a part number which already exists.
Package and Product module names can be reserved using option 1.1.1.
Do you wish to retain this data (Y/N)(Mandatory Input Field)
If you wish to retain the current data and reserve additional Source or Foreign module names with minor changes to the input, enter Y and press the RETURN key.
1.2.0
Display Contents Of A Package
Summary
This option enables you to display the contents of a package within LIFESPAN.
An example of this option is shown in figure 5.5.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but in order to prevent unauthorised access to package details, LIFESPAN will only display the information if the current user:
is the owner or manager of the package, or is a relative of the package's owner or manager (parent or descendant).
has been granted a special access to the package by the owner or manager of the package (refer to Section 11).
has supplied the password, either now or at any time since it was last changed, or the package has no password.
Once a valid password is supplied, you will gain automatic access to that module without having to supply the password again until such time as the password is changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Package name (Mandatory Input Field)
The name of the package to be displayed.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
Issue (Optional Input Field)
The version of the package to be displayed.
This can be an actual issue number (eg. 01.01A) or one of the following characters:
P Preferred — generally the version of the package which the module manager recommends for use.
This is generally the latest fully tested version, but not necessarily the latest version.
L Latest — the latest available version of this package.
This version is normally only used by the person developing the package, as it may be untested.
If this field is left blank, the selection will default to Latest.
Password (Optional Input Field)
The password for this package must be provided if none of the criteria for privileged access are met.
If a password is required, you need only ever provide it once, since LIFESPAN keeps track of which users have supplied the password for a specific module.
However, if the module's manager changes its password at a later date, this information is cancelled.
The module password can be up to 8 printing characters long and for security reasons, the input will not be echoed to the screen.
If the above information is accepted by LIFESPAN, your relation to the manager of the package will be displayed beside ‘Acc rights’, and the details of the package will be displayed in the scrolled area.
Acc rights (Display Field)
The Access connections are defined as: PARENT, OFFSPRING, MANAGER, PASSWORD, SPEC ACC, OWNER, NO ACCESS.
The Access connections are described fully in Appendix F.
Scrolled area (Display Field)
The scrolled area gives details of all the modules contained in the package.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
All the modules contained in a package can be displayed, up to a maximum of 30.
The Module Name and Issue fields are self explanatory.
The other columns are:
Selection (Display Field)
This column shows how the package selects the module; i.e. PREFERRED, LATEST, or SELECTED.
If the module is not the latest known to LIFESPAN, an asterisk (*) will be displayed against its entry, and a warning output at the foot of the page.
User Access (Display Field)
This column shows whether you have access to the module; i.e. YES or NO.
Although you may have access to the package module, this does not necessarily imply automatic access to all the modules contained in the package.
Type (Display Field)
This column shows the module type; i.e. PACKAGE, SOURCE, FOREIGN, or PMODEL.
Loc (Display Field)
This column shows whether this module is available immediately on line (ON LINE) or only exists in off line storage (OFFLINE).
If NOISSUE is displayed, this means that the package is selecting a non-existent version of that module.
If HARDCPY is displayed, this means that the magnetic version of the module has been deleted; i.e. the module version is only available in hard copy.
If a module is offline, you may request it to be brought back online by generating a request to read it from LIFESPAN using one of the options in index 1.3.0 — Read or Enter Modules.
To exit from this page, press the RETURN key.
1.3.0
Read Or Enter Modules
Summary
This index page provides the facilities for transferring modules from LIFESPAN to the current user's directory for examination or modification, and for online editing of packages or source, foreign and pmodel module headers.
It is also used to transfer modules back into LIFESPAN.
Modules may be read via a package in two ways; by reading out an entire package with all its constituent modules, or by specifying individual modules and packages within a named package.
Or modules may be read individually and automatiaclly updated to a new version.
An example of this index page is shown in figure 5.6.
1.3.1
Read Complete Package
Summary
This option enables you to read an entire package from LIFESPAN into your current VMS directory.
Provided you have access to all of the modules contained in the package, each constituent module is transferred automatically without the need to select each one individually.
Option 1.3.2 — Read/Enter Modules or option 1.3.4 — Edit Package Contents however, must always be used to enter modules into LIFESPAN.
An example of this option is shown in figure 5.7.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but in order to prevent unauthorised access to package details, LIFESPAN will only display the information if the current user:
is the owner or manager of the package, or is a relative of the package's owner or manager (parent or descendant).
has been granted a special access to the package by the owner or manager of the package (refer to Section 11).
has supplied the password, either now or at any time since it was last changed, or the package has no password.
Once a valid password is supplied, you will gain automatic access to that module without having to supply the password again until such time as the password is changed.
Note, if you attempt to use option 1.3.1 to read out a package containing a module which is HARDCPY (hard copy only available), or NOISSUE (no issue) or to which you have no access, an error message will be displayed and option 1.3.2, 1.3.3, 1.3.4 or 1.3.5 must be used to selectively read out the modules in the package which are available.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Package name (Mandatory Input Field)
The name of the package to be read out.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
Issue (Optional Input Field)
The version of the package to be read out.
This can be an actual issue number (eg. 01.01A) or one of the following characters:
P Preferred — generally the version of the package which the module manager recommends for use.
This is generally the latest fully tested version, but not necessarily the latest version.
L Latest — the latest available version of this package.
This version is normally only used by the person developing the package, as it may be untested.
If this field is left blank, the selection will default to Latest.
Password (Optional Input Field)
The password for this package must be provided if none of the criteria for privileged access are met.
If a password is required, you need only ever provide it once, since LIFESPAN keeps track of which users have supplied the password for a specific module.
However, if the module's manager changes its password at a later date, this information is cancelled.
The module password can be up to 8 printing characters long and for security reasons, the input will not be echoed to the screen.
If the above information is accepted by LIFESPAN, your relation to the manager of the package will be displayed beside ‘Acc rights’, and the details of the package will be displayed in the scrolled area.
Acc rights (Display Field)
The Access connections are defined as: PARENT, OFFSPRING, MANAGER, PASSWORD, SPEC ACC, OWNER, NO ACCESS.
The Access connections are described fully in Appendix F.
Scrolled area (Display Field)
The scrolled area gives details of all the modules contained in the package.
Only 7 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
All the modules contained in a package can be displayed, up to a maximum of 30.
The Module Name and Issue fields are self explanatory.
The other columns are:
Selection (Display Field)
This column shows how the package selects the module; i.e. PREFERRED, LATEST, or SELECTED.
If the module is not the latest known to LIFESPAN, an asterisk (*) will be displayed against its entry, and a warning output at the foot of the page.
U Acc (Display Field)
This column shows whether you have access to the module; i.e. YES or NO.
Although you may have access to the package module, this does not necessarily imply automatic access to all the modules contained in the package.
Type (Display Field)
This column shows the module type; i.e. PACKAGE, SOURCE, FOREIGN, or PMODEL.
Loc (Display Field)
This column shows whether this module is available immediately on line (ON LINE) or only exists in off line storage (OFFLINE).
If NOISSUE is displayed, this means that the package is selecting a non-existent version of that module.
If HARDCPY is displayed, this means that the magnetic version of the module has been deleted; i.e. the module version is only available in hard copy.
Errors (Display Field)
An error code will be displayed in this column if any invalid information has been entered and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
Option 1.3.2 or 1.3.3 may be used to selectively read out the modules that are not in error.
Are you sure (Y/N)(Mandatory Input Field)
If the details are correct and you wish to read the package out, enter Y at this prompt, and press the RETURN key.
If the operation is successful, LIFESPAN will display the identifier of a mail message which should be viewed to determine the outcome of the requested module transfer.
The Mail System is fully described in Section 10 of this manual.
If any modules are offline, the time to the next scheduled online/offline run will be displayed and all modules will only be read out when the offline modules within the package come back online.
1.3.2
Read/Enter Individual Modules
Summary
This option is used to transfer specific modules into and out of LIFESPAN.
An example of this option is shown in figure 5.8.
If the module being read is a FOREIGN module, it should be noted that this results in the header file plus all the files defined in the module being transferred from LIFESPAN to the user's directory.
When entering a FOREIGN module, all the files in the FOREIGN set will be transferred to LIFESPAN, and so must all be on the user's directory.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but in order to prevent unauthorised access to package details, LIFESPAN will only display the information if the current user:
is the owner or manager of the package, or is a relative of the package's owner or manager (parent or descendant).
has been granted a special access to the package by the owner or manager of the package (refer to Section 11).
has supplied the password, either now or at any time since it was last changed, or the package has no password.
Once a valid password is supplied, you will gain automatic access to that module without having to supply the password again until such time as the password is changed.
Note that modules can only be entered into LIFESPAN if a Design Change (DC) is currently Active on the package to which they belong.
They may also only be entered by the user who is currently associated with the DC.
For further information on the Design Change System, refer to Section 6 of this manual.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Package name (Mandatory Input Field)
The name of the package to be used for the operation.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
Issue (Optional Input Field)
The version of the package to be used for the operation.
This can be an actual issue number (eg. 01.01A) or one of the following characters:
P Preferred — generally the version of the package which the module manager recommends for use.
This is generally the latest fully tested version, but not necessarily the latest version.
L Latest — the latest available version of this package.
This version is normally only used by the person developing the package, as it may be untested.
If this field is left blank, the selection will default to Latest.
Password (Optional Input Field)
The password for this package must be provided if none of the criteria for privileged access are met.
If a password is required, you need only ever provide it once, since LIFESPAN keeps track of which users have supplied the password for a specific module.
However, if the module's manager changes its password at a later date, this information is cancelled.
The module password can be up to 8 printing characters long and for security reasons, the input will not be echoed to the screen.
If the above information is accepted by LIFESPAN, your relation to the manager of the package will be displayed beside ‘Acc rights’, and the details of the package will be displayed in the scrolled area.
Acc rights (Display Field)
The Access connections are defined as: PARENT, OFFSPRING, MANAGER, PASSWORD, SPEC ACC, OWNER, NO ACCESS.
The Access connections are described fully in Appendix F.
Scrolled area (Input Field)
The scrolled area gives details of all the modules contained in the package.
Only 7 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
All the modules contained in a package can be displayed, up to a maximum of 30.
The Module Name and Issue fields are self explanatory.
The other columns are:
Sel (Display Field)
This column shows how the package selects the module, using one of the characters:S — SELECTED;L — LATEST; or P — PREFERRED.
If the module is not the latest known to LIFESPAN, an asterisk (*) will be displayed against its entry, and a warning output at the foot of the page.
U Acc (Display Field)
This column shows whether you have access to the module; i.e. YES or NO.
Although you may have access to the package module, this does not necessarily imply automatic access to all the modules contained in the package.
Type (Display Field)
This column shows the module type using one of the characters:
P — Package;S — Source;F — Foreign;M — Pmodel.
Loc (Display Field)
This column shows whether the module is available immediately on line (ON) or only exists in off line storage (OFF).
If NIS is displayed, this means that the package is selecting a non-existent version of that module.
If HCO is displayed, this means that the magnetic version of the module has been deleted; i.e. the module version is only available in hard copy.
Mark (Optional Input Field)
This column is used to indicate which modules are to be transferred.
Using the up and down arrow keys, an ‘R’ or ‘E’may be entered against any modules to be Read or Entered, where:
R reads modules from LIFESPAN to your current directory.
E enters modules into LIFESPAN from your current directory.
A space filled mark indicates that the module is to be ignored.
Note, it is not possible to read some modules and enter others at the same time.
Once an R or E has been entered, the same letter must be entered for all other modules to be transferred.
Password (Optional Input Field)
A password must be supplied if you do not have automatic access to the module.
If a password is required, you need only ever provide it once, since LIFESPAN keeps track of which users have supplied the password for a specific module.
However, if the module's manager changes its password at a later date, this information is cancelled.
The module password can be up to 8 printing characters long and for security reasons, the input will not be echoed to the screen.
Errors (Display Field)
This column indicates any errors against the relevant modules; for example, modules failing to scan, or a password not supplied.
For all errors apart from SCAN, the necessary corrections must be made to the Mark and Password fields; e.g. providing passwords, correcting passwords, changing R to E, or leaving a space.
If SCAN is displayed, the transfer cannot continue until the errors have been corrected in the module.
You can correct the errors in the specified input file using the LIFESPAN Breakout facility which can be accessed by pressing PF1/1 — the Breakout key; the use of this key is fully described in Section 2.
When you leave the breakout facility, LIFESPAN will display the original page once again, exactly as it was before, regardless of whether or not you have corrected the error.
Another attempt can then be made to re-enter the module again as described above.
Are you sure (Y/N)(Mandatory Input Field)
If the details are correct and you wish to proceed with the transfer of modules, enter Y at this prompt, and press the RETURN key.
If the operation is successful, LIFESPAN will display the identifier of a mail message which should be viewed to determine the outcome of the requested module transfer.
The Mail System is fully described in Section 10 of this manual.
If any modules being read out are offline, the time to the next scheduled online/offline run will be displayed and all selected modules will only be read out when the offline modules within the package come back online.
1.3.3
Read From Root Package
Summary
This option enables you to read an entire package structure from LIFESPAN into any VMS directory (you may specify a different directory for each package in the structure, if you wish).
As with option 1.3.2, if any module being read out is of type FOREIGN, the header file and all files defined in the FOREIGN set of the module will be transferred to the designated user directory.
An example of the first page of this option is shown on figure 5.9.
This option consists of two pages:
Read From Root Package — Current Package Contents
Read From Root Package — Display Ancestry.
When you first select this option, the Read From Root Package — Current Package Contents page will be displayed.
This page allows you to specify a root package name, issue number and password (if required), to be used for the read out.
If these are valid and you have access to the package, the modules contained in this package will be displayed in the scrolled area.
You can then mark the modules to be read out or the sub-packages to be considered for further processing, or both, confirm the request and press RETURN.
This process will be repeated for each package in the structure, starting at the root package specified and proceeding in a ‘depth first’ manner.
To determine the position of the current package in the structure, you can press the TAB key on the ‘Are you sure’ field, and a list of the ancestors of the current package will then be displayed.
An example of this page is shown in figure 5.10.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but in order to prevent unauthorised access to package details, LIFESPAN will only display the information if the current user:
is the owner or manager of the package, or is a relative of the package's owner or manager (parent or descendant).
has been granted a special access to the package by the owner or manager of the package (refer to Section 11).
has supplied the password, either now or at any time since it was last changed, or the package has no password.
Once a valid password is supplied, you will gain automatic access to that module without having to supply the password again until such time as the password is changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Package name (Mandatory Input Field)
The name of the package to be used for the operation.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
Issue (Optional Input Field)
The version of the package to be used for the operation.
This can be an actual issue number (eg. 01.01A) or one of the following characters:
P Preferred — generally the version of the package which the module manager recommends for use.
This is generally the latest fully tested version, but not necessarily the latest version.
L Latest — the latest available version of this package.
This version is normally only used by the person developing the package, as it may be untested.
If this field is left blank, the selection will default to Latest.
Password (Optional Input Field)
The password for this package must be provided if none of the criteria for privileged access are met.
If a password is required, you need only ever provide it once, since LIFESPAN keeps track of which users have supplied the password for a specific module.
However, if the module's manager changes its password at a later date, this information is cancelled.
The module password can be up to 8 printing characters long and for security reasons, the input will not be echoed to the screen.
If the above information is accepted by LIFESPAN, your relation to the manager of the package will be displayed beside ‘Acc rights’, your current directory will be displayed under ‘Destination account’ and the details of the package will be displayed in the scrolled area.
Acc rights (Display Field)
The Access connections are defined as: PARENT, OFFSPRING, MANAGER, PASSWORD, SPEC ACC, OWNER, NO ACCESS.
The Access connections are described fully in Appendix F.
Destination Account (Optional Input/Display Field)
The directory to which the modules will be transferred.
On selecting and leaving this option, this field will default to the directory from which you have invoked LIFESPAN.
You can change this field to be any directory to which you have access and which has sufficient quota to accommodate the modules subsequently marked for transfer.
If this field is left blank, the Destination Account will default to the current directory.
You should use the PF1/<Up Arrow> and TAB keys to move between the Destination Account field and the scrolled area.
Scrolled area (Optional Input/Display Field)
The scrolled area gives details of all the modules contained in the package.
Only 5 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
All the modules contained in a package can be displayed, up to a maximum of 30.
The Module Name and Issue fields are self explanatory.
The other columns are:
Sel (Display Field)
This column shows how the package selects the module, using one of the characters:S — SELECTED;L — LATEST; or P — PREFERRED.
If the module is not the latest known to LIFESPAN, an asterisk (*) will be displayed against its entry, and a warning output at the foot of the page.
U Acc (Display Field)
This column shows whether you have access to the module; i.e. YES or NO.
Although you may have access to the package module, this does not necessarily imply automatic access to all the modules contained in the package.
Type (Display Field)
This column shows the module type using one of the characters:
P — Package;S — Source;F — Foreign;M — Pmodel.
Loc (Display Field)
This column shows whether the module is available immediately on line (ON) or only exists in off line storage (OFF).
If NIS is displayed, this means that the package is selecting a non-existent version of that module.
If HCO is displayed, this means that the magnetic version of the module has been deleted; i.e. the module version is only available in hard copy.
Mark (Input Field)
This column is used to indicate which modules are to be read out of LIFESPAN and which packages/products are to be processed further, using one of the characters:
R — Read module out of LIFESPAN
P — Process package/product (displays package contents and allows you to select modules for transfer) and read out package module
D — Process package/product Down (but do not read out package module)
(space)— no action necessary.
Initially, all source and foreign modules will be marked with an R and all packages/products will be marked with a P, unless they are HCO or NIS, in which case they will be marked with a space.
The following table represents the valid changes that can be made to the Mark character;
Password (Optional Input Field)
A password must be supplied if you do not have automatic access to the module.
If a password is required, you need only ever provide it once, since LIFESPAN keeps track of which users have supplied the password for a specific module.
However, if the module's manager changes its password at a later date, this information is cancelled.
The module password can be up to 8 printing characters long and for security reasons, the input will not be echoed to the screen.
Errors (Display Field)
This column indicates any errors against the relevant modules; for example, a password not supplied.
For all errors, the necessary corrections must be made to the Mark or Password fields; e.g. providing passwords, correcting passwords, changing P to R, or leaving a space.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
Are you sure (Y/N)(Mandatory Input Field)
If the details are correct and you wish to proceed with the module transfer, enter Y at this prompt, and press the RETURN key.
If any modules have been marked for transfer, LIFESPAN will display the identifier of a mail message which should be viewed to determine the outcome of the requested module transfer.
The Mail System is fully described in Section 10 of this manual.
If any selected modules are offline, the time to the next scheduled online/offline run will be displayed and all selected modules will only be read out when the offline modules within the package come back online.
If further packages have been marked for processing, the scrolled area will be redisplayed with the contents of the next package and you can continue as before.
When all the packages have been processed, an appropriate message will be displayed.
Note that if a package has been marked for processing it is also read out since the file name chosen by the package at this level may be different from that chosen by the package at the next level.
From the first page, it is possible to determine the position of the current package in the complete structure.
To achieve this, you should press the TAB key from the ‘Are you sure’ field and the second page of the option, Read From Root Package — Display Ancestry, will be displayed showing the current package and those above the current package.
1.3.3
Read From Root Package — Display Ancestry
Summary
This page enables you to display the ancestry of packages currently being processed.
An example of this page is shown in figure 5.10.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A.
Scrolled area (Display Field)
Only 11 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
This option can accommodate package structures up to 20 levels deep, and the scrolled area can display up to 20 package names.
The Package Name and Issue fields are self explanatory, The Selection column shows how each package selects the package immediately below it in the structure; ie. SELECTED, LATEST or PREFERRED.
To return to the initial page, press the BS key.
1.3.4
Edit Package Contents
Summary
This option is used to edit the contents of a package.
An example of this option is shown in figure 5.11.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but in order to prevent unauthorised access to package details, LIFESPAN will only display the information if the current user:
is the owner or manager of the package, or is a relative of the package's owner or manager (parent or descendant).
has been granted a special access to the package by the owner or manager of the package (refer to Section 11).
has supplied the password at any time since it was last changed, or the package has no password.
Once a valid password is supplied, you will gain automatic access to that module without having to supply the password again until such time as the password is changed.
Note that if you wish the updated package to be entered directly back into LIFESPAN then you must be the package manager and have an active Design Change (DC) on the package.
For further information on the Design Change System, refer to Section 6 of this manual.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Package name (Mandatory Input Field)
The name of the package to be used for the operation.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
If the package name is accepted by LIFESPAN, then the package contents is displayed in the scrolled area.
Scrolled area (Input Field)
The scrolled area gives details of all the modules contained in the package (except the package itself).
Only 7 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
In each case the Module Name ,Issue and Filename are displayed.
These fields may be edited to reflect the new package references that you desire.
You may delete references, amend references and add completely new ones.
The normal rules of package references apply.
ie. you may reference up to 29 modules, no module names or filenames may be duplicated and so on.
The module name, issue and filename fields are self explanatory.
Errors (Display Field)
This column indicates any errors against the relevant modules; for example, you may have specified a module with an incorrect syntax.
For all errors, the necessary corrections must be made to the relevant fields before you may proceed.
New package version (Mandatory Input Field)
You must supply the issue of the updated package (default the next logical value).
This must be later than the current version of the package.
Module header comment (Mandatory Input Field)
You must supply a comment to be included in the modification record of the package header under the COMMENT keyword.
You may use up to 48 alphanumeric characters.
Are you sure (Y/N)(Mandatory Input Field)
If the details are correct and you wish to proceed with the package update, enter Y at this prompt, and press the RETURN key.
If the operation is successful, LIFESPAN will display one of two messages.
If you are the package manager and the user associated with an active DC referencing the package then the following message will be displayed:
New version of package being entered — check mail message for successful completionil
If you do not have the authority to enter the new version of the package then the following message will be displayed:
New package version created but not entered, no active DC or not package manager
In both cases you should inspect your mail to determine the outcome of the module transfers.
The Mail System is fully described in Section 10 of this manual.
1.3.5
Update Module Header
Summary
This option is used to update the module header for source, foreign and pmodel modules.
It is not available for use with package modules.
Packages should be updated using option 1.3.4 — Edit Package Contents.
An example of this option is shown in figure 5.14.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but in order to prevent unauthorised access to module details, LIFESPAN will only display the information if the current user:
is the owner or manager of the module, or is a relative of the package's owner or manager (parent or descendant).
has been granted a special access to the package by the owner or manager of the package (refer to Section 11).
has supplied the password now, or at any time since it was last changed, or the package has no password.
Once a valid password is supplied, you will gain automatic access to that module without having to supply the password again until such time as the password is changed.
Note that this option will only enable a module to be read from LIFESPAN and updated.
It cannot be re-entered using this option.
Modules updated using this option must be entered via a package using option 1.3.2 — Read/Enter Modules.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Module name (Mandatory Input Field)
The name of the module to be used for the operation.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
Only source, foreign and pmodel names known to LIFESPAN are valid, package names are invalid.
If the module name is accepted by LIFESPAN, then you will be able to update the module header by making entries in the following fields.
Module filename (Mandatory Input Field)
You must enter the name of the file in to which you want the module to be read in your current VMS directory.
This must be a valid VMS filename, up to 64 characters long.
New module version (Mandatory Input Field)
You must supply the issue of the updated module (default the next logical value).
This must be later than the current version of the module.
Module header comment (Mandatory Input Field)
You must supply a comment to be included in the modification record of the package header under the COMMENT keyword.
You may use up to 48 alphanumeric characters.
Are you sure (Y/N)(Mandatory Input Field)
If the details are correct and you wish to proceed with the package update, enter Y at this prompt, and press the RETURN key.
If the operation is successful, LIFESPAN will display the following message.
New version of module created in your default directory — enter it via a package
You should inspect your mail to determine the outcome of the module transfer.
The Mail System is fully described in Section 10 of this manual.
1.4.0
Scan A Module
Summary
This option allows you to scan a module before it is entered into LIFESPAN.
An example of this option is shown in figure 5.15.
The purpose of scanning is to check that all the information in the module header has been correctly formatted, and is in the correct place.
The versions of the module header that LIFESPAN will accept are shown on the Log On page.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option.
However, the module to be scanned must reside in your current VMS directory, together with any necessary foreign files if the module to be scanned is of type FOREIGN, otherwise an error will be reported.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Name of file to scan (Mandatory Input Field)
You must enter the name of the file which is to be scanned.
This must be a valid VMS filename, up to 64 characters long.
Name of output file (Optional Input Field)
The name of an output file to which any errors detected by the scan are to be written.
This must be a valid VMS filename, up to 64 characters long.
If no output filename is specified, any errors detected will still be written to the scrolled area.
Following the scan, the module name will be displayed.
If the scan fails, any detected errors will be displayed in the scrolled area, as illustrated in figure 5.12.
Scrolled area (Display Field)
The scrolled area shows any errors detected during the scan, together with the line numbers at which the errors occurred.
Only 5 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Up to 35 errors may be accessed at one time.
A warning message will be displayed if the module header version number is not the latest accepted by LIFESPAN.
You can correct the errors in the specified input file using the editor $EDIT which can be accessed by pressing PF1/1 — the Breakout key; the use of this key is fully described in Appendix A. When you leave the editor, LIFESPAN will display the Scan A Module page once again, exactly as it was before regardless of whether you have or have not corrected the error.
The module can then be scanned again as described above.
Refer to Appendix B for a detailed module header definition, and to Appendix D for a list of all possible scanner errors.
A separate scanner program, called SCAN.EXE, is available which allows individual modules to be scanned at any time without the user being logged on to LIFESPAN.
Input and output filenames must be provided in a similar way.
1.5.0
Quality Assurance
Summary
All the Quality Assurance (QA) facilities are accessed from this index page.
These include preparing a package for approval and enquiring about the status of various QA activities.
An example of this index page is shown in figure 5.13.
1.5.1
Submit Package For Approval
Summary
This option is used to indicate that a package is ready for approval.
This means that when the package has been submitted:
no more work can be done on any of the modules in the package
all the DCs which are currently Active on the package will be changed to a state of Being Approved and will be locked.
An example of this option is shown in figure 5.16.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but you must be the manager of the package being submitted for approval.
Note, you cannot submit a package to yourself for approval.
A package may only be submitted for approval if its contents are structured as follows:
the package must Select itself.
for modules which are subject to DCs via the package, there are a number of possibilities.
If the latest version of the module is a development version then the package must contain it as Latest .
If the latest version of the module is an approved version then, although it is the subject of a DC, no development has taken place.
Such a module may be contained in the package as either Latest or Selected Approved version.
Only if it is contained as Latest will it be approved again and its issue number increased.
modules which are not the subject of any DC on the package, must be contained in the package as Selected Approved versions.
These modules will not be approved.
no modules may be contained in the package as Preferred .
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Package name (Mandatory Input Field)
The name of the package to be submitted.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
To be approved by (Mandatory Input Field)
The name of the LIFESPAN user nominated to approve the package.
This user must have LIFESPAN Quality Assurer privilege, and cannot be yourself.
The user name can be up to 28 alphanumeric characters long including spaces.
Date required (Mandatory Input Field)
The date the package is to be approved by.
This must be today's date or a date in the future.
The date must be entered in the format dd-MMM-yyyy .
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to submit this package for approval, and press the RETURN key.
You will receive a mail message confirming the outcome of the approval.
The Mail System is fully described in Section 10 of this manual.
You can monitor the progress of approvals by using options 1.5.4, 1.5.5 or 1.5.6.
1.5.2
Prepare Package For Approval
Summary
This option enables you to prepare a package for approval.
It can only be accessed by the Manager or the Approver of the package, as specified from option 1.5.1.
An example of the first page of this option is shown in figure 5.17.
If you are the Approver of the package, you must use this option to prepare the package for approval prior to granting approval to the package.
You are not, however, required to prepare the package to deny approval.
Having prepared the package, you should select option 1.5.3 — Grant/Deny Approval to Package.
This option consists of three pages:
Prepare Package For Approval
Approval DCs
Approval Listings Filename
When you first select this option, the Prepare Package For Approval page will be displayed.
This page allows you to specify the name of the package to be prepared.
If acceptable, the Approval Modules will be displayed which will show whether the package is in a state to be approved.
This is determined by examining the Error column where all entries must be QA OK.
To proceed to the next page, press the TAB key and the Approval DCs will be displayed.
If the package can be prepared for approval a prompt will appear at the foot of this page to give you the choice of preparing it or not.
You can monitor the progress of approvals by using options 1.5.4, 1.5.5 or 1.5.6.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but you must be the Manager or the Approver of the package.
The Manager may only prepare the package provided that the package has not yet been submitted for approval.
The Approver may only prepare the package after the package has been submitted for approval.
In either case, the resulting listings will not be prepared immediately, but can be requested after examining the two further pages which are displayed for this option and provided that no errors have been detected by LIFESPAN.
Note that before approval, all modules must be referenced correctly by the package as specified under option 1.5.1.
In the course of approval, LIFESPAN will make them all selected versions.
In the case where one or more modules in the package are offline, you will be instructed to repeat the request later when all modules are online.
However, you will not need to request these modules to be brought back online, as LIFESPAN will do this automatically for you.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Package name (Mandatory Input Field)
The name of the package to be prepared.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
If the package name is accepted then LIFESPAN will display all modules in the selected package including their current issue numbers, whether or not the modules are approved, whether the module is online or not and any associated errors.
An example of this page is shown in figure 5.16.
Scrolled area (Display Field)
The scrolled area gives details of all the modules contained in the package.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
All the modules contained in a package can be displayed, up to a maximum of 30.
The Module Name and Issue fields are self explanatory.
The other columns are:
Status (Display Field)
This column shows the approval status of the module; i.e. NOT APPROVED, APPROVED.
On/Offline (Display Field)
This column shows whether this module is available immediately on line (ONLINE) or only exists in off line storage (OFFLINE).
If HARDCPY is displayed, this means that the magnetic version of the module has been deleted; i.e. the module version is only available in hard copy.
Errors (Display Field)
Any entry in this column, except QA OK , will prevent the package being prepared and, if appropriate, approval must be denied using option 1.5.3 — Grant /Deny Approval To Package.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
To view the next page, press the TAB key.
1.5.2
Approval DCs
Summary
This page displays information about all the DCs which relate to the package.
The identifiers, titles and state of all current DCs are shown in the scrolled area.
An example of this page is shown in figure 5.18.
After viewing this information, if no errors have been encountered on the previous page, you will be given the opportunity to prepare the package for approval.
If you are preparing the package for approval as the nominated approver and errors have been obtained, you must deny approval to the package using option 1.5.3 — Grant/Deny Approval To Package.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Display Field)
The identifiers, titles and state of all current DCs are shown in the scrolled area.
An explanation of DC states can be found in Appendix F.
Do you want to prepare the package for approval (Y/N)(Mandatory Input Field)
If there were no errors on the ‘Approval Modules’ page, LIFESPAN will display this prompt.
To prepare the package for approval enter Y .
To view the next page, press the TAB key.
1.5.2
Approval Listings Filename
Summary
This page enables you to enter the name of the file into which you wish the approval listings to be placed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A.
File name (Mandatory Input Field)
You must enter the name of a file into which all the listings associated with the approval will be placed on your current VMS directory.
This must be a valid VMS filename, up to 64 characters long.
Having entered a filename you should press RETURN.
Approval listings will only be produced in your current default directory if the LIFESPAN manager has NOT turned off the production of approval listings.
Check your LIFESPAN mail to see whether the approval listings have been produced or not.
If the approval listings have been turned off and you are the approver and happy with the contents of the package you may proceed to approve the package immediately using option 1.5.3 — Grant/Deny Approval To Package.
The Mail System is fully described in Section 10 of this manual.
1.5.3
Grant /Deny Approval To Package
Summary
This option enables you to either grant or deny approval to a package.
An example of this option is shown in figure 5.20.
By granting approval to the package, LIFESPAN will update all Design Changes to the Approved state.
All modules which are selected as Latest within the package, together with the package module itself, will be edited by LIFESPAN to produce a new baseline of approved modules.
By denying approval to the package, LIFESPAN will return all Design Changes (DCs) on the package back to the Active state and allow the package manager to update the modules again and then resubmit the package for approval.
If approval is granted, then the package module and every module selected by the relation LATEST, will have a new modification record added to it.
An example of this record is:
Restrictions and Limitations
You must have LIFESPAN Quality Assurer privilege to use this option and must have been selected to approve the package.
Also, for granting approval, you must have successfully prepared the package for approval using option 1.5.2.
Note that only the nominated Approver can grant approval to a package but that the nominated Approver or one of his ascendants who has Quality Assurer privilege can deny approval to a package.
In the case where one or more modules in the package are offline, you will be instructed to repeat the request later when all modules are online.
However, you will not need to request these modules to be brought back online, as LIFESPAN will do this automatically for you.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Package name (Mandatory Input Field)
The name of the package to be approved or denied.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
Grant/deny approval (G/D)(Mandatory Input Field)
Enter G to approve the package;D to deny the package.
Approval comment (Mandatory Input Field)
The approval caveat.
If the package is being approved, then any caveat supplied by the approver will be added as a comment to the modification record of every module being approved.
The comment can be up to 48 printing characters long, including spaces.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to proceed with the approval/denial, and press the RETURN key.
All interested users will be informed of the approval via the Mail System.
The Mail System is fully described in Section 10 of this manual.
1.5.4
View User Status Enquiries
Summary
This option enables you to view the packages which a user has been selected to approve and which a user has submitted for approval.
This option will only consider packages which have been submitted for approval, but which have not yet been approved.
Once approval has been successfully granted or denied to a package, its entry is removed from the Quality Assurance queue.
An example of this option is shown in figure 5.21.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option as it is intended to provide information for all LIFESPAN users.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
User (Mandatory Input Field)
The name of the LIFESPAN user whose packages are to be viewed.
The user name can be up to 28 alphanumeric characters long, including spaces.
Start Package (Optional Input Field)
A letter or string of characters to indicate the starting point for the package name search.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
LIFESPAN will then display the list of any appropriate packages in the scrolled area.
Scrolled area (Display Field)
Alongside each package name is shown its issue number, status (in terms of approval), the date on which its status last changed, and whether the selected user is the Manager or the Approver of the package.
An explanation of the package's approval status can be found in Appendix F. Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Up to 24 packages can be accessed at one time.
To view another set of packages, select the option again.
LIFESPAN will automatically display the last package in the current list as the Start Package in the next list.
You can change this package name if you wish.
If it is not changed, the set of packages following the current set will be displayed.
1.5.5
View Package Status Enquiry
Summary
This option enables you to view information about a particular package which is being prepared for approval or has been submitted for approval.
An example of this option is shown in figure 5.22.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option as it is intended to provide information for all LIFESPAN users.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Package (Mandatory Input Field)
The name of the package whose QA status you wish to view.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
If the package name is acceptable, LIFESPAN will display its issue number, status (in terms of approval), the date on which its status last changed, and the users concerned with the approval, i.e. the package Manager and the Approver.
An explanation of the package's approval status can be found in Appendix F.
1.5.6
View All Current QA Enquiries
Summary
This option shows the status of all packages currently undergoing Quality Assurance.
An example of this option is shown in figure 5.23.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option as it is intended to provide information for all LIFESPAN users.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Start package (Optional Input Field)
A letter or start string of characters to indicate the starting point for the package name search.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
LIFESPAN will then display the list of packages in the scrolled area.
Scrolled area (Display Field)
Alongside each package name is shown its issue number, status (in terms of approval) and the date on which its status last changed.
An explanation of the entries in the status column can be found in Appendix F. Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Up to 24 packages can be accessed at one time.
To view another set of packages, select the option again.
LIFESPAN will automatically display the last package in the current list as the Start Package in the next list.
You can change this package name if you wish.
If it is not changed, the set of packages following the current set will be displayed.
1.7.0
View Module Information
Summary
All the Module Information facilities are accessed from this index page.
These include viewing the module details and module substate.
An example of this index page is shown in figure 5.24.
1.7.1
View Module Details
Summary
This option enables you to display information about an individual module.
It gives immediate on-line access to the details, such as the module's type, its charge code, the Latest and/or Preferred version, who is responsible for it and why it was created.
An example of this option is shown in figure 5.25.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but in order to prevent unauthorised access to module details, LIFESPAN will only display the information if the current user:
is the owner or manager of the module, or is a relative of the module's owner or manager (ancendant or descendant).
has been granted a special access to the module by the owner or manager of the module (refer to Section 11).
has supplied the current module password, either now or at any time since the password was last changed, or the module has no password.
If you do not fall into any of these categories, LIFESPAN will display an appropriate error message and you will be unable to view the details of that module.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Module name (Mandatory Input Field)
The name of the module to be viewed.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
Module password (Optional Input Field)
A module password must be supplied if you do not have automatic access to the module.
If a password is required, you need only ever provide it once, since LIFESPAN keeps track of which users have supplied the password for a specific module.
However, if the module's manager changes its password at a later date, this information is cancelled.
The module password can be up to 8 printing characters long and for security reasons, the input will not be echoed to the screen.
If the information supplied is correct, LIFESPAN will display the module's details.
If the module is of type SOURCE, FOREIGN or PMODEL and its name has only been reserved (i.e. the module has not yet been entered into LIFESPAN), the Latest version field will display NONE.
Similarly, if no preferred version for the module has been set, the Preferred Version field will display NONE.
Part Number (Display Field)
This is the part number associated with the module.
It is defaulted to the module name when the module name is reserved and may be subsequently changed using option 1.8.0 — Update Module Details.
Auto DC Assessment (Display Field)
This indicates whether automatic DC assessment has been set on the module or not.
ie. Whether DCs referencing the module are to be automatically assessed as agreed or not on behalf of the module manager.
This only effects package modules and only if the auto DC assessment facility is enabled.
Auto DC Assessment Facility Enabled (Display Field)
This indicates whether the automatic DC assessment facility has been enabled (Y ) or disabled (N ) by the LIFESPAN manager.
If it is not set and you wish it to be then you should contact your LIFESPAN Manager.
1.7.2
View Module Substate
Summary
This option enables you to view the substate of an existing module instance.
An example of this option is shown in figure 5.26.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but in order to prevent unauthorised access to module details, LIFESPAN will only display the information if the current user:
is the owner or manager of the module, or is a relative of the module's owner or manager (ancendant or descendant).
has been granted a special access to the module by the owner or manager of the module (refer to Section 11).
has supplied the current module password, either now or at any time since the password was last changed, or the module has no password.
If you do not fall into any of these categories, LIFESPAN will display an appropriate error message and you will be unable to view the details of that module.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Module name (Mandatory Input Field)
The name of the module whose substate you wish to view.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
Issue (Optional Input Field)
The version of the module to be used for the operation.
This can be an actual issue number (eg. 01.01A) or one of the following characters:
P Preferred — generally the version of the module which the module manager recommends for use.
This is generally the latest fully tested version, but not necessarily the latest version.
L Latest — the latest available version of this module.
This version is normally only used by the person developing the module, as it may be untested.
If this field is left blank, the selection will default to Latest.
Module password (Optional Input Field)
A module password must be supplied if you do not have automatic access to the module.
If a password is required, you need only ever provide it once, since LIFESPAN keeps track of which users have supplied the password for a specific module.
However, if the module's manager changes its password at a later date, this information is cancelled.
The module password can be up to 8 printing characters long and for security reasons, the input will not be echoed to the screen.
If the information supplied is correct, LIFESPAN will display the substate details for the module instance.
Model type (Display Field)
This displays the module's type ie. PACKAGE, SOURCE, FOREIGN or PMODEL.
Model sub type (Display Field)
The module instance's subtype as defined by the module header keyword MODULE-SUB-TYPE-IS.
This can be any alphanumeric string up to 28 characters in length.
Model state id (Display Field)
The identifier of the model state in which the module instance currently resides.
This can take any integer value between 0 and 100.
Model state name (Display Field)
The textual name associated with the model state in which the module instance currently resides.
This can be any string of printable characters and spaces up to 64 characters in length.
1.8.0
Update Module Details
Summary
This option enables you to update the details of an existing module.
An example of this option is shown in figure 5.27.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but you must be the manager of the module or an ascendant to update its details.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Module name (Mandatory Input Field)
The name of the module to be updated.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
Once the details of the module have been displayed, you may change:
Part Number (Optional Input Field)
The part number associated with the module may be updated.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’. ie. It has the same syntax as the module name.
Like the module name it must also be unique.
Password/Verification (Optional Input Field)
The password may be changed to stop unauthorised users from accessing this particular module.
The module password can be up to 8 printing characters long and for security reasons, the input will not be echoed to the screen.
As a result, the password must be entered again in the Verification field.
Preferred version (Optional Input/Display Field)
The preferred version must be a version of the module which is already known to LIFESPAN.
The preferred version is generally the version of the module which the module manager recommends for use.
This is generally the latest fully tested version, but not necessarily the latest version.
Module owner (Optional Input/Display Field)
The current owner of the module.
If the module owner is changed, the new name must be that of an existing user, and the new module owner must be related to you (as the module manager).
The module owner can be up to 28 alphanumeric characters long, including spaces.
Module manager (Optional Input/Display Field)
The current manager of the module.
If the module manager is changed, the new name must be that of an existing user, and the new manager must be your ascendant or descendant.
The module manager of a package cannot be changed if there are currently any Active DCs on the package.
The module manager can be up to 28 alphanumeric characters long, including spaces.
Auto DC Assessment (Optional Input Field)
Only if the module is of type package then the auto DC assessment flag may be updated.
This indicates whether automatic DC assessment has been set on the module or not.
ie. Whether DCs referencing the module are to be automatically assessed as agreed (Y ) or not (N ) on behalf of the module manager.
This only effects package modules and only if the auto DC assessment facility has been enabled by the LIFESPAN Manager.
The following will also be displayed but may not be changed:
Module type (Display Field)
This displays the module's type ie. PACKAGE, SOURCE, FOREIGN, or PMODEL.
Charge code (Display Field)
This displays the charge code associated with the module.
Latest version (Display Field)
This displays the latest version of the module currently known to LIFESPAN.
Auto DC Assessment Facility Enabled (Display Field)
This indicates whether the automatic DC assessment facility has been enabled (Y ) or disabled (N ) by the LIFESPAN manager.
If it is not set and you wish it to be then you should contact your LIFESPAN Manager.
Module title (Display Field)
This displays the title of the module as contained in the module header.
DESIGN CHANGE SYSTEM
Introduction
The Design Change System is Option 2 of the Master Level Index.
Design Changes are the mechanisms which regulate and co-ordinate changes made to modules stored in LIFESPAN.
All the operations are accessed from the index page shown in figure 6.1.
2.1.0
Generate DC
Summary
This index page enables you to select the option to either create a Design Change (DC), update a DC, or submit a DC.
An example of this index page is shown in figure 6.2.
The DC is the mechanism which allows changes to be made to modules within LIFESPAN and each DC is allocated a unique numeric identifier.
The generation of a DC is a combination of these options.
You must first create a DC, update it to add the relevant details and then, finally, submit it for assessment by other affected users.
A DC is created once, may be updated many times and is then submitted once.
A more detailed explanation of the Design Change system is given in the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
2.1.1
Create DC
Summary
This option enables you to create a Design Change (DC).
An example of this option is shown in figure 6.3.
Once the DC has been created you should use option 2.1.2 — Update DC, to add further details to the DC and then option 2.1.3 — Submit DC, to submit the DC for assessment by other affected users.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
DC title (Mandatory Input Field)
The title for the Design Change.
The title should be as descriptive as possible, and can be up to 60 printing characters long, including spaces.
If the operation is successful, LIFESPAN will allocate a unique DC identifier up to 6 digits long.
The DC identifier will be displayed on the screen, and careful note should be taken of it, as it cannot be altered and will need to be supplied in all future references to this DC.
2.1.2
Update DC
Summary
This option enables you to update an existing Design Change (DC).
The Update DC option can be used for three different purposes:
to enter information about a DC for the first time
to update the information already entered about a DC
to specify that a new DC is to be based on an existing DC, and to update the information to suit the new DC.
This option consists of six pages, an initial page and:
Update DC — Page 1 — Priority, User and Description
Update DC — Page 2 — Superseded DCs
Update DC — Page 3 — Modules Referenced
Update DC — Page 4 — Related SPRs
Update DC — Page 5 — Referenced DCs.
When you select this option, the first page will be displayed to obtain the identifier of the DC to be updated.
An example of this page is shown in figure 6.4
A DC may be updated as many times as you wish.
On completion of the update, if you have DC Operations privilege, you may submit the DC for assessment by all interested users by selecting option 2.1.3 — Submit DC.
If you do not have DC Operations privilege, you should use option 2.5.0 — Change Ownership Of DC, to pass the DC to a user who does have this privilege.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option.
However, LIFESPAN will only allow the DC to be updated provided:
you are the user associated with the DC (by default, this is the user who created it, unless specifically changed using option 2.5.0), and
the DC has not yet been submitted for assessment.
A DC may reference up to 29 modules (note that you should have a maximum of one package on any DC, to allow for successful approval) and, at the time of approval, all referenced modules must be contained within the package through which the work is being carried out.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
DC identifier (Mandatory Input Field)
The identifier of the DC to be updated.
The DC must already exist and must not have been submitted.
The DC identifier is a numeric up to 6 digits long.
If the DC identifier is acceptable, LIFESPAN will display the DC last changed state , the date the DC was last changed (it may be updated more than once), the DC title , and will fill in any existing information on the subsequent pages.
Basis (Optional Input/Display Field)
If you wish to base the current DC on an existing DC, the identifier of the Basis should be entered here.
The basis DC must already exist, and you must be the associated user of the DC or an interested user.
If a basis is supplied the information on the subsequent pages will be replaced by the basis details (except for the DC title).
If this is not the correct basis, it can be changed.
The basis DC will default to the identifier of the DC being updated.
DC title (Mandatory Input/Display Field)
The current title of the DC.
The title can be changed, but should remain descriptive, up to 60 printing characters long, including spaces.
Classification (Mandatory Input/Display Field)
A security classification for the DC must be provided, up to 24 printing characters long, including spaces (eg. Unclassified).
Job reference (Mandatory Input/Display Field)
A job reference must be provided for the work, up to 20 printing characters long, including spaces.
To proceed to the next page, press the TAB key.
2.1.2
Update DC — Page 1 — Priority, User and Description
Summary
This page allows a description of the DC to be entered.
If the new DC is to be based on an existing one, all the information which was supplied for the original description will be displayed here, and can be updated for the new DC; otherwise, any existing details for your DC will be displayed.
An example of this page is shown in figure 6.5.
The DC identifier, title and classification will be displayed at the top of the page, for information only; they cannot be changed.
Each DC has a user associated with it, who is allowed to work on it.
Initially, this DC user is also the user who created it, until another person is specifically allocated (using option 2.5.0).
The associated user's name will be displayed beside DC user .
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Priority (Optional Input/Display Field)
A priority for the implementation of the DC should be provided.
This gives the assessors some idea of how quickly they must make their assessments.
The priority should be entered as:
R or ROUTINE 
U or URGENT 
E or EMERGENCY .
If this field is left blank or one of the above values is not chosen, the priority will default to ROUTINE.
Description (Mandatory Input/Display Field)
A full description of the DC should be provided to enable assessors to understand why it is being proposed.
The DC description can be up to 20 lines long.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
To proceed to the next page, press the PF1/<down arrow> key.
2.1.2
Update DC — Page 2 — Superseded DCs
Summary
This page enables you to provide information about any DCs which have been superseded by this DC, up to a maximum of 10.
If the new DC is based on an existing one, all the information which was supplied for the original DC will be displayed here, and can be updated for the new DC; otherwise, any existing details for your DC will be displayed.
An example of this page is shown in figure 6.6.
The DC identifier, title and classification will be displayed at the top of the page, for information only; they cannot be changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
The scrolled area allows the identifiers of any superseded DCs to be entered, up to a maximum of 10.
It is not mandatory to provide any superseded DCs.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
DC Id (Optional Input/Display Field)
This column allows the identifiers of any superseded DCs to be specified.
The DC identifier is a numeric up to 6 digits long.
On completion, you should press the PF1/<down arrow> key.
LIFESPAN will then display the titles and states of any DCs supplied.
If these are not the required DCs, you can BS to the scrolled area and make any necessary changes.
An explanation of DC states can be found in Appendix F.
Error (Display Field)
An error code will be displayed in the Error column if any invalid information has been entered (for example, a DC identifier which is unknown to LIFESPAN) and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be resolved before the DC can be updated.
To proceed to the next page, press the TAB key.
2.1.2
Update DC — Page 3 — Modules Referenced
Summary
This page enables you to provide the names of the modules which need to be changed because of the DC, up to a maximum of 29.
If the new DC is based on an existing one, all the information which was supplied for the original DC will be displayed here, and can be updated for the new DC; otherwise, any existing details for your DC will be displayed.
An example of this page is shown in figure 6.7.
The DC identifier, title and classification will be displayed at the top of the page, for information only; they cannot be changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
The scrolled area allows the names of any modules which are to be changed to be entered, up to a maximum of 29.
It is not mandatory to provide any module names.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Module Name (Optional Input/Display Field)
This column allows the names of the modules which are to be changed for this DC to be specified.
The required names should be entered, using the up and down arrow keys to move about the scrolled area.
The module names specified must exist and can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
On completion, you should press the PF1/<down arrow> key.
LIFESPAN will then display the module types for any names supplied.
If these are not the required modules, you can BS to the scrolled area and make any necessary changes.
Error (Display Field)
An error code will be displayed in the Error column if any invalid information has been entered (for example, module name is unknown to LIFESPAN) and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be resolved before the DC can be updated.
To proceed to the next page, press the TAB key.
2.1.2
Update DC — Page 4 — Related SPRs
Summary
This page enables you to provide information about any known related Software Performance Reports (SPRs), up to a maximum of 10.
Such references are not mandatory, but help to make quality checking easier.
If the new DC is based on an existing one, all the information which was supplied for the original DC will be displayed here, and can be updated for the new DC; otherwise, any existing details for your DC will be displayed.
An example of this page is shown in figure 6.8.
The DC identifier, title and classification will be displayed at the top of the page, for information only; they cannot be changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
The scrolled area allows the identifiers of any related SPRs to be entered, up to a maximum of 10.
It is not mandatory to provide any SPRs.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
SPR Id (Optional Input/Display Field)
This column allows the identifiers of the related SPRs to be specified.
The SPR identifier is a numeric up to 6 digits long.
On completion, you should press the PF1/<down arrow> key.
LIFESPAN will then display the titles and states of any SPRs supplied.
If these are not the required SPRs, you can BS to the scrolled area and make any necessary changes.
An explanation of SPR states can be found in Appendix F.
Error (Display Field)
An error code will be displayed in the Error column if any invalid information has been entered (for example, an SPR identifier which is unknown to LIFESPAN) and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be resolved before the DC can be updated.
To proceed to the next page, press the TAB key.
2.1.2
Update DC — Page 5 — Referenced DCs
Summary
This page enables you to provide information about any existing DCs which are relevant to this DC, up to a maximum of 10.
If the new DC is based on an existing one, all the information which was supplied for the original DC will be displayed here, and can be updated for the new DC; otherwise, any existing details for your DC will be displayed.
An example of this page is shown in figure 6.9.
The DC identifier, title and classification will be displayed at the top of the page, for information only; they cannot be changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
The scrolled area allows the identifiers of any related DCs to be entered, up to maximum of 10.
It is not mandatory to provide any related DCs.
DC Id (Optional Input/Display Field)
This column allows the identifiers of any related DCs to be specified.
The DC identifier is a numeric up to 6 digits long.
On completion, you should press the PF1/<down arrow> key.
LIFESPAN will then display the titles and states of any DCs supplied.
If these are not the required DCs, you can BS to the scrolled area and make any necessary changes.
An explanation of DC states can be found in Appendix F.
Error (Display Field)
An error code will be displayed in the Error column if any invalid information has been entered (for example, a DC identifier which is unknown to LIFESPAN) and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be resolved before the DC can be updated.
To update the DC, press the RETURN key.
2.1.3
Submit DC
Summary
This page enables you to submit a Design Change (DC) for assessment by affected users.
An example of this option is shown in figure 6.10.
After submitting the DC, no further modifications may be made to it, so it is necessary to be sure that no further changes are required.
The only way it can be changed after this point is to abort it (using option 2.7.0) and to create a new DC based on this one (using options 2.1.1 and 2.1.2).
Restrictions and Limitations
You must have LIFESPAN DC Operations privilege to submit a DC and you must:
be the user associated with a DC,(by default, this is the user who created it, unless specifically changed using option 2.5.0) and
have access to all the modules defined in the DC (including any package modules referenced).
If you do not have DC Operations privilege, you should use option 2.5.0 — Change Ownership Of DC, to pass the DC to a user who does have this privilege.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
DC identifier (Mandatory Input Field)
The identifier of the DC to be submitted must be supplied.
The DC must already exist and must not have been submitted.
The DC identifier is a numeric up to 6 digits long.
If the information is acceptable, LIFESPAN will automatically display the title and classification of the DC identifier entered.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to submit this DC, and press the RETURN key.
Having submitted the DC, LIFESPAN will send details, via mail messages, to all interested parties for voting; i.e. the managers of any modules referenced, and the managers of any packages containing one or more of these modules.
This includes the user associated with the DC, who must also make an assessment.
No further work can be done on the DC until assessments have been received from these users.
You can see who has been asked to vote using option 2.8.2, and view their assessments using option 2.8.3.
The associated user will receive a mail message when the DC state changes to Agreed (if all interested users accept the proposal) or when the DC state changes to Rejected (if one or more interested users reject the proposal).
The Mail System is fully described in Section 10 of this manual.
2.2.0
Assess DC
Summary
This option enables you to accept or reject a Design Change (DC).
This option must be used by all the assessors concerned with a particular DC to register their acceptance or rejection of the proposal.
An example of this option is shown in figure 6.11.
You should only use this option after having viewed the DC using option 2.8.1 — View One DC.
If one or more assessors do not agree to the proposed changes, the DC will automatically be rejected.
Once you have assessed this DC, your decision cannot be changed, so it is important to ensure that the consequences of the decision have been adequately considered.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option but you must be an assessor of the DC to register a decision (you will have been sent a mail message asking you to assess the DC).
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
DC identifier (Mandatory Input Field)
The identifier of the DC to be assessed.
The DC must already exist and must have been submitted.
The DC identifier is a numeric up to 6 digits long.
If the information is acceptable, LIFESPAN will automatically display the title and classification of the DC identifier entered, and will show the date when the DC was submitted.
Agree to DC (Mandatory Input Field)
Enter Y to Agree to the DC and N to Reject it.
Assessment Comment (Mandatory Input Field)
An assessment comment must be provided in the scrolled area.
It is advisable to give reasons for the decision, especially if rejecting the DC, so that those concerned know why the proposed change has been blocked.
The assessment comment can be up to 10 lines long.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and press the RETURN key to register your decision.
You can see who has been asked to vote on a DC using option 2.8.2, and view their assessments using option 2.8.3.
2.4.0
Activate DCs
Summary
When a Design Change (DC) has been assessed and the work agreed, the next stage in its life is being Activated .
This means that development versions of the modules referenced by the DC can be entered into LIFESPAN.
This option enables you to activate up to 10 DCs via a single package.
This option consists of two pages:
Activate DCs — DCs Already Active
Activate DCs — Additional DCs.
When you select this option, the first page will be displayed to obtain the name of the package for the operation.
If the specified name is acceptable, LIFESPAN will display the identifiers and titles of any DCs which are currently active via this package.
An example of this page is shown in figure 6.12.
You can then press the TAB key to move to the second page and enter the identifiers of the additional DCs to be activated via this package.
An example of the second page is shown in figure 6.13.
Once the DC(s) have been activated, you may enter development versions of the modules referenced into LIFESPAN using option 1.3.2 — Read/Enter Individual Modules, as described in Section 5 of this manual.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but in order to activate a DC:
you must be the user associated with the DC (by default, this is the user who created it, unless specifically changed using option 2.5.0)
the DC cannot refer to any modules referred to by a DC activated via another package (this prevents conflicting modifications) and
you must be the manager of the package.
In order to work on a DC it is necessary for all the modules referenced to be in a single package.
If no such package is available, one may be created specifically to complete the work identified by the DC.
Otherwise, the DC must be aborted (using option 2.7.0) and replaced by a number of other DCs, each of which covers only part of the original work required.
Note that more than one DC can be activated via a package at the same time, up to a maximum of 10, provided that they each satisfy the above conditions.
All the DCs can be worked on at the same time (which is why they must all be handled through one user and one package), and the package need only be approved once for them all.
At the time of approval all modules referred to by a DC must be contained in the package through which the DC has been activated.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Package name (Mandatory Input Field)
The name of the package via which the DCs are to be activated.
The package name can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
Scrolled area (Display Field)
If the package name is acceptable, the identifiers and titles of any DCs currently active on this package will be displayed in the scrolled area.
To proceed to the next page, press the TAB key.
2.4.0
Activate DCs — Additional DCs
Summary
This page enables you to activate further DCs via the specified package.
Any DCs specified must be in the Agreed state.
An example of this page is shown in figure 6.13.
The name of the package specified on the previous page and the number of additional DCs which can be added will be displayed above the scrolled area, for information only.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
The identifiers of the new DCs to be activated via this package can be entered in the scrolled area, up to the maximum indicated.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
DC Id (Optional Input Field)
This column allows the identifiers of the new DCs to be entered.
The DC identifier is a numeric up to 6 digits long.
On completion, you should press the PF1/<down arrow> key.
LIFESPAN will then display the titles and states of any DCs supplied.
If these are not the required DCs, you can BS to the scrolled area and make any necessary changes.
An explanation of DC states can be found in Appendix F.
Error (Display Field)
An error code will be displayed in the Error column if any invalid information has been entered (for example, a DC identifier which is unknown to LIFESPAN) and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be resolved before the updates can be entered.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and press the RETURN key.
2.5.0
Change Ownership Of DC
Summary
When a Design Change (DC) is created, it is automatically associated with the user who creates it.
In addition, a DC can only be activated by the user associated with it, who must also be the manager of the package.
In practice, however, it is very likely that the person who creates a DC, and enters all the initial information about it, will be a technical assistant, who has nothing to do with the actual implementation of the DC.
This option enables you to change the user associated with a DC.
An example of this option is shown in figure 6.14.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but
you must be the user currently associated with the DC (by default, this is the user who created it, unless specifically changed using option 2.5.0)
the DC must not have been activated and
the new user must have access to all the modules referenced on the DC.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
DC identifier (Mandatory Input Field)
The identifier of the DC to be changed.
The DC must already exist and must not have been activated.
The DC identifier is a numeric up to 6 digits long.
If the information is acceptable, LIFESPAN will automatically display the title and classification of the DC identifier entered.
The current associated user of the DC will be displayed beside New user .
New user (Mandatory Input/Display Field)
The name of the LIFESPAN user to be associated with the DC.
The user must already exist and the name can be up to 28 alphanumeric characters long, including spaces.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to change the ownership of this DC, and press the RETURN key.
If all the above conditions are met, the new user will be notified by way of a mail message.
The Mail System is fully described in Section 10 of this manual.
2.6.0
Prepare DC Listings
Summary
This index page allows you to select from a number of listing options which provide information about Design Changes (DCs).
Currently, you may select option 2.6.1 — Format DC Into File.
An example of this index page is shown in figure 6.15.
2.6.1
Format DC Into File
Summary
This option enables you to obtain a listing of a single Design Change (DC) which is suitable for printing on A4 paper; this is done by transferring the information to a VMS file so that it can be printed as required.
An example of this option is shown in figure 6.16.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option but you must be the user associated with the DC or an interested user (i.e. the manager of any modules on the DC or the manager of packages containing one or more of these modules) or, if applicable, the nominated approver of the package via which the DC has been activated.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
DC identifier (Mandatory Input Field)
The identifier of the DC to be formatted.
The DC must already exist.
The DC identifier is a numeric up to 6 digits long.
If the information is acceptable, LIFESPAN will automatically display the title and classification of the DC identifier entered.
Filename (Mandatory Input Field)
The name of a valid VMS file, up to 64 characters long, into which the DC information is to be placed.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to format this DC, and press the RETURN key.
The listing will be produced in the foreground and the output placed in your current VMS directory under the specified filename.
2.7.0
Abort DC
Summary
This option enables you to abort a Design Change (DC).
An example of this option is shown in figure 6.17.
Once a DC has been aborted, no further development versions of the referenced modules can be entered into LIFESPAN via this DC, so it is important to ensure that you are aborting the correct DC.
You may still use an aborted DC as a basis for a new DC using option 2.1.2 — Update DC.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but
you must be the user associated with the DC (by default, this is the user who created it, unless specifically changed using option 2.5.0) and
the DC must not be in the In Approval or Approved state.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
DC identifier (Mandatory Input Field)
The identifier of the DC to be aborted.
The DC must already exist and must not be in the ‘in approval’ or ‘approved’state.
The DC identifier is a numeric up to 6 digits long.
If the information is acceptable, LIFESPAN will automatically display the title and classification of the DC identifier entered.
Abort Comment (Mandatory Input Field)
A comment must be provided, stating the reason for the DC being aborted.
The comment can be up to 10 lines long.
This provides a useful reference for future work, since the DC is not removed from LIFESPAN.
Although it cannot be worked on, it will still be available to be used as the basis for a new DC (at least until it has been hard copied).
The comment should therefore provide helpful information about why the work was abandoned in this instance.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to abort this DC, and press the RETURN key.
2.8.0
View DCs
Summary
This index enables you to access a variety of options which display information about Design Changes (DCs); for example, to find out the state of a particular DC, who is approving it, and why, and to look at assessment comments.
All DC assessors should look through these pages to enable them to decide whether or not to accept the changes proposed in the DC.
None of these options can be used to alter DCs in any way.
An example of this index page is shown in figure 6.18.
2.8.1
View One DC
Summary
This option enables you to view the details of a specific Design Change (DC).
This option consists of six pages, an initial page and:
View DC — Page 1 — Priority, User and Description.
This page displays the current description provided for the DC.
View DC — Page 2 — Superseded DCs.
This page provides information about any DCs which are superseded by the DC.
View DC — Page 3 — Modules Referenced.
This page lists all the modules which need to be changed because of the DC.
View DC — Page 4 — Related SPRs.
This page displays all the SPRs which have been linked to the DC.
View DC — Page 5 — Referenced DCs.
This page lists all the DCs which are in some way related to the DC.
These pages are similar to those of option 2.1.2 — Update DC, except that you can only view the information using this option.
When you select this option, the first page will be displayed to obtain the identifier of the DC to be viewed.
An example of this page is shown in figure 6.19.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but you must be the user associated with the DC or an interested user (i.e. the manager of any modules on the DC or the manager of packages containing one or more of these modules) or, if applicable, the nominated approver of the package via which the DC has been activated.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
DC identifier (Mandatory Input Field)
The identifier of the DC to be viewed.
The DC must already exist.
The DC identifier is a numeric up to 6 digits long.
If the information is acceptable, LIFESPAN will automatically display the first page of information, as illustrated in figure 6.19.
The information presented on the next five pages are described under option 2.1.2 — Update DC and is in a similar format to figures 6.5 to 6.9.
You can use the TAB and BS keys to move between pages; when you have finished viewing the DC, press the RETURN key,
2.8.2
View DC Assessors
Summary
This option enables you to view the list of assessors for a particular Design Change (DC) and whether thay have assessed it.
An example of this option is shown in figure 6.20.
This option enables you to quickly determine whether a DC has been fully assessed, and if not, which LIFESPAN users have still to assess it.
You can use option 2.8.3 to view the assessment comments for a particular DC/user.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option but the DC must have been submitted, and you must be the user associated with the DC or an interested user (i.e. the manager of any modules on the DC or the manager of packages containing one or more of these modules) or, if applicable, the nominated approver of the package via which the DC has been activated.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
DC identifier (Mandatory Input Field)
The identifier of the DC whose assessors you wish to view.
The DC must already exist and must have been submitted.
The DC identifier is a numeric up to 6 digits long.
If the information is acceptable, LIFESPAN will automatically display the title and classification of the DC identifier entered.
Start name (Optional Input/Display Field)
A letter or string of characters can be provided to indicate the starting point for the user name search.
It can be a maximum of 28 alphanumeric characters long, including spaces.
If no name has been provided, the list will start from the first user alphabetically who has to assess the DC.
Scrolled area (Display Field)
LIFESPAN will display the list of up to 20 assessors who are interested in the DC and the status of their replies to date, starting from the name provided.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Status (Display Field)
This column will shown the assessment status for the corresponding user.
The status will be be one of:
ACCEPTED the user has accepted the DC
REJECTED the user has rejected the DC
NOT ASSESSED the user has not yet assessed the DC.
You can repeat this option for each range of Assessors that you wish to view.
LIFESPAN will automatically use the last user of the current list as the first for the next list.
You can change this user name is you wish.
If it is not changed, the set of Assessors following the current set will be displayed.
You may use option 2.8.3 to view users' assessments.
2.8.3
View DC Assessment
Summary
This option enables you to view a Design Change (DC) assessor's comment and the list of modules which make him an assessor for this DC.
There are two pages of information concerning assessors; one showing all the modules of which the assessor is manager, the other showing their assessment comment.
When you select this option, the first page is displayed to allow you to specify the DC identifier and the name of the LIFESPAN user whose assessment you wish to view.
If the details you enter are acceptable, LIFESPAN will display the modules which make the specified user an interested party in the DC.
To view the second page containing the assessor's comment, press the TAB key; to exit the option, press the RETURN key.
An example of the first page is shown in figure 6.21.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option but the DC must have been submitted, and you must be the user associated with the DC or an interested user (i.e. the manager of any modules on the DC or the manager of packages containing one or more of these modules) or, if applicable, the nominated approver of the package via which the DC has been activated.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
DC identifier (Mandatory Input Field)
The identifier of the DC whose assessment you wish to view.
The DC must already exist and must have been submitted.
The DC identifier is a numeric up to 6 digits long.
If the information is acceptable, LIFESPAN will automatically display the title and classification of the DC identifier entered.
Assessor name (Mandatory Input Field)
The name of the user whose assessment comment you wish to view.
This user must exist and the name can be up to 28 alphanumeric characters long, including spaces.
Scrolled area (Display Field)
If the details are acceptable, LIFESPAN will display the list of modules which make the specified user an assessor of this DC.
Only 5 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
2.8.3
View DC Assessment
Summary
This page enables you to view what assessment, if any, the specified user has made for this DC.
If the user has not yet assessed the DC, a message to this effect will be displayed at the foot of the page.
An example of this page is shown in figure 6.22.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A.
Assessment Comment (Display Field)
The scrolled area will display the assessment comment provided, if any.
Only 6 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
2.8.5
View DC Titles
Summary
This option enables you to view a list of up to 10 Design Changes (DCs) and their titles and states, in descending order of DC identifier, from the DC requested.
An example of this option is shown in figure 6.23.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option as it is intended to provide information for all LIFESPAN users.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Highest DC (Optional Input/Display Field)
The identifier of the DC to start from.
The DC identifier is a numeric up to 6 digits long.
If you leave the highest DC blank, the list will start from the highest DC identifier known to LIFESPAN.
Scrolled area (Display Field)
LIFESPAN will display the list of up to 10 DCs and their titles and states in the scrolled area in descending order of DC identifier, from the DC provided.
An explanation of DC states can be found in Appendix F.
You can repeat this option for each range of DC titles that you wish to view.
LIFESPAN will automatically use the last DC of the current list as the first for the next list.
You can change this identifier is you wish.
If it is not changed, the set of DCs following the current set will be displayed.
SOFTWARE PERFORMANCE REPORTS
Introduction
The Software Performance Report (SPR) system is Option 3 of the Master Level Index.
SPRs are used to report a fault or documentation error relating to a specific issue or module under LIFESPAN control, and to suggest improvements to pieces of software or documentation.
All these facilities are accessed from the index page shown in figure 7.1.
Users must have SPR SSR Operations privilege to use the listing options and SPR SSR Controller privilege to use the Force User to Accept SPR option; these privileges must be assigned by an ascendant using option 7.2.2 — Update User Details.
SPRs known as Paper SPRs can be created outside LIFESPAN, for example by an external client, and can be entered into the system later.
Identifiers for Paper SPRs are allocated by the LIFESPAN Manager, who must define a range of numbers for this purpose in the configuration file under the keyword PAPER_RANGES .
Any identifier allocated to an SPR which is created within LIFESPAN is guaranteed to be unique and to lie outside the predefined ranges for Paper SPRs.
A more detailed explanation of how the overall SPR system functions, and the philosophy behind it, is given in the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
3.1.0
Create SPR
Summary
This option enables you to create a Software Performance Report (SPR).
An example of this option is shown in figure 7.2.
Note that this option is only for magnetic SPRs (those created within LIFESPAN).
Paper SPRs are created outside LIFESPAN.
The LIFESPAN Manager must define a range or set of ranges for Paper SPRs in the configuration file under the keyword PAPER_RANGES, from which a new Paper SPR is allocated an identifier.
The details of Paper SPRs can be entered directly into LIFESPAN using option 3.2.0 — Update SPR.
For more information, refer to the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
Restrictions and Limitations
No special LIFESPAN privileges are required to create an SPR.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SPR title (Mandatory Input Field)
The title for the SPR.
This should be as descriptive as possible, and can be up to 50 printing characters long, including spaces.
SPR originator (Mandatory Input Field)
The name of the person sending the SPR.
The originator can be up to 28 printing characters long, including spaces.
When the page is complete, you should press the RETURN key.
If the operation is successful, LIFESPAN will allocate a unique SPR identifier up to 6 digits long.
The SPR identifier will be displayed on the screen, and careful note should be taken of it, as it cannot be altered and must be supplied in all future references to this SPR.
Once the SPR has been created you should use option 3.2.0 — Update SPR to add further details to the SPR and then use option 3.3.0 — Submit SPR, to submit the SPR.
3.2.0
Update SPR
Summary
This option enables you to update a Software Performance Report (SPR).
The Update SPR option can be used for three different purposes:
to enter information about an SPR for the first time
to update the information already entered about an SPR
to specify that a new SPR is to be based on an existing SPR, and to update the information to suit the new SPR.
The option consists of five pages, an initial page and
Update SPR — Page 1 — to enter details about the Originator
Update SPR — Page 2 — to enter details about any Issues affected
Update SPR — Page 3 — to enter details about any modules affected
Update SPR — Page 4 — to enter a description of the problem/suggestion.
When you select this option, the initial page will be displayed to identify the SPR to be updated.
An example of this page is shown in figure 7.3.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option but you must be the creator of the SPR and the SPR must not have been submitted.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SPR identifier (Mandatory Input Field)
The identifier of the SPR to be updated.
The SPR must already exist and must not have been submitted.
The SPR identifier is a numeric up to 6 digits long.
If the SPR identifier is acceptable, LIFESPAN will display the SPR title and the SPR originator, and will fill in the Basis with your SPR identifier.
Any existing information will be displayed on the subsequent pages.
If you supply the identifier of a Paper SPR that is being updated for the first time, a warning message will be displayed.
Basis (Optional Input/Display Field)
If you wish to base the current SPR on an existing SPR, the identifier of the basis SPR should be entered here.
If supplied, the basis must already exist.
If a basis is supplied, LIFESPAN will display the corresponding SPR title and originator and the information on the subsequent pages will be replaced with the basis details (except for the SPR title).
If this is not the correct basis, it can be changed.
The basis will default to the identifier of the SPR being updated.
To proceed to the next page, press the TAB key.
3.2.0
Update SPR — Page 1
Summary
This page enables you to update the information relating to the originator of the SPR.
If your SPR is being based on an existing SPR, all the relevant information which was supplied for the basis will be displayed here, and can be updated for your SPR; otherwise, any existing details for your SPR will be displayed.
An example of this page is shown in figure 7.4.
The SPR identifier will be displayed at the top of the page, for information only; it cannot be changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Date of creation (Mandatory Input/Display Field)
The date on which the SPR was or will be created.
This will normally be today's date or a previous date given on a Paper SPR but may be a future date.
The date must be entered in the format dd-MMM-yyyy .
SPR title (Mandatory Input/Display Field)
The current title of the SPR.
The title can be changed, but should remain descriptive, up to 50 printing characters long including spaces.
SPR originator (Mandatory Input/Display Field)
The name of the originator of the SPR.
The originator can be replaced with a new name, up to 28 printing characters long, including spaces.
Originators address (Mandatory Input/Display Field)
The address of the originator must be supplied.
It can be up to four lines long, each with 28 printing characters including spaces.
The first line is mandatory.
Originators ref no (Optional Input/Display Field)
A reference number supplied by the originator can be entered here.
It can be up to 15 printing characters long, including spaces.
Originators tel no (Optional Input/Display Field)
The originator's telephone number may be supplied.
It can be up to 16 printing characters long, including spaces.
To proceed to the next page, press the TAB key.
3.2.0
Update SPR — Page 2
Summary
This page enables you to relate the SPR to up to five Issues; a part Issue identifier may be given if the complete identifier is not known.
It is not, however, compulsory to provide any Issues.
For more information on Issue identifiers, refer to Section 9 of this manual.
If your SPR is being based on an existing SPR, all the relevant information which was supplied for the basis will be displayed here, and can be updated for your SPR; otherwise, any existing details for your SPR will be displayed.
An example of this page is shown in figure 7.5.
The SPR identifier and title will be displayed at the top of the page, for information only; they cannot be changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Issue Identifier (Optional Input/Display Field)
This column allows the identifiers of any related Issues to be specified.
A part identifier can be provided, if the complete identifier is not known; an issue identifier can be up to 50 printing characters long, including spaces.
Error (Display Field)
When you have pressed the RETURN key to update the SPR, this page will be redisplayed and a warning code will appear in the Error column against any Issue identifiers which are invalid (non-existent) or which have not yet been despatched, but this will not prevent the SPR from being updated.
Provided no other errors exist, the SPR will have been updated.
In this case, to exit the option, press the RETURN key again.
An explanation of warning codes can be found in Appendix G or by pressing the HELP key.
To proceed to the next page, press the TAB key.
3.2.0
Update SPR — Page 3
Summary
This page enables you to indicate which versions of which modules are likely to be involved in the problem or suggestion reported by the SPR.
A maximum of 10 modules may be entered.
It is advisable to give as much indication as possible of the problem areas affected by the SPR to help those handling the SPR to isolate individual modules; it is not, however, compulsory to provide any module names.
Specific issue numbers may be entered or F and L to indicate the first and last versions; the last version can also be entered as A to indicate that the next approved version is to be included.
Combinations can also be entered, for example:
First Issue No Last Issue No 1.3L A
If your SPR is being based on an existing SPR, all the relevant information which was supplied for the basis will be displayed here, and can be updated for your SPR; otherwise, any existing details for your SPR will be displayed.
An example of this page is shown in figure 7.6.
The SPR identifier and title will be displayed at the top of the page, for information only; they cannot be changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
The scrolled area allows you to input the names of up to 10 modules affected by the problem/suggestion.
It is not compulsory to provide any module names, but for each one specified, you must provide a First Issue No and a Last Issue No.
The columns are as follows:
Module Name (Optional Input/Display Field)
This column allows the names of the affected modules to be specified.
The module names entered must exist and can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
First Issue No.
(Optional Input/Display Field)
This column allows the issue number of the first version of the specified module to be entered.
The issue number can be specified as an actual number (eg. 01.01, 01.01A), or as F to indicate the first version of the module.
A first issue number must be specified for every module name entered.
Last Issue No.
(Optional Input/Display Field)
This column allows the issue number of the last version of the specified module to be entered.
The issue number can be specified as an actual number (eg. 01.01, 01.01A), or as L to indicate the last version of the module, or as A to indicate that the next approved version should also be included.
A last issue number must be specified for every module name entered.
Error (Display Field)
An error code will be displayed in the Error column if any invalid information has been entered (for example, module name is unknown to LIFESPAN) and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be resolved before the SPR can be updated.
To proceed to the next page, press the TAB key.
3.2.0
Update SPR — Page 4
Summary
This page enables you to provide a description of the problem or suggestion.
If your SPR is being based on an existing SPR, all the relevant information which was supplied for the basis will be displayed here, and can be updated for your SPR; otherwise, any existing details for your SPR will be displayed.
An example of this page is shown in figure 7.7.
The SPR identifier and title will be displayed at the top of the page, for information only; they cannot be changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Description (Mandatory Input/Display Field)
A suitable description of the problem/suggestion should be provided in the 15 lines of the scrolled area.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
For a new SPR which is not being based on an existing SPR, LIFESPAN will provide four fields in which you may make an entry if required, as described below; it is recommended that they are completed as they provide some useful basic information.
There is no restriction on the information that can be entered, but the following guidelines may prove helpful:
Report Type should indicate whether the SPR is reporting an error in software, documentation, or whether it is an enquiry or suggestion.
Priority should suggest how quickly the SPR should be dealt with (eg. urgent, necessary, convenient).
Operating System such as VAX VMS, with the version number, if known.
Program should give the name of the relevant program, or document title, if known.
Additional information (Y/N)(Optional Input/Display Field)
This field allows you to indicate whether there is any additional information available to back up the problem outlined in the description.
This means information which is outside LIFESPAN control such as listings, letters and manuals.
Enter Y if such information exists, otherwise enter N .
To update the SPR, press the RETURN key.
3.3.0
Submit SPR
Summary
This option enables you to submit a Software Performance Report (SPR).
This means that all users who may be affected by the SPR are notified of its existence via the Mail System, and that a particular user is nominated to respond to the SPR and informed of this responsibility via the Mail System.
The Mail System is fully described in Section 10 of this manual.
An example of this option is shown in figure 7.8.
Typically, the users who may be affected by the SPR are the managers of:
the product packages associated with any Issues referenced by the SPR
the modules referenced by the SPR.
The user nominated to respond to the SPR will be the manager of one of the following:
the package associated with the first valid Issue referenced
the first module referenced, if no valid Issues have been specified
LIFESPAN, if no modules have been referenced.
Restrictions and Limitations
No special LIFESPAN privileges are required to submit an SPR, but you must be the creator of the SPR you wish to submit.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SPR identifier (Mandatory Input Field)
The identifier of the SPR to be submitted.
The SPR must already exist and must not have been submitted.
The SPR identifier is a numeric up to 6 digits long.
If the SPR identifier is acceptable, LIFESPAN will automatically display the corresponding SPR title and originator.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to submit this SPR, and press the RETURN key.
3.4.0
Accept/Reject SPR
Summary
When a Software Performance Report (SPR) has been submitted via option 3.3.0 — Submit SPR, a user is nominated to respond to it.
If you have been nominated to respond to an SPR, this option enables you to accept responsibility for the SPR or to pass it on to another user.
An example of this option is shown in figure 7.9.
Having accepted an SPR, it is recommended that an interim Software Status Report (SSR) is produced in response to the SPR (refer to Section 8 for further information on Software Status Reports).
To rectify a problem you should refer to Section 6 — Design Change System.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but you must be the holder of the SPR and the SPR must have been submitted but not yet accepted.
The current holder of the SPR can be seen using option 3.7.1 — View One SPR.
An SPR may be passed on up to 6 times using this option but LIFESPAN will not allow it to be passed to a user to whom it has been passed before.
Once this limit is reached, or the user wants to force the user to whom it has most recently been passed to accept the SPR, option 3.8.0 — Force User to Accept SPR must be used by a user with SPR SSR Controller privilege.
The last user to whom an SPR is passed is regarded as its current holder whether or not this user has accepted responsibility for it.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SPR identifier (Mandatory Input Field)
The identifier of the SPR to be accepted/rejected.
The SPR must already exist and must have been submitted, but not yet accepted.
The SPR identifier is a numeric up to 6 digits long.
If the SPR identifier is acceptable, LIFESPAN will automatically display the corresponding SPR title and originator.
Do you accept this SPR (Y/N)(Mandatory Input Field)
To accept the SPR enter Y and press the RETURN key.
To reject the SPR enter N and press the TAB key.
If you reject the SPR, LIFESPAN will display two additional prompts which must be answered.
User to whom SPR is to be passed (Mandatory Input Field)
The name of an existing LIFESPAN user to whom the SPR is to be passed, up to 28 alphanumeric characters long, including spaces.
Reason for rejection (Optional Input Field)
A comment up to 48 printing characters long, including spaces may be provided.
If you attempt to pass the SPR on for the seventh time or to the same user twice, LIFESPAN will display an error message and you will not be allowed to pass it on.
You can then either accept the SPR or ask a user with SPR SSR Controller privilege to force it onto a user.
The user to whom the SPR is to be passed will be notified of this resposibility via the Mail System.
The Mail System is fully described in Section 10 of this manual.
3.5.0
Relate SPR To Modules
Summary
This option enables you to add additional modules up to a maximum of 10 to a Software Performance Report (SPR) or to extend the range of versions of existing modules to which the fault/suggestion applies.
An example of this option is shown in figure 7.10.
Specific issue numbers may be entered or F and L to indicate the first and last versions; the last version can also be entered as A to indicate that the next approved version is to be included.
Combinations can also be entered, for example:
First Issue No Last Issue No 1.3L A
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option but you must be the current holder of the SPR, and the SPR must have been submitted but not yet closed.
If it has not been submitted, the SPR creator may update the SPR using option 3.2.0 — Update SPR.
Note that none of the existing module names can be altered using this option.
Only additional module names can be entered or the existing module version ranges extended.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SPR identifier (Mandatory Input Field)
The identifier of the SPR to be updated.
The SPR must already exist and must have been submitted but not yet closed.
The SPR identifier is a numeric up to 6 digits long.
If the SPR identifier is acceptable, LIFESPAN will automatically display the corresponding SPR title and the current list of module references.
Neither the SPR's title nor any of the existing module names can be altered.
Scrolled area (Optional Input/Display Field)
The scrolled area showns the current list of module references.
Additional modules names may now be entered, up to a maximum of 10, or the range of existing modules extended.
For every module name entered, you must provide a First Issue No and a Last Issue No.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
The columns are as follows:
Module Name (Optional Input/Display Field)
This column allows the names of any additional modules to be specified.
The module names entered must exist and can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
First Issue No.
(Optional Input/Display Field)
This column allows the issue number of the first version of the specified module to be entered.
The issue number can be specified as an actual number (eg. 01.01, 01.01A), or as F to indicate the first version of the module.
A first issue number must be specified for every module name entered.
Last Issue No.
(Optional Input/Display Field)
This column allows the issue number of the last version of the specified module to be entered.
The issue number can be specified as an actual number (eg. 01.01, 01.01A), or as L to indicate the last version of the module, or as A to indicate that the next approved version should also be included.
A last issue number must be specified for every module name entered.
These relations cannot be deleted once made and version ranges cannot be reduced with the one exception that the ‘next approved’ version A can be replaced with L .
Error (Display Field)
An error code will be displayed in the Error column if any invalid information has been entered (for example, module name is unknown to LIFESPAN) and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be resolved before the SPR can be updated.
The managers of any newly related module names will be notified of the SPR via the Mail System.
The Mail System is fully described in Section 10 of this manual.
3.6.0
Prepare SPR Listings
Summary
This index enables you to select various listing options associated with Software Performance Reports (SPRs).
An example of this index page is shown in figure 7.11.
In order to use any of these options, you must have SPR SSR Operations privilege.
Each option requires you to specify a valid name for a VMS file, up to 64 characters long, into which the listing is to be placed.
This file will be created in your current VMS directory, that is, the directory from which you invoked LIFESPAN.
3.6.1
Format SPR Into File
Summary
This option enables you to obtain a listing of a single Software Performance Report (SPR) which is suitable for printing on A4 paper; this is done by transferring the information to a VMS file so that it can be printed as required.
An example of this option is shown in figure 7.12.
Restrictions and Limitations
You must have SPR SSR Operations privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Output filename (Mandatory Input Field)
The name of a valid VMS file, up to 64 characters long, into which the SPR information is to be placed.
SPR identifier (Mandatory Input Field)
The identifier of the SPR to be formatted.
The SPR must already exist.
The SPR identifier is a numeric up to 6 digits long.
If the SPR identifier is acceptable, LIFESPAN will automatically display the corresponding SPR title.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to format this SPR, and press the RETURN key.
The listing will be produced as a background activity and the output will be placed in your current VMS directory under the specified filename.
A mail message will be created to record the outcome of the operation and a mail identifier will be allocated for this purpose; you should take careful note of it and check that the request has been successful.
The Mail System is fully described in Section 10 of this manual.
3.6.2
Prepare Listings Of All SPRs
Summary
This option enables you to obtain a listing of data relating to a specified range of Software Performance Reports (SPRs); this is done by transferring the information to a VMS file so that it can be printed as required.
An example of this option is shown in figure 7.13.
Restrictions and Limitations
You must have SPR SSR Operations privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Output filename (Mandatory Input Field)
The name of a valid VMS file, up to 64 characters long, into which the SPR information is to be placed.
Lowest SPR/Highest SPR (Optional Input/Display Field)
The lower and upper bounds for the listings.
LIFESPAN will provide two SPR identifiers as defaults.
These identifiers can be changed; the identifiers need not exist and need only approximate to the range required, as LIFESPAN will start and finish the listing with valid identifiers which are nearest to those specified but which do not exceed the range given by them.
If these fields are left blank, the listings will start and end at the highest/lowest SPR identifiers known to LIFESPAN.
Selection (Optional Input/Display Field)
You may provide one of the selection criteria to indicate the status the SPRs must have attained in order to be included in the listing.
The selection criteria are:
O — Outstanding
R — Replied to
C — Closed
A — All SPRs in the specified range.
If this field is left blank, the selection will default to A (All).
When input is complete, you should press the RETURN key.
The listing will be produced as a background activity and the output will be placed in your current VMS directory under the specified filename.
A mail message will be created to record the outcome of the operation and a mail identifier will be allocated for this purpose; you should take careful note of it and check that the request has been successful.
The Mail System is fully described in Section 10 of this manual.
3.6.3
Prepare Listings Of SPRs For Modules
Summary
This option enables you to obtain an alphabetical listing of all Software Performance Reports (SPRs) which relate to a specified range of module names; this is done by transferring the information to a VMS file so that it can be printed as required.
An example of this option is shown in figure 7.14.
Restrictions and Limitations
You must have SPR SSR Operations privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Output filename (Mandatory Input Field)
The name of a valid VMS file, up to 64 characters long, into which the SPR information is to be placed.
Start module/End module (Mandatory Input Field)
The lower and upper bounds for the listings.
A start and end module name, each up to 28 characters long, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’, must be specified to indicate the range required.
These names need not exist and need only approximate to the range required, as LIFESPAN will start and finish the listing with valid names which are nearest to those specified but which do not exceed the range given by them.
Selection (Optional Input/Display Field)
You may provide one of the selection criteria to indicate the status the SPRs must have attained in order to be included in the listing.
The selection criteria are:
O — Outstanding
R — Replied to
C — Closed
A — All SPRs in the specified range.
If this field is left blank, the selection will default to A (All).
When input is complete, you should press the RETURN key.
The listing will be produced as a background activity and the output will be placed in your current VMS directory under the specified filename.
A mail message will be created to record the outcome of the operation and a mail identifier will be allocated for this purpose; you should take careful note of it and check that the request has been successful.
The Mail System is fully described in Section 10 of this manual.
3.6.4
Prepare Listings Of SPRs For Issues
Summary
This option enables you to obtain an alphabetical listing of all Software Performance Reports (SPRs) relating to a specified range of Issues; this is done by transferring the information to a VMS file so that it can be printed as required.
An example of this option is shown in figure 7.15.
Restrictions and Limitations
You must have SPR SSR Operations privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Output filename (Mandatory Input Field)
The name of a valid VMS file, up to 64 characters long, into which the SPR information is to be placed.
Start issue/End issue (Mandatory Input Field)
The lower and upper bounds for the listings.
A start and end Issue identifier, each up to 50 printing characters long including spaces, must be specified to indicate the range required.
These identifiers need not exist and need only approximate to the range required, as LIFESPAN will start and finish the listing with valid identifiers which are nearest to those specified but which do not exceed the range given by them.
Selection (Optional Input/Display Field)
You may provide one of the selection criteria to indicate the status the SPRs must have attained in order to be included in the listing.
The selection criteria are:
O — Outstanding
R — Replied to
C — Closed
A — All SPRs in the specified range.
If this field is left blank, the selection will default to A (All).
When input is complete, you should press the RETURN key.
The listing will be produced as a background activity and the output will be placed in your current VMS directory under the specified filename.
A mail message will be created to record the outcome of the operation and a mail identifier will be allocated for this purpose; you should take careful note of it and check that the request has been successful.
The Mail System is fully described in Section 10 of this manual.
3.6.5
Prepare Listings Of SSRs For SPRs
Summary
This option enables you to obtain a listing of all Software Performance Reports (SPRs) which have been submitted and any Software Status Reports (SSRs) to which they relate; this is done by transferring the information to a VMS file so that it can be printed as required.
An example of this option is shown in figure 7.16.
Restrictions and Limitations
You must have SPR SSR Operations privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Output filename (Mandatory Input Field)
The name of a valid VMS file, up to 64 characters long, into which the SPR information is to be placed.
Lowest SPR/Highest SPR (Optional Input/Display Field)
The lower and upper bounds for the listings.
LIFESPAN will provide two SPR identifiers as defaults.
These identifiers can be changed; the identifiers need not exist and need only approximate to the range required, as LIFESPAN will start and finish the listing with valid identifiers which are nearest to those specified but which do not exceed the range given by them.
If these fields are left blank, the listings will start and end at the highest/lowest SPR identifiers known to LIFESPAN.
When input is complete, you should press the RETURN key.
The listing will be produced as a background activity and the output will be placed in your current VMS directory under the specified filename.
A mail message will be created to record the outcome of the operation and a mail identifier will be allocated for this purpose; you should take careful note of it and check that the request has been successful.
The Mail System is fully described in Section 10 of this manual.
3.7.0
View SPRs
Summary
This index enables you to select various options which allow different aspects of Software Performance Reports (SPRs) to be viewed.
An example of this index page is shown in figure 7.17.
3.7.1
View One SPR
Summary
This option enables you to view the details of one specific Software Performance Report (SPR).
There are five pages in this option, the last four of which are similar to those of option 3.2.0 — Update SPR, except that you can only view information using this option.
An example of the initial page is shown in figure 7.18.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option as it is intended to provide information for all LIFESPAN users.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SPR identifier (Mandatory Input Field)
The identifier of the SPR to be viewed.
The SPR must already exist.
The SPR identifier is a numeric up to 6 digits long.
If the SPR identifier is acceptable, LIFESPAN will automatically display:
SPR title the title of the SPR.
SPR originator the name of the person who sent in the SPR.
Date of creation the date on which the SPR was sent in.
Submitter the LIFESPAN user name of the person who submitted (created) the SPR.
Current holder the LIFESPAN user name of the person to whom the SPR was most recently passed, whether that user has accepted responsibility for it or not.
This field will be blank if the SPR has not yet been submitted.
Accepted this indicates whether the Current holder has accepted responsibility for the SPR (Y ) or not (N ).
Status the current status of the SPR.
An explanation of SPR states can be found in Appendix F.
Reminders this indicates the number of reminders which have been sent to the user who is to reply to the SPR.
For this issue of LIFESPAN this field will always be 0.
To view the next page of information about the SPR, you should press the TAB key.
The information presented on the next four pages is described under option 3.2.0 — Update SPR and is similar in format to figures 7.4 to 7.7.
You can use the TAB and BS keys to move between pages; when you have finished viewing the SPR, press the RETURN key.
3.7.2
View SPR Titles
Summary
This option enables you to view the identifier, title and status of a set of up to 10 Software Performance Reports (SPRs).
The option always lists the SPRs in descending numerical order of identifier, presenting the highest SPR identifier in the specified range as the first in the list.
An example of this option is shown in figure 7.19.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option as it is intended to provide information for all LIFESPAN users.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Highest SPR (Optional Input Field)
The identifier of the SPR to start from.
This need not be an existing identifier but, as the list is presented in descending numerical order, it should approximate to the highest identifier required.
If this field is left blank, LIFESPAN will start the list from the highest SPR identifier that is known to the system and for which details have been entered.
Scrolled Area (Display Field)
LIFESPAN will now display details for up to 10 SPRs at a time in the scrolled area and a message if there are more SPRs available for viewing.
For each entry, LIFESPAN will display the SPR identifier, SPR title and the SPR status.
An explanation of SPR states can be found in Appendix F.
To view a further set of SPRs, select the option again.
LIFESPAN will automatically display the last SPR in the current list as the new start point for the next list.
You can change this identifier if you wish.
If it is not changed, the set of SPRs following the current set will be displayed.
3.7.3
View SPRs Related To Module
Summary
This option enables you to view the identifier, title and status for a set of up to 10 Software Performance Reports (SPRs) that are related to a specified module name.
The first and last issue numbers to which the SPRs apply are also displayed.
An example of this option is shown in figure 7.20.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option as it is intended to provide information for all LIFESPAN users.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Module name (Mandatory Input Field)
The name of the module, up to 28 alphanumeric characters long, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
Highest SPR (Optional Input Field)
The identifier of the SPR to start from.
This need not be an existing identifier but, as the list is presented in descending numerical order, it should approximate to the highest identifier required.
If this field is left blank, LIFESPAN will start the list from the highest SPR identifier that is known to the system and for which details have been entered.
Scrolled Area (Display Field)
LIFESPAN will now display details for up to 10 SPRs at a time in the scrolled area and a message if there are more SPRs available for viewing.
For each entry, LIFESPAN will display the SPR identifier, SPR title, the SPR status and the First/Last issue numbers to which the SPR applies.
An explanation of SPR states can be found in Appendix F.
To view a further set of SPRs, select the option again.
LIFESPAN will automatically display the last SPR in the current list as the new start point for the next list.
You can change this identifier if you wish.
If it is not changed, the set of SPRs following the current set will be displayed.
3.7.4
View SPRs Passed To User
Summary
This option enables you to view the identifier, title and status for a set of up to 10 Software Performance Reports (SPRs) that have been passed to a specified user.
An example of this option is shown in figure 7.21.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option as it is intended to provide information for all LIFESPAN users.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
User name (Mandatory Input Field)
The name of the LIFESPAN user.
The user name must exist and can be up to 28 alphanumeric characters long, including spaces.
Highest SPR (Optional Input Field)
The identifier of the SPR to start from.
This need not be an existing identifier but, as the list is presented in descending numerical order, it should approximate to the highest identifier required.
If this field is left blank, LIFESPAN will start the list from the highest SPR identifier that is known to the system and for which details have been entered.
Scrolled Area (Display Field)
LIFESPAN will now display details for up to 10 SPRs at a time in the scrolled area and a message if there are more SPRs available for viewing.
For each entry, LIFESPAN will display the SPR identifier, SPR title and the SPR status.
An explanation of SPR states can be found in Appendix F.
To view a further set of SPRs, select the option again.
LIFESPAN will automatically display the last SPR in the current list as the new start point for the next list.
You can change this identifier if you wish.
If it is not changed, the set of SPRs following the current set will be displayed.
3.8.0
Force User To Accept SPR
Summary
This option enables you to force another user to take responsibility for a Software Performance Report (SPR).
This option must be used when an SPR has been passed on 6 times using option 3.4.0 — Accept/Reject SPR and no-one has yet taken responsibility for it.
The force facility can be used as often as required for a particular SPR, for example, if a user does not wish to take responsibility for the SPR or if a user accepts the SPR but at a later date passes the work onto someone else.
An example of this option is shown in figure 7.22.
Restrictions and Limitations
You must have SPR SSR Controller privilege to use this option, and the SPR must have been submitted but not yet closed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SPR identifier (Mandatory Input Field)
The identifier of the SPR to be forced onto a user.
The SPR must already exist and must have been submitted but not yet closed.
The SPR identifier is a numeric up to 6 digits long.
If the SPR identifier is acceptable, LIFESPAN will automatically display the corresponding SPR title and originator.
User name (Mandatory Input Field)
The name of the user to be made responsible for the SPR.
The user name must exist and can be up to 28 alphanumeric characters long, including spaces.
Comment (Optional Input Field)
A comment may be entered if required, up to 48 printing characters long, including spaces.
The specified user will be notified via the Mail System of responsibility for the SPR.
The Mail System is fully described in Section 10 of this manual.
The status of the SPR will be automatically set to Accepted .
SOFTWARE STATUS REPORTS
Introduction
The Software Status Report (SSR) system is Option 4 of the Master Level Index.
SSRs are used to reply to Software Performance Reports (SPRs), by providing an explanation of the original problem and a solution to it or by giving recommendations on how to proceed.
SSRs can also be used to describe the problem more clearly and in more detail, which is necessary because the originator of an SPR may not have been able to indicate the full extent of the problem or how it applies to other users.
In addition, SSRs may be sent out at any time to inform users of the current status of software.
All these facilities are accessed from the index page shown in figure 8.1.
Users must have SPR SSR Operations privilege to use the listing options and SPR SSR Controller privilege to use the Submit SSR option; these privileges must be assigned by an ascendant using option 7.2.2 — Update User Details.
A more detailed explanation of how the overall SSR system functions, and the philosophy behind it, is given in the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
4.1.0
Create SSR
Summary
This option enables you to create a Software Status Report (SSR).
An example of this option is shown in figure 8.2.
Restrictions and Limitations
No special LIFESPAN privileges are required to create an SSR.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SSR title (Mandatory Input Field)
The title for the SSR.
This should be as descriptive as possible, and can be up to 50 printing characters long, including spaces.
SSR originator (Mandatory Input Field)
The name of the person creating the SSR.
The originator can be up to 28 printing characters long, including spaces.
When the page is complete, you should press the RETURN key.
If the operation is successful, LIFESPAN will allocate a unique SSR identifier up to 6 digits long.
The SSR identifier will be displayed on the screen, and careful note should be taken of it, as it cannot be altered and must be supplied in all future references to this SSR.
Once the SSR has been created you should use option 4.2.0 — Update SSR to add further details to the SSR and then use option 4.3.0 — Submit SSR, to submit the SSR.
4.2.0
Update SSR
Summary
This option enables you to update an Software Status Report (SSR).
The Update SSR option can be used for three different purposes:
to enter information about an SSR for the first time
to update the information already entered about an SSR
to specify that a new SSR is to be based on an existing SSR, and to update the information to suit the new SSR.
The option consists of five pages, an initial page and:
Update SSR — Page 1 — to enter details about the Originator
Update SSR — Page 2 — to enter details about any related SPRs
Update SSR — Page 3 — to enter details about any modules affected
Update SSR — Page 4 — to enter a description for the SSR.
When you select this option, the initial page will be displayed to obtain the identifier of the SSR to be updated.
An example of this page is shown in figure 8.3.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option but you must be the creator of the SSR and the SSR must not have been submitted.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SSR identifier (Mandatory Input Field)
The identifier of the SSR to be updated.
The SSR must already exist and must not have been submitted.
The SSR identifier is a numeric up to 6 digits long.
If the SSR identifier is acceptable, LIFESPAN will display the SSR title and the SSR originator, and will fill in the Basis with your SSR identifier.
Any existing information will be displayed on the subsequent pages.
Basis (Optional Input/Display Field)
If you wish to base the current SSR on an existing SSR, the identifier of the basis SSR should be entered here.
If supplied, the basis must already exist.
If a basis is supplied, LIFESPAN will display the corresponding SSR title and originator and the information on the subsequent pages will be replaced with the basis details (except for the SSR title).
If this is not the correct basis, it can be changed.
The basis will default to the identifier of the SSR being updated.
To proceed to the next page, press the TAB key.
4.2.0
Update SSR — Page 1
Summary
This page enables you to update the information relating to the originator of the SSR.
If your SSR is being based on an existing SSR, all the relevant information which was supplied for the basis will be displayed here, and can be updated for your SSR; otherwise, any existing details for your SSR will be displayed.
An example of the page is shown in figure 8.4.
The SSR identifier will be displayed at the top of the page, for information only; it cannot be changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SSR title (Mandatory Input/Display Field)
The current title of the SSR.
The title can be changed, but should remain descriptive, up to 50 printing characters long, including spaces.
SSR originator (Mandatory Input/Display Field)
The name of the originator of the SSR.
The originator can be replaced with a new name, up to 28 printing characters long, including spaces.
Originators address (Mandatory Input/Display Field)
The address of the originator must be supplied.
It can be up to four lines long, each with 28 printing characters including spaces.
The first line is mandatory.
Originators ref no (Optional Input/Display Field)
A reference number supplied by the originator can be entered here.
It can be up to 15 printing characters long, including spaces.
Originators tel no (Optional Input/Display Field)
The originator's telephone number may be supplied.
It can be up to 16 printing characters long, including spaces.
To proceed to the next page, press the TAB key.
4.2.0
Update SSR — Page 2
Summary
This page enables you to relate the SSR to up to 10 Software Performance Reports (SPRs) which have some connection to the SSR being updated.
You can indicate which SPRs are to be Closed or Replied to at this page, in preparation for making these relationships fixed once the SSR is submitted.
An SPR may be Closed if the problem or suggestion it reports has been dealt with, and an SPR may be Replied to if the work is still outstanding.
It is not, however, compulsory to provide any SPRs.
For more information on SPRs, refer to Section 7 of this manual.
If your SSR is being based on an existing SSR, all the relevant information which was supplied for the basis will be displayed here, and can be updated for your SSR; otherwise, any existing details for your SSR will be displayed.
An example of this page is shown in figure 8.5.
The SSR identifier and title will be displayed at the top of the page, for information only; they cannot be changed.
Restrictions and Limitations
If any SPRs are specified, the following conditions must be satisfied:
the SPR identifier must be known to LIFESPAN and must have been submitted
to Close an SPR, it must already have been accepted using option 3.4.0 or 3.8.0 and may not have been closed already via another SSR
to Reply to an SPR, it may be both unaccepted and already closed via another SSR.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
The scrolled area allows you to enter the list of SPRs being answered and the required relation.
A maximum of 10 SPRs can be entered, although it is not compulsory to provide any SPRs.
SPR Id (Optional Input/Display Field)
This column allows the identifiers of any related SPRs to be specified.
An SPR identifier is a numeric up to 6 digits long.
Relation (Optional Input/Display Field)
This column allows you to indicate whether the SSR ‘Replies to’ or ‘Closes’the corresponding SPR.
The relationship can be specified as R (Replies to) or C (Closes).
On completion, you should press the PF1/<down arrow> key.
LIFESPAN will display the titles and states of any SPRs supplied.
If these are not the required SPRs, you can BS to the scrolled area and make any necessary changes.
An explanation of SPR states can be found in Appendix F.
Error (Display Field)
An error code will appear in the Error column if any invalid information has been entered (for example, an SPR identifier which is unknown to LIFESPAN) and an error message will be displayed at the foot of the page.
An explanation of error codes can be found in Appendix G or by pressing the HELP key.
All errors must be corrected before the SSR can be updated.
To proceed to the next page, press the TAB key.
4.2.0
Update SSR — Page 3
Summary
This page enables you to indicate which versions of which modules are likely to be involved in the problem or suggestion responded to by the SSR.
A maximum of 10 modules may be entered; however, it is not compulsory to provide any module names.
Specific issue numbers may be entered or F and L to indicate the first and last versions; the last version can also be entered as A to indicate that the next approved version is to be included.
Combinations can also be entered, for example:
If your SSR is being based on an existing SSR, all the relevant information which was supplied for the basis will be displayed here, and can be updated for your SSR; otherwise, any existing details for your SSR will be displayed.
An example of the page is shown in figure 8.6.
The SSR identifier and title will be displayed at the top of the page, for information only; they cannot be changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
The scrolled area allows you to input the names of up to 10 modules affected by the SSR.
It is not compulsory to provide any module names, but for each one specified, you must provide a First Issue No and a Last Issue No.
The columns are as follows:
Module Name (Optional Input/Display Field)
This column allows the names of the affected modules to be specified.
The module names entered must exist and can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
First Issue No.
(Optional Input/Display Field)
This column allows the issue number of the first version of the specified module to be entered.
The issue number can be specified as an actual number (eg. 01.01, 01.01A), or as F to indicate the first version of the module.
A first issue number must be specified for every module name entered.
Last Issue No.
(Optional Input/Display Field)
This column allows the issue number of the last version of the specified module to be entered.
The issue number can be specified as an actual number (eg. 01.01, 01.01A), or as L to indicate the last version of the module, or as A to indicate that the next approved version should also be included.
A last issue number must be specified for every module name entered.
Error (Display Field)
An error code will be displayed in the Error column if any invalid information has been entered (for example, module name is unknown to LIFESPAN) and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be resolved before the SSR can be updated.
To proceed to the next page, press the TAB key.
4.2.0
Update SSR — Page 4
Summary
This page enables you to provide a description for the SSR.
If your SSR is being based on an existing SSR, all the relevant information which was supplied for the basis will be displayed here, and can be updated for your SSR; otherwise, any existing details for your SSR will be displayed.
An example of the page is shown in figure 8.7.
The description should outline the steps taken to remedy the reported problem, or indicate how the suggestion was handled.
Alternatively, it can be used to give information about an issue or piece of software, without an SPR having been received.
It is recommended that the description should give some indication of how important the SSR is, in terms of its impact on existing modules, as well as suggesting how quickly its recommendations should be implemented.
The SSR identifier and title will be displayed at the top of the page, for information only; they cannot be changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Description (Mandatory Input/Display Field)
A suitable description of the remedy should be provided in the 15 lines of the scrolled area.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Additional information (Y/N)(Optional Input/Display Field)
This field allows you to indicate whether there is any additional information available to back up the remedy outlined in the description.
This means information which is outside LIFESPAN control such as listings, letters and manuals.
Enter Y if such information exists, otherwise enter N .
To update the SSR, press the RETURN key.
4.3.0
Submit SSR
Summary
This option enables you to submit a Software Status Report (SSR).
An example of this option is shown in figure 8.8.
Submission of the SSR causes it to be distributed to all:
LIFESPAN users who submitted any SPR to which the SSR responds
managers of modules to which the SSR is applicable.
In addition, the managers of packages containing modules to which, regardless of version, the SSR refers, will be asked to endorse the SSR, unless the package is already on the SSR.
These users are notified of the existence of the SSR via the Mail System.
The Mail System is fully described in Section 10 of this manual.
Submission of the SSR will also cause the status of any SPR to which the SSR replies to be updated automatically by LIFESPAN, to reflect the relationship specified for the SPR on page 2 of option 4.2.0 — Update SSR, which is shown in figure 8.5.
Restrictions and Limitations
You must have SPR SSR Controller privilege to submit an SSR and you must be either the creator of the SSR or an ancestor of the creator.
If the SSR relates to an SPR, the following conditions must be satisfied before the SSR can be submitted:
the SPR must have been submitted already
if the SSR is to close an SPR, the SPR must have been accepted previously by a LIFESPAN user and must not have been closed via another SSR.
In addition, the SSR must refer either to an SPR or to a valid module.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SSR identifier (Mandatory Input Field)
The identifier of the SSR to be submitted.
The SSR must already exist and must not have been submitted.
The SSR identifier is a numeric up to 6 digits long.
If the SSR identifier is acceptable, LIFESPAN will automatically display the corresponding SSR title and originator.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to submit this SSR, and press the RETURN key.
4.4.0
Endorse SSR
Summary
This option enables you to endorse a Software Status Report (SSR) for a single package or a set of packages.
Endorsement is the process by which all users likely to be affected by an SSR are informed of its existence and permitted to accept or reject it according to their usage of it.
The managers of all packages containing a module which, regardless of version, is referred to by the SSR, are requested to consider the SSR in relation to the way it affects their use of the module.
Accordingly, they should either:
accept the SSR and specify the range of versions of their package to which it should refer
reject the SSR as irrelevant and, perhaps, create a new SSR which is more appropriate to their application.
If the manager accepts the SSR, then the package and specified range of versions are added to the list of modules to which the SSR refers.
The SSR is distributed to the managers of further packages which contain the package for which the SSR was endorsed, unless the package is already on the SSR or the manager has previously been asked to endorse the SSR for the package.
The endorsement process is repeated until the SSR has been distributed to the managers of all packages which may be affected by it and accepted or rejected by them.
If the manager rejects the SSR, the process stops for that SSR.
The option consists of three pages, an initial page and
Endorse SSR — Accept — to accept the SSR for a set of packages
Endorse SSR — Reject — to reject the SSR for a set of packages.
An example of the initial page of this option is shown in figure 8.9.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but you must have been requested to endorse the SSR for specific package(s) via the Mail System.
The Mail System is fully described in Section 10 of this manual.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SSR Id (Mandatory Input Field)
The identifier of the SSR to be endorsed.
The SSR must already exist and must have been submitted.
The SSR identifier is a numeric up to 6 digits long.
Start Package (Optional Input Field)
A start package may be specified as a start point for the list.
This is really only required if there are more than 9 packages to be endorsed, so that it is necessary to specify where the list is to start.
If specified, the start package must exist; the package name can be up to 28 alphanumeric characters long, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
If the SSR identifier and Start package are acceptable, LIFESPAN will automatically display the corresponding SSR title.
Scrolled area (Optional Input/Display Field)
The scrolled area will display the packages that have to be endorsed, from the start package specified, and you may enter a Mark to indicate which packages you wish to accept or reject.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Mark (Optional Input Field)
To endorse a package enter A (Accept) or R (Reject) beside the relevant package in the Mark column.
Although it is not necessary to mark each package in the list, all endorsement marks given must be the same as it is not possible to accept some packages and reject others at the same time.
Error (Display Field)
An error code will be displayed in the Error column if any invalid information has been entered (for example, invalid mark).
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be resolved before you can proceed to the next page.
To proceed to the next page, you should press the PF1/<down arrow> key.
4.4.0
Endorse SSR — Accept
Summary
This page enables you to endorse the list of packages previously marked for acceptance.
An example of this page is shown in figure 8.10.
Specific issue numbers may be entered or F and L to indicate the first and last versions; the last version can also be entered as A to indicate that the next approved version is to be included.
Combinations can also be entered, for example:
The SSR identifier and SSR title will be displayed at the top of the page for information only; they cannot be changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Mandatory Input/Display Field)
The scrolled area allows you to specify the versions of the packages that are affected by the SSR.
You must provide a First Issue No and a Last Issue No.
The columns are as follows:
First Issue No.
(Mandatory Input Field)
This column allows the issue number of the first version of the corresponding package to be entered.
The issue number can be specified as an actual number (eg. 01.01, 01.01A), or as F to indicate the first version of the package.
A first issue number must be specified for every package name.
Last Issue No.
(Mandatory Input Field)
This column allows the issue number of the last version of the corresponding package to be entered.
The issue number can be specified as an actual number (eg. 01.01, 01.01A), or as L to indicate the last version of the package, or as A to indicate that the next approved version should also be included.
A last issue number must be specified for every package name.
Error (Display Field)
An error code will be displayed in the Error column if any invalid information has been entered (for example, issue number is unknown to LIFESPAN) and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be resolved before the acceptance can proceed.
To enter the endorsement, press the RETURN key.
4.4.0
Endorse SSR — Reject
Summary
This page enables you to endorse the list of packages marked previously for rejection.
An example of this page is shown in figure 8.11.
The SSR identifier and SSR title will be displayed at the top of the page for information only; they cannot be changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Comment (Optional Input Field)
This column allows a comment to be provided giving a reason for the rejection, which can be up to 48 printing characters long, including spaces.
To enter the endorsement, press the RETURN key.
4.5.0
Add SSR Relations
Summary
This index enables you to select various options allowing relations to be added to a Software Status Report (SSR).
An example of this index page is shown in figure 8.12.
4.5.1
Relate SSR To Modules
Summary
This option enables you to add more modules relationships to a submitted Software Status Report (SSR) or to extend the range of versions of existing modules which are already related to the SSR.
An example of this option is shown in figure 8.13.
Specific issue numbers may be entered or F and L to indicate the first and last versions; the last version can also be entered as A to indicate that the next approved version is to be included.
Combinations can also be entered, for example:
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option but you must have submitted the SSR.
If the SSR has not been submitted, the SSR creator may update the SSR using option 4.2.0 — Update SSR.
Note that none of the existing module names can be altered using this option.
Only additional module names can be entered or the existing module version ranges extended.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SSR id (Mandatory Input Field)
The identifier of the SSR to be updated.
The SSR must already exist and must have been submitted.
The SSR identifier is a numeric up to 6 digits long.
Start module (Optional Input Field)
An SSR can refer to as many modules as required, although additional modules can only be added to the end of the list.
In this case, it may be necessary to specify a start module to reach the end of the list, but this is really only required if there are currently more than 10 modules related to the SSR.
If specified, the start module must exist; the module name can be up to 28 alphanumeric characters long, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
If the information is acceptable, LIFESPAN will automatically display the corresponding SSR title and the current list of module references.
Neither the SSR title nor any of the existing module names can be altered.
Scrolled area (Optional Input/Display Field)
The scrolled area showns the current list of module references, from the start module specified (or from the first module on the SSR if no start module has been specified).
Additional modules names may now be entered or the range of existing modules extended.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
The other columns are:
Module Name (Optional Input/Display Field)
This column allows the names of the additional modules to be specified.
The module names entered must exist and can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
First Issue No.
(Optional Input/Display Field)
This column allows the issue number of the first version of the specified module to be entered.
The issue number can be specified as an actual number (eg. 01.01, 01.01A), or as F to indicate the first version of the module.
A first issue number must be specified for every module name entered.
Last Issue No.
(Optional Input/Display Field)
This column allows the issue number of the last version of the specified module to be entered.
The issue number can be specified as an actual number (eg. 01.01, 01.01A), or as L to indicate the last version of the module, or as A to indicate that the next approved version should also be included.
A last issue number must be specified for every module name entered.
These relations cannot be deleted once made and version ranges cannot be reduced with the one exception that the ‘next approved’ version A can be replaced with L .
Error (Display Field)
An error code will be displayed in the Error column if any invalid information has been entered (for example, module name is unknown to LIFESPAN) and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be resolved before the SSR can be updated.
The managers of any newly related module names will be notified of the SSR and the managers of packages containing newly related modules, regardless of issue number, will be asked to endorse the SSR unless the package is already on the SSR or the manager has previously been asked to endorse the SSR for this package.
The relevant users are notified via the Mail System.
The Mail System is fully described in Section 10 of this manual.
4.5.2
Relate SSR To SPRs
Summary
This option enables you to add additional Software Performance Reports (SPRs) to a submitted Software Status Report (SSR), up to a maximum of 10.
The option consists of two pages:
Relate SSR To SPRs
Relate SSR To SPRs — Additional SPRs.
An example of the initial page of this option is shown in figure 8.14.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option but you must have submitted the SSR.
If the SSR has not been submitted, the SSR creator may update the SSR using option 4.2.0 — Update SSR.
Any SPRs added must satisfy the following conditions:
the SPR identifier must be known to LIFESPAN and must have been submitted
to Close an SPR, it must already have been accepted using option 3.4.0 or 3.8.0 and may not have been closed already via another SSR
to Reply to an SPR, it may be both unaccepted and already closed via another SSR.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SSR id (Mandatory Input Field)
The identifier of the SSR to be updated.
The SSR must already exist and must have been submitted.
The SSR identifier is a numeric up to 6 digits long.
LIFESPAN will now display the title of the specified SSR and the list of SPRs which are currently related to it.
For each SPR, the identifier, relation and title will be displayed.
This information cannot be altered.
To add additional SPRs, proceed to the next page, by pressing the TAB key.
4.5.2
Relate SSR To SPRs — Additional SPRs
Summary
This page enables you to relate additional SPRs to your SSR, up to the maximun indicated.
An example of this page is shown in figure 8.15.
The SSR identifier and title will be displayed at the top of the page, for information only; they cannot be changed.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
The scrolled area allows you to enter any additional SPRs.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
SPR id (Optional Input/Display Field)
This column allows the identifiers of any additional SPRs to be specified.
The SPR identifier must exist.
An SPR identifier is a numeric up to 6 digits long.
Relation (Optional Input/Display Field)
This column allows you to indicate whether the SSR ‘Replies to’ or ‘Closes’the corresponding SPR.
The relationship can be specified as R (Replies to) or C (Closes).
On completion, you should press the PF1/<down arrow> key.
LIFESPAN will display the titles of any SPRs supplied.
If these are not the required SPRs, you can BS to the scrolled area and make any necessary changes.
Error (Display Field)
An error code will appear in the Error column if any invalid information has been entered (for example, an SPR identifier which is unknown to LIFESPAN) and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be corrected before the SSR can be updated.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to add these relationships, and press the RETURN key.
All LIFESPAN users who submitted any newly referenced SPRs will be informed about the SSR via the Mail System, unless the SPR and SSR submitters are the same user.
The Mail System is fully described in Section 10 of this manual.
The status of any newly referenced SPRs will be updated automatically by LIFESPAN to reflect the new relationship.
4.6.0
Prepare SSR Listings
Summary
This index enables you to select various listings associated with Software Status Reports (SSRs).
An example of this index page is shown in figure 8.16.
In order to use any of these options you must have SPR SSR Operations privilege.
Each option requires you to specify a valid name for a VMS file, up to 64 characters long, into which the listing is to be placed.
This file will be created in your current VMS directory, that is, the directory from which you invoked LIFESPAN.
4.6.1
Format SSR Into File
Summary
This option enables you to obtain a listing of a single Software Status Report (SSR) which is suitable for printing on A4 paper; this is done by transferring the information to a VMS file so that it can be printed as required.
An example of this option is shown in figure 8.17.
Restrictions and Limitations
You must have SPR SSR Operations privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Output filename (Mandatory Input Field)
The name of a valid VMS file, up to 64 characters long, into which the SSR information is to be placed.
SSR identifier (Mandatory Input Field)
The identifier of the SSR to be formatted.
The SSR must already exist.
The SSR identifier is a numeric up to 6 digits long.
If the SSR identifier is acceptable, LIFESPAN will automatically display the corresponding SSR title.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to format this SSR, and press the RETURN key.
The listing will be produced as a background activity and the output will be placed in your current VMS directory under the specified filename.
A mail message will be created to record the outcome of the operation and a mail identifier will be allocated for this purpose; you should take careful note of it and check that the request has been successful.
The Mail System is fully described in Section 10 of this manual.
4.6.2
Prepare Listings Of All SSRs
Summary
This option enables you to obtain a listing of data relating to a specified range of Software Status Reports (SSRs); this is done by transferring the information to a VMS file so that it can be printed as required.
An example of this option is shown in figure 8.18.
Restrictions and Limitations
You must have SPR SSR Operations privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Output filename (Mandatory Input Field)
The name of a valid VMS file, up to 64 characters long, into which the SSR information is to be placed.
Lowest SSR/Highest SSR (Optional Input Field)
The lower and upper bounds for the listings.
LIFESPAN will provide two SSR identifiers as defaults.
These identifiers can be changed; the identifiers need not exist and need only approximate to the range required, as LIFESPAN will start and finish the listing with valid identifiers which are nearest to those specified but which do not exceed the range given by them.
If these fields are left blank, the listing will start/end at the highest/lowest SSR identifiers known to LIFESPAN.
When input is complete you should press the RETURN key.
The listing will be produced as a background activity and the output will be placed in your current VMS directory under the specified filename.
A mail message will be created to record the outcome of the operation and a mail identifier will be allocated for this purpose; you should take careful note of it and check that the request has been successful.
The Mail System is fully described in Section 10 of this manual.
4.6.3
Prepare Listings Of SSRs For Modules
Summary
This option enables you to obtain an alphabetical listing of all Software Status Reports (SSRs) which relate to a specified range of module names; this is done by transferring the information to a VMS file so that it can be printed as required.
An example of this option is shown in figure 8.19.
Restrictions and Limitations
You must have SPR SSR Operations privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Output filename (Mandatory Input Field)
The name of a valid VMS file, up to 64 characters long, into which the SSR information is to be placed.
Start module/End module (Mandatory Input Field)
The lower and upper bounds for the listings.
A start and end module name, each up to 28 characters long, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’, must be specified to indicate the range required.
These names need not exist and need only approximate to the range required, as LIFESPAN will start and finish the listing with valid names which are nearest to those specified but which do not exceed the range given by them.
When input is complete you should press the RETURN key.
The listing will be produced as a background activity and the output will be placed in your current VMS directory under the specified filename.
A mail message will be created to record the outcome of the operation and a mail identifier will be allocated for this purpose; you should take careful note of it and check that the request has been successful.
The Mail System is fully described in Section 10 of this manual.
4.7.0
View SSRs
Summary
This index enables you to select various options which allow different aspects of Software Status Reports (SSRs) to be viewed.
An example of this index page is shown in figure 8.20.
4.7.1
View One SSR
Summary
This option enables you to view the details of one specific Software Status Report (SSR).
There are five pages in this option, the last four of which are similar to those of option 4.2.0 — Update SSR except that the user can only view information using this option.
An example of the initial page is shown in figure 8.21.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option as it is intended to provide information for all LIFESPAN users.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
SSR identifier (Mandatory Input Field)
The identifier of the SSR to be viewed.
The SSR must already exist.
The SSR identifier is a numeric up to 6 digits long.
If the SSR identifier is acceptable, LIFESPAN will automatically display
SSR title the title of the SSR.
SSR originator the name of the person who created the SSR.
Date last updated the date on which the SSR was last updated.
Submitter the LIFESPAN user name of the person who submitted the SSR, or created it, if it has not been submitted.
To view the next page of information about the SSR, you should press the TAB key.
The information presented on the next four pages is described under option 4.2.0 — Update SSR and is similar in format to figures 8.4 and 8.7.
You can use the TAB and BS keys to move between pages and press the RETURN key when viewing is complete.
Note, however, that on the fourth page of this option View One SSR — Page 3, there is now a Start module field.
You may provide the name of an existing module, up to 28 alphanumeric characters long, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’, from which the list is to start.
If you do not indicate a start point for the list, LIFESPAN will start the list in the order the modules were entered into LIFESPAN.
4.7.2
View SSR Titles
Summary
This option enables you to view the identifier, title and status of a set of up to 10 Software Status Reports (SSRs).
The option always lists the SSRs in descending numerical order of identifier, presenting the highest SSR identifier in the specified range as the first in the list.
An example of this option is shown in figure 8.22.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option as it is intended to provide information for all LIFESPAN users.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Highest SSR (Optional Input Field)
The identifier of the SSR to start from.
This need not be an existing identifier but, as the list is presented in descending numerical order, it should approximate to the highest identifier required.
If this field is left blank, LIFESPAN will start the list from the highest SSR identifier that is known to the system and for which details have been entered.
Scrolled Area (Display Field)
LIFESPAN will now display details for up to 10 SSRs at a time in the scrolled area and a message if there are more SSRs available for viewing.
For each entry, LIFESPAN will display the SSR identifier, SSR title and the SSR status.
An explanation of SSR states can be found in Appendix F.
To view a further set of SSRs, select the option again.
LIFESPAN will automatically display the last SSR in the current list as the new start point for the next list.
You can change this identifier if you wish.
If it is not changed, the set of SSRs following the current set will be displayed.
4.7.3
View SSRs Related To Module
Summary
This option enables you to view the identifier, title and status for a set of up to 10 submitted Software Status Reports (SSRs) that are related to a specified module name.
The first and last issue numbers to which the SSRs apply are also displayed.
An example of this option is shown in figure 8.23.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option as it is intended to provide information for all LIFESPAN users.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Module name (Mandatory Input Field)
The name of the module, up to 28 characters long, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
Highest SSR (Optional Input Field)
The identifier of the SSR to start from.
This need not be an existing identifier but, as the list is presented in descending numerical order, it should approximate to the highest identifier required.
If this field is left blank, LIFESPAN will start the list from the highest SSR identifier that is known to the system and for which details have been entered.
Scrolled Area (Display Field)
LIFESPAN will now display details for up to 10 SSRs at a time in the scrolled area and a message if there are more SSRs available for viewing.
For each entry, LIFESPAN will display the SSR identifier, SSR title and the SSR status, and the First and Last issue numbers of the module to which the SSR is applicable.
An explanation of SSR states can be found in Appendix F.
To view a further set of SSRs, select the option again.
LIFESPAN will automatically display the last SSR in the current list as the new start point for the next list.
You can change this identifier if you wish.
If it is not changed, the set of SSRs following the current set will be displayed.
PRODUCTS, CLIENTS AND ISSUES
Introduction
The system for creating and controlling Products is Option 5 of the Master Level Index.
All facilities are accessed from the index page shown in figure 9.1.
In order to use the options in the Product System, you will require Marketing privilege, assigned by an ascendant using option 7.2.2 — Update User Details.
If you do not have Marketing privilege, you will be able to view the various Index pages, but you will be prevented from entering any of the available options.
An appropriate warning message will be displayed to alert you to the lack of privilege, however you can still read the HELP pages for general information.
On any Product page where both an identifier and title prompt appear, you can enter either the identifier or the title to indicate the item required.
If the LIFESPAN cache facility displays an identifier, the title can be entered and the identifier displayed by LIFESPAN simply ignored.
The TAB and BS keys can be used to move between the fields.
The last item entered at either of these prompts will be taken as the current item, even if an incompatible entry has been made at the other prompt.
LIFESPAN will always fill in the other field with the correct information later when it retrieves the details for that item.
A more detailed explanation of Packages and Products is given in the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
5.1.0
Product Management
Summary
This index enables you to select an option to either create a Product, update a Product, or register a Product.
An example of this index page is shown in figure 9.2.
The generation of a Product is a combination of these options.
You must first create a Product, update it and then, finally, register it.
A Product is created once, may be updated many times and is then registered once.
5.1.1
Create Product
Summary
This option enables you to create a Product.
An example of this option is shown in figure 9.3.
Restrictions and Limitations
You must have LIFESPAN Marketing privilege to create a Product.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Title (Mandatory Input Field)
The title of the Product.
This should be as descriptive as possible, and can be up to 50 printing characters long, including spaces.
When the page is complete, you should press the RETURN key.
If the operation is successful, LIFESPAN will allocate a unique Product identifier up to 6 digits long.
The Product identifier will be displayed on the screen, and careful note should be taken of it, as it cannot be altered.
Either the identifier or the title must be supplied in all future references to this Product.
Once the Product has been created you should use option 5.1.2 — Update Product to add further details to the Product and then use option 5.1.3 — Register Product, to register the Product.
Once registered, the details cannot be altered.
5.1.2
Update Product
Summary
This option enables you to update a Product either to enter information about a Product for the first time or to update existing information about a Product.
An example of this option is shown in figure 9.4.
Any detail on the page, except the Product identifier, can be updated.
Restrictions and Limitations
You must have LIFESPAN Marketing privilege to update a Product.
The Product must have been created before it can be used by this option, and must still be unregistered.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Product identifier/Product title (Mandatory Input/Display Field)
The identifier/title of the Product to be updated.
The Product must already exist and must not have been registered.
You must provide either the Product identifier or the Product title.
The Product identifier is a numeric up to 6 digits long; the Product title can be up to 50 printing characters long, including spaces.
If the information is acceptable, LIFESPAN will automatically fill in the missing identifier/title, and display the current details for the Product (if any exist).
New product title (Optional Input/Display Field)
A new product title can be specified to replace the existing title, up to 50 printing characters long, including spaces.
Any future reference to this Product must be made by either the existing Product identifier or this new title.
Product package (Optional Input/Display Field)
The name of the product package to be associated with the Product.
The product package must exist (and must have been created as a product using option 1.1.1 — Create Package/Product).
The name can be up to 28 alphanumeric characters long, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
Package version (Optional Input/Display Field)
The version of the product package to be used (eg. 01.01, 01.01A).
It is recommended but not essential that the version supplied for the Product package be an approved version.
A warning message will be displayed if it is a development version, or if that version does not exist for the given Product package at this time.
To update the Product details, press the RETURN key.
5.1.3
Register Product
Summary
This option enables you to register the details of a Product, which means that they will be stored permanently and cannot be altered thereafter, so it is important to be sure that they are correct before using the option.
An example of this option is shown in figure 9.5.
Restrictions and Limitations
You must have LIFESPAN Marketing privilege to register a Product.
The Product must have been updated before it can be used by this option, and must still be unregistered.
The Product can only be registered if a known Product package and Package version have been entered using option 5.1.2 — Update Product.
A warning message will be displayed if the Package version has not been approved however this will not prevent registration.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Product identifier/Product title (Mandatory Input/Display Field)
The identifier/title of the Product to be registered.
The Product must already exist and must not have been registered.
You must provide either the Product identifier or the Product title.
The Product identifier is a numeric up to 6 digits long; the Product title can be up to 50 printing characters long, including spaces.
If the information is acceptable, LIFESPAN will automatically fill in the missing identifier/title, and display the current details.
Product package (Display Field)
The name of the product package to be associated with the Product.
Package version (Display Field)
The version of the product package to be used (eg. 01.01, 01.01A).
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to register the Product and press the RETURN key.
5.2.0
Client Management
Summary
This index enables you to select the option to either create a Client or update a Client.
An example of this index page is shown in figure 9.6.
5.2.1
Create Client
Summary
This option enables you to create a Client.
An example of this option is shown in figure 9.7.
Restrictions and Limitations
You must have LIFESPAN Marketing privilege to create a Client.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Title (Mandatory Input Field)
The title for the Client.
This should be as descriptive as possible, and can be up to 30 printing characters long, including spaces.
When the page is complete, you should press the RETURN key.
If the operation is successful, LIFESPAN will allocate a unique Client identifier up to 6 digits long.
The Client identifier will be displayed on the screen, and careful note should be taken of it, as it cannot be altered.
Either the identifier or the title must be supplied in all future references to this Client.
Once the Client has been created you should use option 5.2.2 — Update Client to add further details to the Client.
5.2.2
Update Client
Summary
This option enables you to update a Client either to enter information about a Client for the first time or to update existing information about a Client.
An example of this option is shown in figure 9.8.
Any detail on the page, except the Client identifier, can be updated.
Restrictions and Limitations
You must have LIFESPAN Marketing privilege to update a Client.
The Client must have been created before it can be used at this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Client identifier/Client title (Mandatory Input/Display Field)
The identifier/title of the Client to be updated.
The Client must already exist.
You must provide either the Client identifier or the Client title.
The Client identifier is a numeric up to 6 digits long; the Client title can be up to 30 printing characters long, including spaces.
If the information is acceptable, LIFESPAN will automatically fill in the missing identifier/title, and display the current details.
New client title (Optional Input/Display Field)
A new client title can be specified to replace the existing title, up to 30 printing characters long, including spaces.
Any future reference to this Client must be made by either the existing Client identifier or this new title.
Client name (Optional Input/Display Field)
The Client's official business name, up to 28 printing characters long, including spaces.
Client address (Optional Input/Display Field)
The client's address; this can be supplied over four lines, each up to 28 printing characters long, including spaces.
Client tel no (Optional Input/Display Field)
The Client's telephone number, up to 16 printing characters long, including spaces.
Contact name (Optional Input/Display Field)
The name of a first point of contact within the organisation, up to 28 printing characters long, including spaces.
Comments (Optional Input/Display Field)
A comment or cross-reference, up to 48 printing characters long, including spaces.
To update the Client details, press the RETURN key.
5.3.0
Issue Management
Summary
This index enables you to select the option to either create an Issue or update an Issue.
An example of this index page is shown in figure 9.9.
5.3.1
Create Issue
Summary
This option enables you to enter the details of an Issue which forms an association, like a cross-reference, between a Product and a Client .
Every copy of the Issue which is sent out has a unique Issue identifier assigned by the user.
An example of this option is shown in figure 9.10.
Restrictions and Limitations
You must have LIFESPAN Marketing privilege to create an Issue, and the Product must already have been registered (using option 5.1.3) and the Client must already have been created (using option 5.2.1).
Note that LIFESPAN only checks the first three items (Issue identifier, Product identifier/title, Client identifier/title) and inserts missing titles or identifiers once you have entered information for all three items.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Issue identifier (Mandatory Input Field)
The name for the new Issue identifier which must be unique and can be up to 50 printing characters long, including spaces.
It could, for example, be the Product title with an integer appended to represent the copy number of the Issue.
Product identifier/Product title (Mandatory Input/Display Field)
The identifier/title of the Product to be used in the Issue.
The Product must already exist and must have been registered.
You must provide either the Product identifier or the Product title.
The Product identifier is a numeric up to 6 digits long; the Product title can be up to 50 printing characters long, including spaces.
Client identifier/Client title (Mandatory Input/Display Field)
The identifier/title of the Client to be used in the Issue.
The Client must already exist.
You must provide either the Client identifier or the Client title.
The Client identifier is a numeric up to 6 digits long; the Client title can be up to 30 printing characters long, including spaces.
If the information is acceptable, LIFESPAN will automatically fill in the missing identifiers/titles.
You may now enter the following details.
Contact name (Optional Input Field)
The name of the contact most closely involved with this Issue within the Client's organisation, up to 28 printing characters long, including spaces.
Order date (Optional Input Field)
The date on which the order request was received, in the form dd-MMM-yyyy .
Despatch date (Optional Input Field)
The proposed or actual despatch date for the order, in the form dd-MMM-yyyy .
Despatched (Optional Input Field)
Enter Y (Yes) or N (No) to indicate whether the order has actually been despatched.
Maintenance start/Maintenance stop (Optional Input Field)
The start/stop date for the order's maintenance contract, in the form dd-MMM-yyyy .
Note that only the contact name and maintenance dates can be changed once the issue is marked as despatched.
5.3.2
Update Issue
Summary
This option enables you to update the details of an existing Issue.
As an Issue is only a cross-reference between a Client and a Product, it is not the details of the Client or Product that are being updated but merely the associations between them.
An example of this option is shown in figure 9.11.
Restrictions and Limitations
You must have LIFESPAN Marketing privilege to update an Issue, and the Issue must already exist.
Note that only the contact name and maintenance dates can be changed once the order has been despatched.
An appropriate warning message will be displayed if you attempt to update a despatched Issue.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Issue identifier (Mandatory Input Field)
The Issue identifier to be updated, which must already exist.
The Issue identifier can be up to 50 printing characters long, including spaces.
If the Issue identifier is acceptable, LIFESPAN will display any existing details.
The following fields may then be updated (unless the Issue has already been despatched, in which case only the contact name and the maintenance start/stop dates can be modified).
New identifier (Optional Input/Display Field)
A new and unique identifier, up to 50 printing characters long, including spaces, can be provided to replace the existing Issue identifier.
Any future reference to this Issue must be made by this new identifier.
Product identifier/Product title (Mandatory Input/Display Field)
The identifier/title of the Product can be changed, if you want to associate a different Product with the Issue.
The Product must already exist and must have been registered.
You must provide either the Product identifier or the Product title.
The Product identifier is a numeric up to 6 digits long; the Product title can be up to 50 printing characters long, including spaces.
Client identifier/Client title (Mandatory Input/Display Field)
The identifier/title of the Client can be changed, if you want to associate a different Client with the Issue.
The Client must already exist.
You must provide either the Client identifier or the Client title.
The Client identifier is a numeric up to 6 digits long; the Client title can be up to 30 printing characters long, including spaces.
If the above information is acceptable, LIFESPAN will automatically fill in the missing identifiers/titles.
Contact name (Optional Input Field)
The name, up to 28 printing characters long including spaces, of the contact most closely involved with this Issue within the Client's organisation.
Order date (Optional Input Field)
The date on which the order request was received, in the form dd-MMM-yyyy .
Despatch date (Optional Input Field)
The proposed or actual despatch date for the order can be changed.
The date must be entered in the form dd-MMM-yyyy .
Despatched (Optional Input Field)
Enter Y (Yes) or N (No) to indicate whether the order has actually been despatched.
Maintenance start/Maintenance stop (Optional Input Field)
The start/stop date for the order's maintenance contract may be updated.
The dates must be entered in the form dd-MMM-yyyy .
5.4.0
View Product, Client And Issue Information
Summary
This index enables you to select various viewing facilities associated with Product, Client and Issue details.
An example of this index page is shown in figure 9.12.
5.4.1
View One Product
Summary
This option enables you to view the details of a specific Product.
An example of this option is shown in figure 9.13.
Restrictions and Limitations
You must have LIFESPAN Marketing privilege to view a Product.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Product identifier/Product title (Mandatory Input/Display Field)
The identifier/title of the Product to be viewed.
The Product must already exist.
You must provide either the Product identifier or the Product title.
The Product identifier is a numeric up to 6 digits long; the Product title can be up to 50 printing characters long, including spaces.
If the details are acceptable, LIFESPAN will display all the current details for the specified Product.
The page is similar to that of Option 5.1.2 — Update Product, except that you can only view information using this option.
5.4.2
View One Client
Summary
This option enables you to view the details of a specific Client.
An example of this option is shown in figure 9.14.
Restrictions and Limitations
You must have LIFESPAN Marketing privilege to view a Client.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Client identifier/Client title (Mandatory Input/Display Field)
The identifier/title of the Client to be viewed.
The Client must already exist.
You must provide either the Client identifier or the Client title.
The Client identifier is a numeric up to 6 digits long; the Client title can be up to 30 printing characters long, including spaces.
If the details are acceptable, LIFESPAN will then display all the current details for the specified Client.
The page is similar to that of Option 5.2.2 — Update Client, except that you can only view information using this option.
5.4.3
View One Issue
Summary
This option enables you to view the details of a specific Issue.
An example of this option is shown in figure 9.15.
Restrictions and Limitations
You must have LIFESPAN Marketing privilege to view an Issue.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Issue identifier (Mandatory Input Field)
The name of the Issue identifier to be viewed.
The Issue must already exist.
The Issue identifier can be up to 50 printing characters long, including spaces.
If the details are acceptable, LIFESPAN will then display all the current details for the specified Issue.
The page is similar to that of Option 5.3.1 — Create Issue, except that you can only view information using this option.
5.4.4
View Product Titles
Summary
This option enables you to view the identifiers, titles and registration status for a set of up to 20 Products.
An example of this option is shown in figure 9.16.
Restrictions and Limitations
You must have LIFESPAN Marketing privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Start string/Product identifier (Optional Input Field)
A start string or Product identifier can be provided to indicate a specific start point for the list.
The list will be presented differently according to the type of start point chosen, as follows:
Start string an identifying string, which can be the whole or just the first part of the title of the Product at which the list will start.
The list will be presented in ascending alphabetical order of title.
The start string can be up to 50 printing characters long, including spaces.
Product identifier the identifier of the Product at which the list will start.
The list will be presented in descending numerical order of identifier.
The Product identifier is a numeric up to 6 digits long.
If you do not indicate a start point for the list, LIFESPAN will present the Products in ascending alphabetical order of title.
Scrolled area (Display Field)
LIFESPAN will now display details for up to 20 Products at a time in the scrolled area and a message if more Products are available for viewing.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
To view a further set of Products, select the option again.
LIFESPAN will automatically display the last Product in the current list as the start point for the next list.
You can change this start point if required.
If it is not changed, the set of Products following the current set will be displayed.
5.4.5
View Client Titles
Summary
This option enables you to view the identifiers and titles for a set of up to 20 Clients.
An example of this option is shown in figure 9.17.
Restrictions and Limitations
You must have LIFESPAN Marketing privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Start string/Client identifier (Optional Input Field)
A start string or Client identifier can be provided to indicate a specific start point for the list.
The list will be presented differently according to the type of start point chosen, as follows:
Start string an identifying string, which can be the whole or just the first part of the title of the Client at which the list will start.
The list will be presented in ascending alphabetical order of title.
The start string can be up to 30 printing characters long, including spaces.
Client identifier the identifier of the Client at which the list will start.
The list will be presented in descending numerical order of identifier.
The Client identifier is a numeric up to 6 digits long;
If you do not indicate a start point for the list (start string or Client identifier), LIFESPAN will present the Clients in ascending alphabetical order of title.
Scrolled area (Display Field)
LIFESPAN will now display details for up to 20 Clients at a time in the scrolled area and a message if more Clients are available for viewing.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
To view a further set of Clients, select the option again.
LIFESPAN will automatically display the last Client in the current list as the start point for the next list.
You can change this start point if required.
If it is not changed, the set of Clients following the current set will be displayed.
5.4.6
View Clients For A Product
Summary
This option enables you to view the identifiers and titles for a set of up to 20 Clients associated with a single Product.
An example of this option is shown in figure 9.18.
Restrictions and Limitations
You must have LIFESPAN Marketing privilege use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Product id/Product title (Mandatory Input/Display Field)
The identifier/title of the Product whose Clients you wish to view.
The Product must already exist.
You must provide either the Product identifier or the Product title.
The Product identifier is a numeric up to 6 digits long; the Product title can be up to 50 printing characters long, including spaces.
If the information is acceptable, LIFESPAN will automatically fill in the missing identifier/title.
Start client id (Optional Input Field)
LIFESPAN will always present the list of Clients in descending numerical order of identifier.
You can indicate a specific start point for the list by supplying a start Client identifier; if not, the list will start at the last Client created who was associated with the specified Product.
Scrolled area (Display Field)
LIFESPAN will display the identifiers and titles for a set of up to 20 Clients associated with the named Product, starting from the highest identifier or from the Client indicated by the Start client id, and a message if more details are available for viewing.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
To view a further set of Clients, select the option again.
LIFESPAN will automatically display the last Client in the current list as the start point for the next list.
You can change this start point if required.
If it is not changed, the set of Client following the current set will be displayed.
5.4.7
View Issues For A Client
Summary
This option enables you to view a set of up to 20 Issues associated with a single Client.
An example of this option is shown in figure 9.19.
Restrictions and Limitations
You must have LIFESPAN Marketing privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Client identifier/Client title (Mandatory Input/Display Field)
The identifier/title of the Client whose issues you wish to view.
The Client must already exist.
You must provide either the Client identifier or the Client title.
The Client identifier is a numeric up to 6 digits long; the Client title can be up to 30 printing characters long, including spaces.
If the information is acceptable, LIFESPAN will automatically fill in the missing identifier/title.
Start issue id (Optional Input Field)
LIFESPAN will always present the list of Issues in ascending alphabetical order of Issue identifier.
You can indicate a specific start point for the list by supplying a Start issue id; if not, the list will start at the first Issue alphabetically which is associated with the specified Client.
The start issue id can be up to 50 printing characters long, including spaces.
Scrolled area (Display Field)
LIFESPAN will display the issue identifier, despatch status (Y or N) and the Product identifier for a set of up to 20 Issues associated with the named Client, starting from the first alphabetically or from the one indicated by the Start issue id, and a message if more details are available for viewing.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
To view a further set of Issues, select the option again.
LIFESPAN will automatically display the last Issue in the current list as the start point for the next list.
You can change this start point if required.
If it is not changed, the set of Issue following the current set will be displayed.
MAIL SYSTEM
Introduction
The Mail System is Option 6 of the Master Level Index.
When you request facilities which may take time to process (for , transferring modules into and out of LIFESPAN), they are automatically set up as background activities.The Mail System is used to inform you when the processing has been completed.
It can also be used to send messages from one LIFESPAN user to another.
The mail facilities are accessed from the index page shown in figure 10.1.
In order that you may continue with other work (not necessarily involving LIFESPAN), mail messages are accumulated within LIFESPAN until it is convenient for them to be inspected or printed.
A tally of your messages is shown at the top of every page.
The New figure shows the number of unread mail messages and the Old figure shows the number of mail messages which are still retained in LIFESPAN but which you have already printed or read.
6.1.0
Inspect Mail
Summary
This index page enables you to select an option to inspect your mail messages.
You may inspect either a subset or all of your oldest 16 mail messages.
An example of this index page is shown in figure 10.2.
6.1.1
Inspect Individual Mail
Summary
This option enables you to inspect your individual LIFESPAN mail messages.
The option consists of two pages: an initial page which allows you to select the mail messages you wish to inspect, and a second page which allows you to inspect each mail message, page by page.
An example of the initial page is shown in figure 10.3.
You should select the list of messages you wish to view from the mail titles displayed (ordered by oldest message first) by entering any printable character in the Mk column, then you should press the PF1/<down arrow> key.
The second page will then be displayed showing the first mail message you selected.
If it is a multi-page mail message you should TAB through each of its pages.
After viewing the last page of the message, you will be given the option to Print, Retain or Delete the message.
After entering the required response, you should press TAB to display the next message and repeat the above.
If you wish to view a previous page of a mail message, you should enter the required page number in the page prompt.
You can enter any page number to move forward within the mail message, but only to a page which you have already viewed, or the next page (if one exists).
Typing 0 at the page prompt will take you directly to the Print/Retain/Delete prompt.
When you have finished viewing the mail messages, you should press RETURN.
Note that you may only access the oldest 16 mail messages.
This is to encourage you to read your mail regularly and clear out any unnecessary messages.
You can, of course, print any mail messages you wish to retain using 6.2.0 — Print Mail Index.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
When you enter this option, the scrolled area will display a set of up to 16 of your oldest mail messages.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Up to 16 mail messages can be accessed at one time.
The columns are:
Time (Display Field)
This column displays the time the mail message was created.
St (Display Field)
The ‘State’ column indicates whether the mail message has been ‘read and retained’or ‘printed and retained’previously, using one of the characters:R — Read or P — Printed.
If the entry is blank, the mail message has not been inspected previously.
Title (Display Field)
This column displays the title of the mail message, constructed from the first line of the message.
Mk (Optional Input Field)
This column allows you to mark whether you wish to inspect this message, using any printable character.
Ac (Display Field)
This column will initially be blank when you enter the option.
However, as you inspect the marked messages, you may return to the initial page in order to check how many more messages are to be processed.
In this situation, this column will be updated to reflect your selected ‘action’, using one of the characters:R — Read,P — Print, or D — Delete.
If the entry is blank, the mail message has not been inspected.
On completion, you should press the PF1/<down arrow> key, to start inspecting the mail messages.
6.1.1
Inspect Individual Mail — Message Page
Summary
This page allows you to inspect the mail messages marked on the previous page.
An example of this page is shown in figure 10.4.
If the mail message consists of more than one page, you should TAB through each of its pages to view the entire message.
After viewing the last page, you will be given the option to Print, Retain or Delete the message.
After entering the required response, you should press TAB to display the next message and repeat the above.
When you have finished viewing the selected mail messages, you should press RETURN.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Pg (Optional Input/Display Field)
There are two Pg fields on this page.
The lower field displays the current page number of this mail message.
The upper field displays the next page number to be inspected, if one exists.
If the mail message consists of only one page, you will be taken straight to the Print/Retain/Delete prompt.
However, if the mail message has two or more pages, you can use this field to inspect the remaining pages.
The page number will be incremented automatically for you.
If you wish to view the next page, you need only press the TAB key.
If you wish to view a previous page of a mail message, you should enter the required page number in the page prompt and press TAB.
You can enter any page number to move forward within the mail message, but only to a page which you have already viewed, or the next page (if one exists).
Typing 0 at the page prompt will take you directly to the Print/Retain/Delete prompt.
Pressing TAB while on the last page of the mail message will also take you to the Print/Retain/Delete prompt.
Print/Retain/Delete (P/R/D)(Mandatory Input Field)
You must now indicate whether you wish to retain this mail message (enter R ), or print the message (enter P ) or delete it (enter D ).
If you have marked further messages to inspect, you should now press the TAB key.
If you have inspected all marked messages, you should press the RETURN key.
If you have selected any messages to be printed, LIFESPAN will inform you of the filename in which your mail messages will appear in your current VMS directory.
6.1.2
Inspect All Mail
Summary
This option enables you to inspect your oldest 16 mail messages without having to mark them as in option 6.1.1 — Inspect Individual Mail.
The option consists of two pages: an initial page which allows you to view the titles of the mail messages you will be inspecting, and a second page which allows you to inspect each mail message, page by page.
An example of the initial page is shown in figure 10.5.
When you are ready to start inspecting the mail messages, you should press the TAB key.
The second page of the option will then be displayed showing the first page of the first mail message in the list.
If the mail message consists of two or more pages you should TAB through each of its pages.
After viewing the last page of the message, you will be given the option to Print, Retain or Delete the message.
After entering the required response, you should press TAB to display the next message and repeat the above.
If you wish to view a previous page of a mail message, you should enter the required page number in the page prompt.
You can enter any page number to move forward within the mail message, but only to a page which you have already viewed, or the next page (if one exists).
Typing 0 at the page prompt will take you directly to the Print/Retain/Delete prompt.
When you have finished viewing the mail messages, you should press RETURN.
Note that you may only access the oldest 16 mail messages.
This is to encourage you to read your mail regularly and clear out any unnecessary messages.
You can, of course, print any mail messages you wish to retain using 6.2.0 — Print Mail Index.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Display Field)
When you enter this option, the scrolled area will display a set of up to 16 of your oldest mail messages.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Up to 16 mail messages can be accessed at one time.
The columns are:
Time (Display Field)
This column displays the time the mail message was created.
St (Display Field)
The ‘State’ column indicates whether the mail message has been ‘read and retained’or ‘printed and retained’previously, using one of the characters:R — Read or P — Printed.
If the entry is blank, the mail message has not been inspected previously.
Title (Display Field)
This column displays the title of the mail message, constructed from the first line of the message.
Ac (Display Field)
This column will initially be blank when you enter the option.
However, as you inspect the marked messages, you may return to the initial page in order to check how many more messages are to be processed.
In this situation, this column will be updated to reflect your selected ‘action’, using one of the characters:R — Read,P — Print, or D — Delete.
If the entry is blank, the mail message has not been inspected.
To proceed to the next page, press the TAB key.
6.1.2
Inspect All Mail — Message Page
Summary
This page allows you to inspect up to 16 of your oldest mail messages.
An example of this page is shown in figure 10.6.
This page is exactly the same as that described for option 6.1.1.
6.2.0
Print Mail
Summary
This index page enables you to select an option to print your mail messages to a file.
You may print either a subset or all of your oldest 16 mail messages.
An example of this index page is shown in figure 10.7.
6.2.1
Print Individual Mail
Summary
This option enables you to print your individual LIFESPAN mail messages.
An example of this option is shown in figure 10.8.
Note that you may only access the oldest 16 mail messages.
This is to encourage you to read your mail regularly and clear out any unnecessary messages.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
When you enter this option, the scrolled area will display a set of up to 16 of your oldest mail messages.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Up to 16 mail messages can be accessed at one time.
The columns are:
Time (Display Field)
This column displays the time the mail message was created.
St (Display Field)
The ‘State’ column indicates whether the mail message has been ‘read and retained’or ‘printed and retained’previously, using one of the characters:R — Read or P — Printed.
If the entry is blank, the mail message has not been inspected previously.
Title (Display Field)
This column displays the title of the mail message, constructed from the first line of the message.
Mark (Optional Input Field)
This column allows you to mark whether you wish to print this message, using any printable character.
Having selected the list of messages you wish to print, you should press the RETURN key.
LIFESPAN will inform you of the filename in which your mail messages will appear in your current VMS directory.
You will also receive a mail message to record the success of the file transfer.
6.2.2
Print All Mail
Summary
This option enables you to print your first 16 mail messages without having to mark them as in option 6.2.1 — Print Individual Mail.
An example of this option is shown in figure 10.9.
The list of mail titles will be displayed for you (ordered by oldest message first).
Note that you may only access the oldest 16 mail messages.
This is to encourage you to read your mail regularly and clear out any unnecessary messages.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option.
Detailed Description
Scrolled area (Display Field)
When you enter this option, the scrolled area will display a set of up to 16 of your oldest mail messages.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Up to 16 mail messages can be accessed at one time.
The columns are:
Time (Display Field)
This column displays the time the mail message was created.
St (Display Field)
The ‘State’ column indicates whether the mail message has been ‘read and retained’or ‘printed and retained’previously, using one of the characters:R — Read or P — Printed.
If the entry is blank, the mail message has not been inspected previously.
Title (Display Field)
This column displays the title of the mail message, constructed from the first line of the message.
To print these mail messages, you should press the RETURN key.
LIFESPAN will inform you of the filename in which your mail messages will appear in your current VMS directory.
6.3.0
Copy Mail
Summary
This index page enables you to select an option to copy mail messages to another LIFESPAN user.
You may copy either a subset or all of your oldest 16 mail messages.
An example of this index page is shown figure 10.10.
6.3.1
Copy Individual Mail
Summary
This option enables you to copy your individual LIFESPAN mail messages to another LIFESPAN user.
An example of this option is shown in figure 10.11.
Note that you may only access the oldest 16 mail messages.
This is to encourage you to read your mail regularly and clear out any unnecessary messages.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option.
Note however, that you cannot copy mail to yourself.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
When you enter this option, the scrolled area will display a set of up to 16 of your oldest mail messages.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Up to 16 mail messages can be accessed at one time.
The columns are:
Time (Display Field)
This column displays the time the mail message was created.
St (Display Field)
The ‘State’ column indicates whether the mail message has been ‘read and retained’or ‘printed and retained’previously, using one of the characters:R — Read or P — Printed.
If the entry is blank, the mail message has not been inspected previously.
Title (Display Field)
This column displays the title of the mail message, constructed from the first line of the message.
Mark (Optional Input Field)
This column allows you to mark whether you wish to copy this message, using any printable character.
Which user (Mandatory Input Field)
The name of the existing LIFESPAN user who is to receive a copy of the marked messages.
The user name can be up to 28 alphanumeric characters long, including spaces.
When input is complete, you should press the RETURN key, to copy the marked messages to the specified user.
6.3.2
Copy All Mail
Summary
This option enables you to copy your first 16 mail messages to another LIFESPAN user without having to mark them as in option 6.3.1 — Copy Individual Mail.
An example of this option is shown in figure 10.12.
The list of mail titles will be displayed for you (ordered by oldest message first).
Note that you may only access the oldest 16 mail messages.
This is to encourage you to read your mail regularly and clear out any unnecessary messages.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option.
Note however, you cannot copy mail to yourself.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Display Field)
When you enter this option, the scrolled area will display a set of up to 16 of your oldest mail messages.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Up to 16 mail messages can be accessed at one time.
The columns are:
Time (Display Field)
This column displays the time the mail message was created.
St (Display Field)
The ‘State’ column indicates whether the mail message has been ‘read and retained’or ‘printed and retained’previously, using one of the characters:R — Read or P — Printed.
If the entry is blank, the mail message has not been inspected previously.
Title (Display Field)
This column displays the title of the mail message, constructed from the first line of the message.
Which user (Mandatory Input Field)
The name of an existing LIFESPAN user you wish to copy the messages to.
The user name can be up to 28 alphanumeric characters long, including spaces.
When input is complete, you should press the RETURN key, to copy the messages to the specified user.
6.4.0
Delete Mail
Summary
This index page enables you to select an option to delete your mail messages.
You may delete either a subset or all of your oldest 16 mail messages.
An example of this index page is shown in figure 10.13.
6.4.1
Delete Individual Mail
Summary
This option enables you to delete your individual LIFESPAN mail messages which have previously been inspected.
An example of this option is shown in figure 10.14.
Note that you may only access the oldest 16 mail messages.
This is to encourage you to read your mail regularly and clear out any unnecessary messages.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option.
Note, however that you cannot delete mail which has not been inspected.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
When you enter this option, the scrolled area will display a set of up to 16 of your oldest mail messages.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Up to 16 mail messages can be accessed at one time.
The columns are:
Time (Display Field)
This column displays the time the mail message was created.
St (Display Field)
The ‘State’ column indicates whether the mail message has been ‘read and retained’or ‘printed and retained’previously, using one of the characters:R — Read or P — Printed.
If the entry is blank, the mail message has not been inspected previously.
Title (Display Field)
This column displays the title of the mail message, constructed from the first line of the message.
Mark (Optional Input Field)
This column allows you to mark whether you wish to delete this message, using any printable character.
If you mark a mail message which has not been read, no error will occur, but the mail message will not be deleted.
To delete the marked messages, you should press the RETURN key.
6.4.2
Delete All Mail
Summary
This option enables you to delete up to 16 LIFESPAN mail messages which have previously been inspected without having to mark them as in option 6.4.1 — Delete Individual Mail.
An example of this option is shown in figure 10.15.
The list of mail titles will be displayed for you (ordered by oldest message first).
Note that you may only access the oldest 16 mail messages.
This is to encourage you to read your mail regularly and clear out any unnecessary messages.
Having viewed the list of mail titles, you should press RETURN.
LIFESPAN will then remove all messages (in the list) which have previously been inspected.
Restrictions and Limitations
No special LIFESPAN privileges are required by this option.
Note however that you cannot delete mail which has not been inspected.
Detailed Description
Scrolled area (Display Field)
When you enter this option, the scrolled area will display a set of up to 16 of your oldest mail messages.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Up to 16 mail messages can be accessed at one time.
The columns are:
Time (Display Field)
This column displays the time the mail message was created.
St (Display Field)
The ‘State’ column indicates whether the mail message has been ‘read and retained’or ‘printed and retained’previously, using one of the characters:R — Read or P — Printed.
If the entry is blank, the mail message has not been inspected previously.
Title (Display Field)
This column displays the title of the mail message, constructed from the first line of the message.
When input is complete, you should press the RETURN key, to delete the uninspected mail messages.
6.5.0
Send Mail
Summary
This option enables you to send a one page mail message to another LIFESPAN user.
An example of this option is shown in figure 10.16.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, however you cannot send mail to yourself.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
User to whom mail has to be sent (Mandatory Input Field)
The name of an existing LIFESPAN user you wish to send the message to.
The user name can be up to 28 alphanumeric characters long, including spaces.
Scrolled area (Optional Input Field)
The text for the message to be sent.
You can use the up and down arrow keys to move from line to line.
Up to 15 lines of text can be entered.
When input is complete, you should press the RETURN key to send the message to the specified user.
MANAGER OPERATIONS AND USER ORGANISATION
Introduction
Manager Operations and User Organisation is Option 7 of the Master Level Index.
It provides a further list of options, some of which can be accessed by all LIFESPAN users, some of which are available only to certain privileged users.
All are concerned with organising or adjusting the LIFESPAN system facilities, and include creating new users, arranging times of shut downs, displaying and updating process model details, displaying and updating user details and allocating charge codes.
All Manager facilities are accessed from the index page shown in figure 11.1.
LIFESPAN Privileges
The options available through this index include the granting of LIFESPAN privileges.
The following describes each of the LIFESPAN privileges and which options they allow you, as a privileged LIFESPAN user, to perform.
If do you not have the required privilege, you will be able to view the various index pages, but you will be prevented from entering any of the privileged options.
An appropriate warning message will be displayed to alert you to the lack of privilege, however you can still read the HELP pages for general information.
Manager
Manager privilege gives a user the highest privileges on the system, It should therefore be granted with care.
However, the user MANAGER always remains at the top of the LIFESPAN system's user tree and can never lose his unique privileges.
Other users may have Manager privilege, but are always beneath MANAGER in the hierarchy.
Manager privilege allows you to:
change the privileges of any user (option 7.2.2)
adjust the time to shut down (option 7.4.0)
make facilities available /unavailable (option 7.5.0)
create a Charge Code (option 7.7.1)
change ownership of a charge code (option 7.7.2)
Create User
Create User privilege allows you to create immmediate descendants in the LIFESPAN user tree using option 7.2.1.
Quality Assurer
Quality Assurer privilege allows you to grant or deny approval to packages using option 1.5.3.
Marketing
You will require Marketing privilege to use the any of the Product options under index 5.0.0.
Offline Manager
You must have LIFESPAN Offline privilege to use the Offline options
Update Offline Parameters (option 9.2.0)
Update Availability of Media (option 9.3.0)
Update Availability of Units (option 9.4.0)
Update Media Types (option 9.5.0)
Start Offline Integrity Check (option 9.6.0).
SPR SSR Operations
You must have SPR SSR Operations privilege to use any of the SPR/SSR listing options under index 3.6.0 and 4.6.0.
SPR SSR Controller
You must have SPR SSR Controller privilege to use the following options
Force User to Accept SPR (option 3.8.0)
Submit SSR (option 4.3.0).
DC Operations
You must have DC Operations privilege to be able to submit a Design Change using option 2.1.3.
Process Model Operations
You must have Process Model Operations privilege to be able to Install/Deinstall a Process Model using option 7.3.1.
Project Administrator
You must have Project Administrator privilege to be able to assign roles to users using option 7.2.2.
7.2.0
User Information Access
Summary
This index provides you with a range of facilities concerning the creation of new users, displaying details of users and the relationships between users.
An example of this index page is shown in figure 11.12.
7.2.1
Create User
Summary
This option enables you to create a new LIFESPAN user.
An example of this option is shown in figure 11.3.
In order to develop a hierarchy of users, certain users are given the privilege to create new users.
This facility works as follows:
the LIFESPAN Manager is the only user on the system when it is installed.
He has full privileges and may create new users.
These users are his immediate descendants and he is their parent.
He may then give Create user privilege to any of these users if he wishes, enabling them in turn to create new users (i.e. descendants).
Restrictions and Limitations
You must have LIFESPAN Create User privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Ancestors name (Display Field)
Your own user name is shown as the Ancestor's name.
New username (Mandatory Input Field)
The name of the new user to be created.
The name specified must be unique and may be up to 28 alphanumeric characters long, including spaces.
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that this is the correct user name and press the RETURN key to create the user.
You should now use option 7.2.2 to fill in the new user's details.
7.2.2
Update User
Summary
This option enables you to update the details, privileges and roles of an existing LIFESPAN user.
When you select this option, the first page will be displayed to obtain the name of the user to be updated.
An example of this page is shown in figure 11.6.
The option consists of two pages; the first containing user details and privileges, and the second containing user roles.
You may change your own password and privileges, and those of your descendants.
In addition, if you have LIFESPAN Manager privilege, you may change the privileges of any user, and if you have Project Administrator privilege you may assign and deassign roles to users.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option (unless you wish to update user roles) but you must either be the user you wish to update or an ascendant of that user.
At all times, you may only allocate privileges which are a subset of your own.
If you wish to update user roles then you must have Project Administrator privilege.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
User name (Mandatory Input Field)
The name of the user to be updated.
The user name must exist; the name may be up to 28 alphanumeric characters long, including spaces.
If the name is acceptable, LIFESPAN will display any existing details for this user.
User parent (Display Field)
The immediate parent of the user being updated.
Your password (Mandatory Input Field)
You must specify your own password to update the user's details.
The password may be up to 12 alphanumeric characters long, including spaces.
For security reasons, the password will not be echoed to the screen.
New user password/Verification (Optional Input Field)
You may change the user's password.
The user password can be up to 12 alphanumeric characters long including spaces, and for security reasons, the input will not be echoed to the screen.
As a result, the password must be entered again in the Verification field.
If no new password is entered, new users will be given the default password NEWPASSWORD .
Personal name (Optional Input/Display Field)
A personal name for the user, up to 28 printing characters long, including spaces.
Location (Optional Input/Display Field)
A location for the user, up to 4 lines long, each with 28 printing characters, including spaces.
Default node (Optional Input/Display Field)
The default host node for the user, up to 12 printing characters long, including spaces.
Privileges (Optional Input/Display Field)
The user's privileges can be changed to a subset of your privileges by overtyping with Y or N. Initially, for a new user, no privileges are allocated.
Note that Manager privilege gives the user the highest privileges on the system.
It should therefore be granted with care.
However, the user MANAGER always remains at the top of the LIFESPAN system's hierarchy and can never lose his unique privileges.
Other users may have Manager privilege, but are always beneath him.
To proceed to the next page, press the TAB key.
7.2.2
Update User Details — Page 2
Summary
This page allows you to update the user roles assigned to a user.
An example of this page is shown in figure 11.5.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. Thirty two roles are available within LIFESPAN and may be assigned to a user by marking the Y/N field with a Y and deassigned by marking the Y/N field with a N .
When all the required details have been entered, press the RETURN key, to enter the information into LIFESPAN.
If any errors are reported, these must be corrected before the information can be updated.
7.2.3
View One User
Summary
This option enables you to view the details of a specific LIFESPAN user.
When you select this option, the first page will be displayed to obtain the name of the user whose details you wish to view.
An example of this page is shown in figure 11.4.
The option consists of two pages; the first containing user details and privileges, and the second containing user roles.
All users may display information about their relations, up or down the family tree.
This is useful to see what privileges and roles your relations have, for example, or to check their names and addresses.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but you may only view the details of one of your relations (ascendants or descendants); if you have LIFESPAN Manager privilege you can view the details of any user.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
User name (Mandatory Input Field)
The name of the user to be viewed.
The user name must exist and may be up to 28 alphanumeric characters long, including spaces.
If the name is acceptable, LIFESPAN will display the following details:
User parent (Display Field)
The immediate parent of the selected user.
Personal name (Display Field)
A personal name for the user, up to 28 printing characters long, including spaces.
Location (Display Field)
A location for the user, up to 4 lines long, each up to 28 printing characters, including spaces.
Default node (Display Field)
The default host node for the user, up to 12 printing characters long, including spaces.
Privileges (Display Field)
The user's privileges.
(See start of this section for more information on privileges.)
To proceed to the next page, press the TAB key.
7.2.3
View One User — Page 2
Summary
This page allows you to view the roles assigned to a user.
An example of this page is shown in figure 11.7.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A.
Roles (Display Field)
All available roles (upto 32) are displayed with a corresponding mark of ‘Y’ or ‘N’indicating whether the role is assigned to the user or not respectively.
Roles may be assigned or deassigned by a user with Project Administator privilege using option 7.2.2 — Update User Details.
You can use the TAB and BS keys to move between the two pages; when you have finished viewing the user details, press the RETURN key.
7.2.4
View User Family
Summary
This option enables you to display a list of a user's immediate relations, both up and down the family tree.
An example of this option is shown in figure 11.8.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but you can only view the details of your relations (ascendants and descendants); if you have LIFESPAN Manager privilege you can view any user's family.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
User name (Mandatory Input Field)
The name of the user whose family you wish to view.
The user name must exist and may be up to 28 alphanumeric characters long, including spaces.
Scrolled area (Display Field)
If the user name is acceptable, LIFESPAN will display the user's family (immediate descendants and ascendants) in the scrolled area.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Up to 25 descendants and ascendants can be accessed at one time.
7.2.5
View User Names
Summary
This option enables you to view all LIFESPAN user names and their corresponding personal names.
An example of this option is shown in figure 11.9.
This option is not dependent on families of users, but simply provides a list of all users who are known to LIFESPAN.
Anyone may display the list, which is arranged in alphabetical order.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option as it is intended to provide information for all users.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Start user (Optional Input Field)
A letter or start string of characters to indicate the starting point for the list.
The Start name need not exist, but as the list is presented in alphabetic order, it should approximate to the user required.
The Start user may be up to 28 alphanumeric characters long, including spaces.
Scrolled area (Display Field)
LIFESPAN will display the user names and corresponding personal names, starting from the specified start user (or from the next LIFESPAN user, alphabetically, if the start user does not exist).
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Up to 25 names can be accessed at one time.
If there are more than 25 ascendants or descendants, select the option again.
If there are more than 25 ascendants, enter the last displayed ascendant in the user name field to reveal the other ascendants.
If there are more than 25 descendants, enter the last displayed descendant in the user name filed to reveal the other descendants.
7.2.6
Grant /Cancel Special Link
Summary
This option enables you to grant (or cancel) access to modules, under your managership, to LIFESPAN users who are not related to you (i.e. users who are not an ascendant or descendant).
An example of this option is shown in figure 11.10.
While users have automatic access to modules managed by the hierarchy of users on their branch of the family tree, it is possible for certain users outwith this structure to have access to another user's modules, if so required.
This would normally be the case when a useful module, or modules, needs to be used by more than one project team.
For this purpose, a LIFESPAN user may grant a special access link between any other user and himself, which means that the specified user will have access to all the modules managed by the original user.
This option can also be used to cancel links, if required.
A more detailed explanation of how Special Access Links function, is given in the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but you can only grant or cancel special links between yourself and other users; you cannot change links set up by other users.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Current user (Display Field)
Your own LIFESPAN user name is displayed here for information only.
Grant/cancel module read access for user (Mandatory Input Field)
The name of the user for whom the special link is to be granted or cancelled.
The user name must exist and may be up to 28 alphanumeric characters long, including spaces.
Grant/cancel link (G/C)(Mandatory Input Field)
Enter G to grant the link or C to cancel the link, and press the RETURN key.
You can view any special links set up between users using option 7.2.7 — View User Special Links.
7.2.7
View User Special Links
Summary
This option enables you to view any special access links set up in LIFESPAN for any LIFESPAN user.
An example of this option is shown in figure 11.11.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option as it is intended to provide information for all LIFESPAN users.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Username (Mandatory Input Field)
The name of the user whose special links are to be viewed.
The user name must exist, and may be up to 28 alphanumeric characters long, including spaces.
Scrolled area (Display Field)
If the user name is acceptable, LIFESPAN will display the user's special links.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Up to 25 special links may be accessed at one time.
7.3.0
Process Model Operations
Summary
This index provides you with a range of facilities concerning process model operations.
An example of this index page is shown in figure 11.2.
Process models provide a mechanism for defining lifecycles for objects within LIFESPAN.
LIFESPAN currently supports process modelling of modules and by defining a module instance to be of a particular subtype, defined by a process model, you can make different modules behave in different ways.
7.3.1
Install/Deinstall Process Models
Summary
This option enables you to install and deinstall upto 10 process models.
You may however only install one process model at a time.
An example of this option is shown in figure 11.13.
Once a process model definition module, pmodel, has been installed successfully, any modules of the defined type and subtype entered into LIFESPAN will follow the lifecycle defined by the process model.
If a process model is deinstalled then any outstanding tasks will remain and any state transitions resulting from these tasks will be performed.
No further actions however, will be triggered.
Restrictions and Limitations
You must have LIFESPAN Process Model Operations privilege to use this option.
In addition, if you wish to install a new version of an already installed process model or deinstall a process model, then you must be the user who installed the current process model or the LIFESPAN manager.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Input Field)
The scrolled area allows you to enter the names of a number of process model definition modules that you wish to install/deinstall.
The other columns are:
Issue (Mandatory Input Field)
This column is used to indicate the issue of the process model definition module which you wish to install/deinstall.
Install/Deinstall (Mandatory Input Field)
This column is used to define whether you want to install or deinstall the process model definition module that you have entered in the module name column.
Note whilst you are able to deinstall more than one process model at a time, you are only able to install one process model at a time.
Errors (Display Field)
This column indicates any errors against the relevant modules; for example, modules for which the issue is unknown.
For all errors, the necessary corrections must be made before any installations or deinstallations will be accepted.
Are you sure (Y/N)(Mandatory Input Field)
If the details are correct and you wish to proceed with the process model installations/deinstallations, enter Y at this prompt, and press the RETURN key.
If the operation is successful, LIFESPAN will display the identifier of a mail message which should be viewed to determine the outcome of the requested installation/deinstallation.
The Mail System is fully described in Section 10 of this manual.
7.3.2
View Process Models
Summary
This option enables you to view installed and deinstalled process models.
An example of this option is shown in figure 11.14.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Start Date (Mandatory Input/Display Field)
A date and time should be provided to indicate the starting date and time for the process model search (default DEC'S zero time).
The date should be entered in the format dd-MMM-yyyy hh:mm 
Process Model State (Mandatory Input Field)
The state of the process models which you wish to view.
Enter A to view all process models which have been installed or deinstalled since the specified start date.
Enter I to view process models installed since the start date, and enter D to view processes deinstalled since the start date.
Scrolled area (Display Field)
If the start date and process model state are acceptable, LIFESPAN will display the details of any process models which entered the specified state on or after the start date.
Only 10 lines can be displayed at any given time but if there are more to see then this will be indicated.
If you wish to view more then you should reinvoke the option with a start date specified as that of the 10th process model originally displayed.
Date (Display Field)
This column shows the date when the process model was installed/deinstalled.
The date is shown in the format dd-MMM-yyyy .
Module Name (Display Field)
This column shows the name of the process model definition module which was installed/deinstalled.
Issue (Display Field)
This column shows the issue of the process model definition module.
Associated User (Display Field)
This column shows the name of the LIFESPAN user who performed the installation/deinstallation.
St (Display Field)
The ‘state’ column indicates whether the process model was being installed (I ) or deinstalled (D .
To exit from this page, press the RETURN key.
7.3.3
Inspect Individual Process Model Task Mail
Summary
This option enables you to inspect and respond to individual task mail.
An example of this page is shown in figure 11.15.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but you will only be able to respond to task mail which is outstanding for you.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Start Date (Mandatory Input Field)
A date should be provided to indicate the starting date for the process model task mail search (default DEC'S zero time).
The date should be entered in the format dd-MMM-yyyy 
Scrolled Area (Mandatory Input/Display Field)
If the start date is acceptable, LIFESPAN will display the titles of any outstanding process model task mail messages generated on or after the specified start date.
Only 10 titles can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access a further 6 mail titles.
Up to 16 task mail messages may be accessed at one time.
If there are more mail messages to see then this will be indicated.
If you wish to view these you should reinvoke the option with the start date specified as that of the 16th mail message.
Date (Display Field)
The date on which the task mail message was generated.
Event Title (Display Field)
The title of the task mail message.
Mrk (Optional Input Field)
This column allows you to mark whether you wish to inspect this message, using any printable character.
Act (Display Field)
This column will initially be blank when you enter the option.
However, as you inspect the marked messages, you may return to the initial page in order to check how many more messages are to be processed.
In this situation, this column will be updated to reflect your selected ‘action’, using one of the characters:R — Respond, or F — Forward.
If the entry is blank, the mail message has not been inspected.
On completion, you should press the PF1/<down arrow> key, to start inspecting the mail messages.
7.3.3
Inspect Individual Process Model Task Mail — Message Page
Summary
This page allows you to inspect the task mail messages marked on the previous page.
An example of this page is shown in figure 11.16.
After viewing each mail message, you will be given the option to Respond or Forward the message.
If you wish to do neither then you may simply TAB to the next message or press RETURN if you wish to exit the option.
After entering the required response, you should press TAB to display the next message and repeat the above.
When you have finished viewing the selected mail messages, you should press RETURN.
7.3.4
View One Process Model
Summary
This option enables you to display information about a single installed process model.
An example of this option is shown in figure 11.17.
It gives immediate on-line access to the details, such as the name and issue of the process model definition module, the name of the user who installed it, and the date of the installation.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Model Class (Mandatory Input Field)
The model class (default module) for which the process model defines a type and subtype.
LIFESPAN currently only supports process modelling of modules and hence will only accept an input of module .
Model Type (Mandatory Input Field)
The type for which the process model defines a subtype.
LIFESPAN currently only supports process modelling of modules and hence you should enter either SOURCE ,FOREIGN ,PMODEL or PACKAGE , i.e. the type of module for which the process model defines a subtype.
Model Subtype (Mandatory Input Field)
The name of the subtype defined by the process model.
If the information supplied is correct, LIFESPAN will display the model's details.
7.3.5
Format QAO Into File
Summary
This option enables you to obtain a listing, suitable for printing, of the Quality Assessment Object (QAO) for a module.
The QAO log for a module contains a complete listing of all entries made to the log as defined within the process model definition for the module's subtype.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Module Name (Mandatory Input Field)
The name of the module whose QAO log you wish to format into a file.
Filename (Mandatory Input Field)
The name of a valid VMS file, up to 64 characters long, into which the QAO log information is to be placed.
The listing will be produced in the foreground and the output placed in your current VMS directory under the specified filename.
7.4.0
Adjust Time To Shut Down
Summary
This option enables you to adjust the time of the next LIFESPAN system shut down.
The default value is one week from the last LIFESPAN startup time.
An example of this option is shown in figure 11.19.
Restrictions and Limitations
You must have LIFESPAN Manager privilege to adjust the time to shut down.
The date and time specified for the next scheduled shut down must be later than the current date and time.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Next scheduled shut down is (Mandatory Input/Display Field)
The date and time for the next planned shut down of LIFESPAN.
The date must be entered in the format dd-MMM-yyyy hh:mm .
If an invalid date or a date in the past is entered, an error message will be displayed and you will be requested to correct the input.
7.5.0
Available Facility Access
Summary
This option enables you to make LIFESPAN facilities available or unavailable to other users.
An example of this option is shown in figure 11.20.
Having set facilities unavailable, LIFESPAN will not accept any further transactions from users, and the user image will report a transaction failure when a user attempts this.
Conversely, when facilities are made available, LIFESPAN users may send off transactions to LIFESPAN for processing as normal.
It is recommended that LIFESPAN facilities are made unavailable for 30 minutes before a LIFESPAN shut down so that any outstanding transactions may be given sufficient time to complete.
Restrictions and Limitations
You must have LIFESPAN Manager privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Make facilities available (Y/N)(Mandatory Input Field)
To make facilities available, enter Y ; to make facilities unavailable, enter N .
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and press the RETURN key.
7.7.0
Charge Code Access
Summary
This index enables you to allocate and change charge codes and their associated storage directories.
An example of this index page is shown in figure 11.21.
Charge codes provide a mechanism for organising the storage of modules according to teams and projects, or for reasons of security or accounting.
The charge code determines which Storage directory LIFESPAN will use to store its copy of a module.
Storage directories are accessed only by the LIFESPAN system.
All that LIFESPAN users need to know is which code a new module is to be associated with.
Thereafter, LIFESPAN will store all versions of that module in the associated storage directory.
Before logging on to LIFESPAN to create a Charge Code, the storage directory must be set up by the LIFESPAN Manager, so that when new modules are created and associated with a Charge Code, they can be automatically stored by LIFESPAN in a specific storage directory.
7.7.1
Create Charge Code
Summary
This option enables you to set up a Charge Code for use with LIFESPAN.
An example of this option is shown in figure 11.22.
Restrictions and Limitations
You must have LIFESPAN Manager privilege to create a Charge Code.
Note that it is the responsibility of the LIFESPAN Manager to ensure that the storage directory name is valid, i.e. that the directory indicated does exist, and that it is unique to a Charge Code, otherwise problems may be encountered when LIFESPAN attempts to create and access modules.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Charge code (Mandatory Input Field)
The new Charge Code to be created.
The Charge Code must be a number up to four digits long.
Storage directory (Mandatory Input Field)
The logical or physical name for the storage directory, which can be up to 80 characters long.
It is strongly advised that a logical name be used.
For further information refer to the manual ‘Installation and Management of LIFESPAN’.
The directory name must exist, and must be of the format:
device:[directory](physical name)
or
LSTRAINCC0001 (logical name)
Are you sure (Y/N)(Mandatory Input Field)
Finally, confirm that the details are correct and that you wish to create this Charge Code and press the RETURN key.
7.7.2
Change Ownership Of Charge Code
Summary
This option enables you to allocate a Charge Code to an existing LIFESPAN user.
An example of this option is shown in figure 11.23.
Every Charge Code which is set up must have one user allocated to it.
This responsible user is likely to be a project leader handling the administration of funds and computer charges.
Initially, when a Charge Code is set up, it is the responsibility of the LIFESPAN Manager, but this option should be used to allocate responsibility to another user.
Restrictions and Limitations
You must have LIFESPAN Manager privilege to use this option.
Furthermore, you must be the user currently associated with the Charge Code or one of his ascendants, and the new user must be yourself or any user who is an ascendant or descendant of the current user.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Charge code (Mandatory Input Field)
The Charge Code to be assigned to another LIFESPAN user.
A valid four-digit Charge Code must be entered.
Owned by (Mandatory Input Field)
The name of an existing LIFESPAN user to be assigned ownership of the Charge Code, up to 28 alphanumeric characters long, including spaces.
OFFLINE SYSTEM
Introduction
The Offline System is Option 9 of the Master Level Index.
LIFESPAN allows information to be distributed across a number of offline storage media types via the Offline System, and provides automatic control of the offlining and recovery of modules.
It is particularly useful when the storage disks become full, or if a certain package does not need to be stored online.
The only difference you will notice in normal LIFESPAN operation is that transactions which involve reading offlined modules will take longer than usual, as the modules must first be brought back online.
Most offline facilities are available only to a user with Offline Manager privilege.
Two people, who have a particular association with the Offline System, carry out the majority of the offline procedures.
They are:
Offline Manager This user must be allocated Offline Manager privilege and is responsible for the administration of the Offline System as described in this section.
For more detailed information about the allocation of Offline Manager privilege, see Section 11 of this manual.
Offline Operator This user does not require any knowledge of LIFESPAN and is responsible for the daily running of the system.
The procedures involved are described in the manual ‘Operations Guide to LIFESPAN’.
The following terms are used in this section:
Media type The various categories of media which can be used to store files; for example, disks or magnetic tape.
Media types can be defined using option 9.5.0.
Media unit The unit on which a particular media type may be mounted.
Media units can be entered using option 9.4.0.
Media item One item of a particular media type; for example, one disk or magnetic tape.
Media items can be entered using option 9.3.0.
Operator terminal The terminal nominated at option 9.2.0 to handle a particular Offline run.
The terminal must be free for use by LIFESPAN at the time of the Offline run.
Note that two terminals may be required for the Offline process: the Operator Terminal and one other to handle normal LIFESPAN operations and to set up the Offline run.
Offline Cycle The entire procedure that the Offline System goes through when offlining and recovering modules.
It involves any process appropriate to the media item from storing and restoring through to verification.
Other unfamiliar terms are explained as they arise.
The Offline facilities are accessed from the index page shown in figure 12.1.
9.1.0
Request Package To Be Offlined
Summary
This option enables you to request a package to be offlined.
An example of this option is shown in figure 12.2.
Restrictions and Limitations
No special LIFESPAN privileges are required to use this option, but you must be either the manager of the package or an ascendant of that user.
Note that modules can only be offlined as part of a package; they cannot be offlined individually.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Package Name (Mandatory Input Field)
The name of the package to be offlined.
It can be a maximum of 28 alphanumeric characters, including spaces and the special characters ‘.’,
‘$’, ‘—’, ‘-’, ‘!’.
Issue (Optional Input Field)
The version of the package to be offlined.
This can be an actual issue number (eg. 01.01A) or one of the following characters:
P Preferred — generally the version of the package which the module manager recommends for use.
This is generally the latest fully tested version, but not necessarily the latest version.
L Latest — the latest available version of this package.
This version is normally only used by the person developing the package, as it may be untested.
If this field is left blank, the selection will default to Latest.
Password (Optional Input Field)
The password for this package must be provided, if none of the criteria for privileged access are met.
If a password is required, you need only ever provide it once, since LIFESPAN keeps track of which users have supplied the password for a specific module.
However, if the module's manager changes its password at a later date, this information is cancelled.
The module password can be up to 8 printing characters long and for security reasons, the input will not be echoed to the screen.
If the above information is accepted by LIFESPAN, your relation to the manager of the package will be displayed beside ‘Acc rights’, and the details of the package will be displayed in the scrolled area.
Acc rights (Display Field)
The Access connections are defined as: PARENT, OFFSPRING, MANAGER, PASSWORD, SPEC ACC, OWNER, NO ACCESS.
The Access connections are described fully in Appendix F.
Scrolled area (Display Field)
The scrolled area gives details of all the modules contained in the package.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
The module name and issue number are self explanatory.
The other columns are:
Selection (Display Field)
This column shows how the package selects the module; i.e. PREFERRED, LATEST, or SELECTED.
If the module is not the latest known to LIFESPAN, an asterisk (*) will be displayed against its entry, and a warning output at the foot of the page.
User Access (Display Field)
This column shows whether you have access to the module; i.e. YES or NO.
Although you may have access to the package module, this does not necessarily imply automatic access to all the modules contained in the package.
Type (Display Field)
This column shows the module type; i.e. PACKAGE, SOURCE, FOREIGN, or PMODEL.
Loc (Display Field)
This column shows whether this module is available immediately on line (ON LINE) or only exists in off line storage (OFFLINE).
If NOISSUE is displayed, this means that the package is selecting a non-existent version of that module.
If HARDCPY is displayed, this means that the magnetic version of the module has been deleted; i.e. the module version is only available in hard copy.
Are You Sure (Y/N)(Mandatory Input Field)
Finally, having confirmed that the details are correct and that you wish to offline this package, press the RETURN key.
If the operation is successful, LIFESPAN will automatically update its workload to include the modules in the package which are not currently offline.
You can view this workload using option 9.8.0 — View Offline Workload.
Once requested for offline, it is not possible to remove a package (and its modules) from the offline workload.
You should also be aware that, where a package selects a module as LATEST, the latest issue of the module is requested for offline.
Alternatively, an automatic offline requestor (STOREMAN) is available to select modules which have not been accessed for a configurable period of time.
This facility can be started/stopped only by the LIFESPAN Manager.
For further information on STOREMAN, see the ‘Operations Guide to LIFESPAN’.
9.2.0
Update Offline Parameters
Summary
This option enables you to view and update the parameters for the execution of an Offline Cycle.
An example of this option is shown in figure 12.3.
Restrictions and Limitations
You must have LIFESPAN Offline Manager privilege to use this option.
If you are using DECservers, you should allocate a physical port for offline to use.
Note that you must use a VT100 compatible terminal as the Operator Terminal and the terminal must be logged out of VMS and not allocated, at the time the offline cycle is to start.
Detailed Description
On entry to this option, LIFESPAN will display any existing data entered previously.
Note, however, that the Operator terminal field is always cleared following each offline run.
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You can update the following details:
Operator terminal (Optional Input/Display Field)
The name of the terminal to be used by the Offline Operator to monitor the run.
It should be entered in the format dictated by your system and can be up to 12 characters long, including the colon terminator; for example: TNA0:
Next offline cycle start time (Optional Input/Display Field)
The time at which the next Offline Cycle will be activated at the Operator terminal.
This must be today's date or a date in the future.
The date must be entered in the format dd-MMM-yyyy hh:mm .
Next offline cycle duration time (Optional Input/Display Field)
The expected duration of the next Offline Cycle.
This can be an estimate or a calculation based on the actual workload of the Offline System, displayed by option 9.8.0.
This must be entered in the format dddd hh:mm .
Interval between offline runs (Optional Input/Display Field)
The length of time between the start of each Offline Cycle.
This must be entered in the format dddd hh:mm .
Verification latency min /max (Optional Input/Display Field)
During the Offline Cycle, the Offline System will read files in situ and carry out a Cyclic Redundancy Check in order to verify these files.
You must indicate a time window within which the check should take place; this time is specified by a maximum period and a minimum period.
For more detailed information on Verification Latency, please consult the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
Enter a minimum and maximum period in the format dddd hh:mm .
Split type working (Y/N)(Optional Input/Display Field)
The Offline System always takes two copies (designated as Primary and Secondary ) of any module which is to be offlined, before it deletes the online copy.
You may want to store these copies on different media types.
If you indicate that split type working is in force, each copy taken is stored on a different media type.
Enter Y or N as appropriate.
Simultaneous media copies (B, S or P)(Optional Input/Display Field)
You can allow or prohibit both copies of a file to be mounted at the same time, for security reasons.
Enter one of the letters:
B — Both; both copies can be mounted
P — Primary; only Primary copy can be mounted
S — Secondary; only Secondary copy can be mounted.
If you choose to have only one copy mounted by entering P or S it is suggested that the other option is chosen for the next run and thereafter P and S are chosen alternately for successive Offline Cycles.
When the details have been correctly specified, press the RETURN key to enter the information into LIFESPAN.
At the specified time an offline handler screen will be displayed on the selected terminal (assuming that it is not in use by another VMS user).
The Offline Operator should then carry out the Offline Cycle as specified by LIFESPAN on the screen.
9.3.0
Update Availability Of Media
Summary
This option enables you to register new media items for the LIFESPAN Offline System to use or to update existing ones.
An example of this option is shown in figure 12.4.
Note that you must initialise the media items manually (using VMS INITIALIZE)— LIFESPAN will not do this.
An item is labelled with a two character identifier (corresponding to the LIFEID keyword specified in the LIFESPAN configuration file) followed by the media item identifier (padded to 4 digits with zeroes); e.g. with a LIFEID of LS , item 1 should be initialised as LS0001 , item 2 as LS0002 , etc.
Restrictions and Limitations
You must have LIFESPAN Offline Manager privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Start identifier (Optional Input Field)
The start identifier refers to the media item you want LIFESPAN to display first.
LIFESPAN automatically displays 20 numbered records from the start identifier specified, or from the media item with the lowest number, if no start identifier is specified.
A new media item can be introduced in one of two ways:
You can select any uninitialised item from the list displayed by LIFESPAN and initialise it by entering its details in the columns of the table, as described below.
You can also enter a new media item into one of the uninitialised items which has not been displayed (because it occurs between two initialised items) by typing its number in the Start identifier field.
Scrolled area (Optional Input/Display Field)
The scrolled area gives details of the available media items.
Only 9 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
Any media items for which you previously entered information will be displayed at the top of the list, but any uninitialised items within this set will not be displayed.
LIFESPAN will then display sufficient uninitialised records to make the list up to 20 items, numbered consecutively from the last initialised item.
The information in the scrolled area is as follows:
Media item (Display Field)
Up to 1000 media items may be reserved in LIFESPAN.
You can allocate a media item to each identifier by entering its details in the other columns of the table.
Media Type (Optional Input/Display Field)
The type of the media item, represented by a number in the range 1 to 10.
The media type must previously have been defined using option 9.5.0 — Update Media Types.
Copy Type (Optional Input/Display Field)
The Copy Type indicates whether the item is to be used for Primary (P)or Secondary (S)copies of a file.
No. of Errors (Optional Input/Display Field)
This column displays the current number of errors, in the range 0 to 1000, which have been reported on the media item in this and previous Offline Cycles.
You can reset this field to zero.
State (Optional Input/Display Field)
This column shows the state of the media item, represented by a number in the range 1–7.
These numbers are used as follows:
1 — Not yet initialised The media item has been reserved but is not ready for use.
2 — Ready The media item has been initialised, ready for use, but contains no offlined files.
3 — In use The media item is in use, and contains offlined files.
4 — Full There is no more space on the media item.
5 — Available for inspection The Offline Operator has indicated that the media item may be faulty.
It should be physically checked.
6 — Medium failed The system has detected an error on the media item.
It should be physically checked.
7 — Empty The files on the media item are no longer required by LIFESPAN.
The media item can be used again, but only if the Offline Manager re-initialises it and allocates it a new, unique identifier in VMS, then re-introduces it to the Offline System.
You can only alter the state as follows, from:
State 1 to State 2 — usually when introducing a new media item into LIFESPAN.
State 5 to State 3 — usually after a faulty item has been physically checked
State 5 to State 6 — usually after a faulty item has been physically checked
State 6 to State 3 — usually after a faulty item has been physically checked
State 4 to State 3 — usually if the approximate number of blocks for an item was estimated too low, resulting in Offline believing that the item is full even though there is physically more space available
State 3 to State 4 — usually if the approximate number of blocks for the item was estimated too high, resulting in Offline believing that there is more space available even though it is physically full
State 5 to State 4 — usually after the physical end of tape mark for a serial access device has been reached (Note: In this situation Offline will move the item to state 5 — Available for Inspection)
State 6 to State 4 — usually after a faulty item has been checked (eg. cleaned) and found to be good, but it is decided that no further data should be added to the item.
LIFESPAN carries out the remaining state transitions automatically.
Blocks In Use (Display Field)
This column shows the number of 512 byte blocks in use on the media item, in the range 0 to 10000000.
This total is incremented by LIFESPAN as the media item is used.
Blocks Free (Optional Input/Display Field)
This column shows the approximate number of 512 byte blocks free on the media item, in the range 0 to 10000000.
This total is reduced by LIFESPAN as the media item is used.
It may also be updated manually.
Error (Display Field)
An error code will be displayed in the Error column if any invalid information has been entered (for example, the use of an invalid type of media ar an invalid state transition) and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be resolved before the information can be updated.
When the details have been correctly specified, press the RETURN key to enter the information into LIFESPAN.
9.4.0
Update Availability Of Units
Summary
This option enables you to register and update offline units available for the LIFESPAN Offline System to use.
A maximum of 20 units can be defined.
An example of this option is shown in figure 12.5.
Restrictions and Limitations
You must have LIFESPAN Offline Manager privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
The scrolled area gives details of the available units.
A maximum of 20 units can be defined.
Only 10 lines can be displayed at any given time.
However, by using the up and down arrow keys, the display area can be scrolled to access any remaining lines.
The columns are:
Unit Id (Display Field)
Numerical identifiers in the range 1 to 20 are automatically displayed by LIFESPAN in this column.
You can allocate a media unit to each identifier by entering its details in the other columns of the table.
Descriptive Name (Optional Input/Display Field)
The unique descriptive name by which the media unit will be known to both the Offline Manager and Offline Operator.
The name can be up to 20 characters long.
Unit Name (Optional Input/Display Field)
The name by which the media unit will be known to the system.
It should be entered in the format dictated by your system and can be up to 12 characters long, including the colon terminator; for example: TNA0:
Op Type (Optional Input/Display Field)
The type(s) of operation which will be performed by the unit.
There are four types of operation for which a single media unit can be used.
These are:
P — The unit will perform Primary copy stores
S — The unit will perform Secondary copy stores
R — The unit will perform Restores
V — The unit will perform offline verifications.
Any combination of these types may be input or the field left blank, to indicate that the unit will perform none of these operations, at present.
Media Type (Mandatory Input/Display Field)
The type of media that can be used on this unit.
The media type should be in the range 1 to 10, as defined previously using option 9.5.0 — Update Media Types.
Curr Errs (Mandatory Input/Display Field)
This column displays the current number of errors, in the range 0 to 100, reported on the media unit in this and previous Offline Cycles.
You can reset this field to zero.
Time per Block (Mandatory Input/Display Field)
The time (in milliseconds) taken by this media unit to transfer one 512 byte block of data.
The figure can be an estimate or a calculation based on the specification of the media unit; it is used to balance the workload between units operating at different speeds.
The Time per Block should be in the range 1 to 1000000.
The effect of the setting of this parameter is discussed in more detail in the LIFESPAN User Manual.
S/A (Serial Access)(Mandatory Input/Display Field)
An indication (Y or N ) of whether serial access media can be used on this unit.
If magnetic tape is being used the answer must be Y .
Err (Display Field)
An error code will be displayed in the Error column if any invalid information has been entered (for example, the use of an invalid Op Type), and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be resolved before the information can be updated.
When the details have been correctly specified, press the RETURN key to enter the information into LIFESPAN.
9.5.0
Update Media Types
Summary
This option enables you to register and update the media types which are available to the LIFESPAN Offline System.
A maximum of 10 media types can be defined.
An example of this option is shown in figure 12.6.
Restrictions and Limitations
You must have LIFESPAN Offline Manager privilege to use this option.
Detailed Description
The use of keys to move between fields is fully described in Section 2 and summarised in Appendix A. You must provide the following details:
Scrolled area (Optional Input/Display Field)
The scrolled area gives details of the available media types.
The columns are:
Media Type (Display Field)
Numerical identifiers in the range 1 to 10 are automatically displayed by LIFESPAN in this column.
You can assign each media type to a number.
These numbers must then be used in all other Offline options which require a media type to be specified.
Approx Blocks (Mandatory Input/Display Field)
This is an estimate of the number of 512 byte blocks available with this media type.
It will usually be the standard number indicated by the manufacturer; the LIFESPAN default is 10000000.
The figure in this field is used by LIFESPAN to calculate the number of blocks which are free or in use, as displayed at option 9.3.0 — Update Availability of Media.
The ‘Approx Blocks’ value can be calculated as follows:
For Random Access media (eg. disks).
The maximum number of blocks which can be used may be found by first mounting the media and then issuing the DCL command:—
Note: For Random Access media, there is no penalty for overestimating the number of blocks value as it is possible for LIFESPAN to detect when the media is full.
For Serial Access media (eg. tapes).
There is no simple procedure to determine the number of blocks which may be used by the media item.
When a number of small files are written to tape, a lot of tape is wasted due to inter-file gaps which are inserted between each file.
Less tape is wasted when large files are used.
As an estimate to magnetic tape capacity, use the calculation 
Note: For serial access media you must not overestimate the number of blocks which the media can hold since VMS will ask you to load a new volume without LIFESPAN having any knowledge of the additional volume(s).
When updating the block size for any media type, you should note that any media items already registered will not be updated; only new media items will have the updated block size for that media type.
Full (%)(Mandatory Input/Display Field)
The percentage of this media type which can be used before it is considered to be full, in the range 1 to 100.
Squeeze (%)(Mandatory Input/Display Field)
The percentage of this media type which can be used before it is considered for squeezing, in the range 1 to 100.
Squeezing is a method of moving partially used items onto others, to allow maximum utilisation of media items.
(This is not implemented at present).
Descriptive Name (Mandatory Input/Display Field)
The unique descriptive name, up to 20 characters long, by which the media type will be known to the Offline Manager and Offline Operator.
Error (Display Field)
An error code will be displayed in the Error column if any invalid information has been entered (for example, the use of an invalid Approx Blocks value), and an error message will be displayed at the foot of the page.
An explanation of the error codes can be found in Appendix G or by pressing the HELP key.
All errors must be resolved before the information can be updated.
When the details have been correctly specified, press the RETURN key to enter the information into LIFESPAN.
9.6.0
Start Offline Integrity Check
Summary
This option enables you to initiate internal integrity checks on the files used by the LIFESPAN Offline System.
An example of this option is shown in figure 12.7.
Offline Integrity carries out checks on the files used by the LIFESPAN Offline System for retention of information relating to files which are to be offlined, those which have been offlined and those which are to be restored from the offline media.
It will identify:
if requests to store/restore files have not been serviced for a period
if offlined files are not being verified on a regular basis.
It produces a report of its findings via the LIFESPAN mail system.
The Mail System is fully described in Section 10 of this manual.
Restrictions and Limitations
You must have LIFESPAN Offline Manager privilege to use this option.
Detailed Description
The following information is required:
Start Integrity Check (Y/N)(Mandatory Input Field)
To start the Integrity check, it is only necessary to enter Y and press the RETURN key.
9.8.0
View Offline Workload
Summary
This option enables any user to view the current LIFESPAN offline workload.
An example of this option is shown in figure 12.8.
LIFESPAN automatically displays four pieces of information when the page is accessed:
the number of modules waiting to be stored offline
the approximate number of 512 byte blocks required by these modules (if known)
the number of modules waiting to be restored online
the approximate number of 512 byte blocks used by these modules.
This option can be used by LIFESPAN users to check on the progress of their store/restore requests and by LIFESPAN Managers to check the offline work to be done.
Restrictions and Limitations
No special LIFESPAN privileges are required for this option as it is intended to provide information for all LIFESPAN users.
Detailed Description
No input is required with this option.
After the details have been displayed, you will be taken back immediately to the option prompt.
At this point, you can either re-select the option to obtain updated values, or select another option.
SUMMARY OF SPECIAL FUNCTION KEYS
The following summarises the results of pressing each of the possible field terminator keys recognised by LIFESPAN.
A complete definition can be found in Section 2 of this manual.
TAB moves the cursor forward to the next input field in the option (if one exists).
BACKSPACE moves the cursor backward to the previous input field in the option (if one exists).
RETURN or ENTER indicates that you have completed input for this option.
Up Arrow — the ‘SCROLL UP’ key moves the cursor upward to the previous line of a scrolled area (if one exists).
Only applicable when issued from within a scrolled area.
Down Arrow — the ‘SCROLL DOWN’ key moves the cursor downward to the next line of a scrolled area (if one exists).
Only applicable when issued from within a scrolled area.
PF1/Up Arrow — the ‘EXIT SCROLLED AREA BACKWARDS’ key moves the cursor backward to the previous input field, exiting from the current scrolled area.
Only applicable when issued from within a scrolled area.
PF1/Down Arrow — the ‘EXIT SCROLLED AREA FORWARDS’ key moves the cursor forward to the next input field, exiting from the current scrolled area.
Only applicable when issued from within a scrolled area.
PF2 — the HELP key accesses the series of Help forms associated with the option.
PF1/1 — the BREAKOUT key allows you to break out to a VMS subprocess, and to return to the same field on completion.
PF1/2 — the CACHE key displays the Cache form for user selection.
PF1/3 — the MULTI-FORM key displays the Multi-Form Index page for user selection.
PF1/4 — the PRINT SCREEN key dumps the contents of the current screen into the file FORM.LST.
PF1/5 — the ‘START AGAIN’ key moves the cursor to the first field of the option.
PF1/6 — the ABORT key allows you to exit immediately from the option, without carrying out any further processing.
DELETE deletes the previous character typed in.
This key is invalid when the cursor is in the left-most character position of a field.
LINEFEED deletes all characters in the field,(except for‘field marker characters’).
Left Arrow moves the cursor to the previous character position within a field (if there is one).
Right Arrow moves the cursor to the next character position within a field (if there is one).
Control R or W refreshes the screen.
PF1/DELETE cancels a sequence started by pressing the ‘PF1’ key.
It allows the function to be typed again safely.
PF3 — the OVERSTRIKE key overwrites the character at the cursor position.
PF1/PF3 — the INSERT key instead of overtyping, the existing characters are moved to the right of the cursor.
MODULE HEADER DEFINITION
This section defines the structure of a module header, and an example is shown in figure B.1.
A module header consists of keywords and user-supplied entries.
The following information specifies all the keywords of a module header, and the required and optional user-supplied information.
The following points should be noted:
The order of the initial keywords in the header is fixed.
It corresponds to the order in which they are described, otherwise the module header will not scan.
All the initial keywords are compulsory with the exception of FOREIGN-SET-IS which must be omitted if the module type is not foreign.
However, within entries, certain other keywords and some user-supplied information can be omitted.
This is indicated in the following definition.
All user-supplied information must be included in square brackets, except the entry under DESCRIPTION-LINES-ARE.
For those entries indicated, hyphen signs may also be used immediately after closing square brackets to indicate continuation of the same entry on the next line.
Blank lines must not be inserted between keywords.
Keywords are not included in square brackets and must be upper case.
They should not be used as part of the user-supplied entries (e.g. in comment fields).
The module header may start at any position on the line.
The start is denoted by the keyword HEADER-FORMAT-IS.
Thereafter, however, all subsequent initial keywords must start at the same position in the line as HEADER-FORMAT-IS.
Certain initial keywords have corresponding closing keywords; e.g. END-OF-CLASSIFICATIONS.
These are compulsory.
Each user-supplied entry line (except for the keywords HEADER-FORMAT-IS, MODULE-TYPE-IS, MODULE-NAME-IS, TITLE-IS, and DESCRIPTION-LINES-ARE) must be indented by at least two spaces from the initial keyword position, but there is no restriction on the position of other fields within the same entry.
HEADER-FORMAT-IS
Denotes the issue number of the header format of the module.
An entry here is compulsory.
The recommended version of the header format for a LIFESPAN release is indicated on the log on form.
one or two-digit version number
the ‘.’
character
one or two-digit edition number e.g. [2.4]
MODULE-TYPE-IS
One of a restricted set.
An entry here is compulsory.
There are four types:
PACKAGE
SOURCE
FOREIGN
PMODEL e.g. [PACKAGE]
MODULE-SUB-TYPE-IS
The sub-type of the module.
An entry here is NOT compulsory.
Up to 28 alphanumeric characters are allowed.
This is user definable and along with the module's type determines which process model it will follow.
e.g. [PASCALSOURCE]
MODULE-NAME-IS
The unique name of the module.
An entry here is compulsory.
Minimum length is one character, and maximum length is 28 characters.
These must either be upper case alphanumeric characters, spaces or one of the characters ‘.’,
‘$’, ‘—’, ‘-’, or ‘!’.
Spaces are included in the count of name length but are, otherwise, insignificant and will be removed during referencing.
e.g. [LIFESPAN-MANUAL-PACK]
TITLE-IS
A brief description of the module.
An entry here is compulsory.
Minimum length is one character and maximum length is 52 characters.
These may only be printable ASCII characters, including space.
e.g. [MANUALS FOR LIFESPAN]
MODIFICATION-RECORDS-ARE
Contains a recent history of the module, with the most recent version of the module shown first.
There must be at least one entry, but there is no upper limit to the number of entries.
However, only the latest 30 are significant.
As the entries may not necessarily fit on one physical line, they may be continued by following any closing square bracket with a minus sign (as shown in the example).
Each entry must have the same format, as follows:
There are three compulsory fields in each entry with standard keywords which must be supplied, and up to two optional fields.
The compulsory fields are:
ISSUE keyword plus the appropriate issue number:
one or two-digit version number
the ‘.’
character
one or two-digit edition number
an optional development code, which, if used, is an upper case A to Z character
History keyword which must be one of:
MOD-BY
APPROVED-BY
CHECKED-BY
CREATED-BY
followed by a field of up to 12 upper case alphanumeric characters defining the creator, modifier, checker or approver of the module.
ON keyword followed by the date, supplied in the format: dd-MMM-yyyy where
dd is a one or two-digit day
MMM is a three-character upper case abbreviation of the month (JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC)
yyyy is a four-digit year specification
e.g. 31-JAN-1990, 24-DEC-1999, etc.
Note that the date must not be later than the system date when the module is next scanned or entered into LIFESPAN.
Following the date field there are three optional fields.
The keywords are:
COMMENT — Up to 48 printable characters.
This field may be repeated as many times as necessary.
FOR-JOB — Up to 48 printable characters.
This field may be repeated as many times as necessary
IN-PACKAGE — Module name.
Each of these may be entered on its own, and in addition, the following combinations are allowed:
CLASSIFICATIONS-ARE
Up to three entries are allowed but are not compulsory.
If supplied, each entry must be divided into two parts, the first of which must contain one of the following keywords:
DESCRIPTION-IS
CODE-IS
BINARY-IS
The second part must contain a classification code of maximum length 40 printable characters, including spaces.
e.g. DESCRIPTION-IS [UNCLASSIFIED]
TYPES-AND-NAMES-OF-CONTENTS-ARE
Up to 70 entries are allowed but are not compulsory.
If supplied, each entry must consist of two parts.
The first part must be a Type of up to 24 printable characters, including spaces.
The second part must contain the item name.
Up to 28 printable characters are allowed, including spaces.
e.g. [PROCEDURE][STRANALYSEDESC]
DESCRIPTION-LINES-ARE
There is no restriction on the format and number of lines which may be included under this heading.
They need not be contained within square brackets.
Blank lines may be included.
ERRORS-REPORTED-ARE
Up to 10 entries are allowed but are not compulsory.
If supplied, each entry may contain up to 100 printable characters, including spaces.
e.g. [Overflow error on string size reported using ERREP]
CODING-DETAILS-ARE
Up to 12 entries are allowed but are not compulsory.
If supplied, each entry must be divided into two parts, the first of which must contain one of the following keywords:
LANGUAGE-IS
CODE-CHARACTERISTIC
IS-DEPENDENT-ON
The second part provides information about these keywords, and can be up to 100 printable characters long, including spaces.
e.g. LANGUAGE-IS [CORAL 66]
REFERENCES-ARE
Up to 10 entries are allowed but are not compulsory.
If supplied, each entry may contain up to 100 printable characters, including spaces.
e.g. [VAX 11 Run time library reference manual]
TEST-STATUS-ARE
Up to 15 entries are allowed but are not compulsory.
If supplied, each entry must be divided as follows:
ENVIRONMENT — description of the environment.
Maximum of 24 printable characters, including spaces.
STATUS — a test status code.
Maximum of 20 printable characters.
ON — date of testing.
The same format as the MODIFICATION-RECORDS-ARE date.
It must not be later than the system date when the module is next scanned or entered into LIFESPAN.
e.g. ENVIRONMENT[VAX/VMS] STATUS[UNTESTED] ON[24-FEB-1990]
MODULE-RELATIONS-ARE
This part of the header describes all the modules which are related in some way to this specifying module; up to 70 records are allowed but are not compulsory.
There are two classes of relationships; loose coupling and tight coupling.
Note that continuation lines may be indicated by entering a hyphen sign after any of the closing square brackets.
Loose coupling relations do not refer to a specific version of a module — only to its name.
However, it is possible to indicate the last known checked version of the module, for user information only.
If used, this is done by adding LAST-CHECKED-ISSUE [issue number]to any of the loose coupling keywords, which are as follows:
BUILT-BY [module name]
REQUIRES-SOURCE-OF [module name]
IS-TESTED-BY [module name]
IS-DESCRIBED-BY [module name]
REQUIRES-BINARY-OF [module name]
VARIANT-OF [module name]
e.g. IS-TESTED-BY [INTERFACETEST3]LAST-CHECKED-ISSUE [2.1]
Tight coupling relations may only be used in a package module.
They must always refer to PREFERRED, LATEST or SELECTED versions of the referenced module.
To specify modules which are part of a package and which are to be transferred from LIFESPAN to the user's account, the following relationships must be used:
CONTAINS-SOURCE-OF [module name]
CONTAINS-BINARY-OF [module name]
followed by one of:
SELECTED-ISSUE [issue number]
PREFERRED-ISSUE
LATEST-ISSUE
Note that a maximum of 30 modules can be contained in a package.
In the case of CONTAINS-SOURCE-OF only, this relationship must be completed by specifying the file name into which the module is to be transferred on the user's account, thus:IN-FILE [file name]
where file name must have a minimum of one character in both the name and the extension, but must not exceed 64 characters, nor contain spaces.
The characters must be legal to VMS file names.
The file name must not contain a node name, device, directory, logical name or version number, eg: CONTAINS-SOURCE-OF [USERINTERFACE]-PREFERRED-ISSUE-IN-FILE [USINT.CRL]
FOREIGN-SET-IS
This is only available to module header version 2.2 and later, and should only be used in modules of type FOREIGN.
Other types of module must not contain the ‘FOREIGN-SET-IS’ keyword, nor any user-supplied entries.
It is used to specify files associated with a FOREIGN module, thus:CONTAINS-FILE[file name]COMMENT[This is a comment]
where file name is as described under ‘MODULE-RELATIONS-ARE’.
The comment may contain a maximum of 48 printable ASCII characters including space and tab, and may be repeated as many times as necessary using the hyphen sign after the closing square bracket to indicate a continuation line.
A maximum of 30 files can be specified in a FOREIGN module in this way.
EOMD
This denotes the end of the module definition.
GLOSSARY OF TERMS
ACTIVE
A Design Change state indicating that the proposed modifications can be implemented.
The referenced modules with updated issue numbers can be entered into LIFESPAN.
AGREED
A Design Change state indicating that the modifications proposed in the DC have now been agreed by all the interested parties, and the individual agreements entered into LIFESPAN.
APPROVE
To ensure that a module satisfies the quality standards set for it.
APPROVED
A Design Change state indicating that the modified modules have been formally approved and the Design Change is complete.
APPROVED MODULE
A module which has been formally approved as part of a package.
APPROVER
A LIFESPAN user who has the appropriate QA privilege to approve modules.
CACHE PAGE
A display page which allows the user to select from a set of previously input values.
CANCELLED
A Design Change state indicating that it has been decided not to proceed with work on the Design Change.
CHARGE CODE
Each module requires to be associated with a charge code when it is created, and each charge code refers to a specific storage directory where the module will be held.
DC or Design Change
The sole permission required for the entry of modules into LIFESPAN.
DEVELOPMENT CODE
A letter added to a module issue number, to indicate development versions of a module.
DISPLAY PAGE
All LIFESPAN user interaction takes place via a series of display pages on a terminal.
See also:
INDEX PAGE
CACHE PAGE
MULTI FORM INDEX PAGE.
FIELD
The location within a display page on which a single item of information is displayed or input.
FOREIGN
A type of module which allows reference to non-ASCII contents.
HARD COPY
A copy of a module on paper or fiche.
INDEX PAGE
A display page containing a list of options from which one may be selected.
LATEST
Applied to a module.
The latest available version of the module stored within LIFESPAN.
LIFESPAN MANAGER
The parent of all LIFESPAN users who controls the availability of LIFESPAN facilities and privileges.
LIFESPAN USER NAME
A unique identifier for each LIFESPAN user, used to gain access to LIFESPAN.
LIFESPAN USER PASSWORD
A password to verify the LIFESPAN user's identification, which must be provided in order to access LIFESPAN.
MAIL MESSAGE
A text message, passed to LIFESPAN users from LIFESPAN reporting the result of background activities, or from other LIFESPAN users.
MASTER LEVEL INDEX
The main entry point to all the available LIFESPAN facilities.
It is the top level index page.
MODULE
A piece of software containing a module header which is administered by LIFESPAN as a single unit throughout the lifetime of the software.
MODULE HEADER
An administrative block of text arranged in a standard format which is added to all LIFESPAN modules.
MODULE ISSUE NUMBER
The unique identifier for each version of a module.
Modules under development have an appended letter (development code) which is removed when the modules are approved; e.g. development module 2.1A is approved as 2.1.
MODULE MANAGER
The person responsible for a particular module.
MODULE NAME
The unique identifier for the module.
It should be as descriptive as the number of characters used will allow.
MODULE OWNER
The person or organisation responsible for the development of the module.
MODULE PASSWORD
An identifier which must be supplied to gain access to a module if the user does not have the necessary privileges.
MODULE TYPE
Each module is one of the three types: SOURCE, PACKAGE, FOREIGN or PMODEL.
MULTI FORM INDEX PAGE
A display page containing the list of the input fields associated with an option.
Allows the user to visit any input field of an option directly.
OFF-LINE STORAGE
Copies of modules on disk or magnetic tape, not immediately available for reading or updating.
ON-LINE STORAGE
Immediately available copies of modules.
OPTION
The means of access to a specific LIFESPAN facility.
PACKAGE
A type of module which controls a set of modules as a single unit within LIFESPAN.
PASSWORD
See:
MODULE PASSWORD
LIFESPAN USER PASSWORD.
PMODEL
A type of module containing a process model definition (PMDL).
PREFERRED
The version of a module which the module manager would prefer to be used.
PRIVILEGES
See USER PRIVILEGES.
PRODUCT
A special type of package which is intended for issue to clients as a product.
PROPOSED
A Design Change state indicating that a specific proposal to modify one or more modules has been registered and is awaiting agreement.
QUALITY ASSURANCE or QA
The process of checking that quality control is being satisfactorily applied.
REJECTED
A Design Change state indicating that one or more users have rejected the proposed changes.
SCAN
The means by which LIFESPAN checks the module header of a proposed module to check that all the information it contains has been correctly formatted and is in the correct place.
SELECTED
A specified version of a module.
SOURCE
A type of module containing ASCII text such as program source code, command files, text files etc.
SPR
A Software Performance Report is a means of reporting faults or suggestions for improving an item of software.
SSR
A Software Status Report is a means of replying to a SPR.
It may report an update to software or inform users of specific procedures for using a piece of software.
STORAGE DIRECTORY
A VMS directory containing the LIFESPAN copy of modules.
Users cannot access these accounts directly.
USER PRIVILEGES
Granted to LIFESPAN users to enable them to perform various functions.
VARIANT
A module which is based on another, but with a different module name.
Used for example to indicate the connection between two modules used on different computers for the same purpose.
VERSION
A copy of a module which is uniquely identified by its module issue number and is related to other versions with the same module name.
SCANNER ERRORS
The following is a list of all scanner errors which may occur during a module header scanner run (see Section 5, Option 1.4.0) with advice on how to correct them, where required.
Error 1:
Missing bracket [or]
Error 2:
Keyword not in line with HEADER FORMAT.
Action: All initial keywords must begin at the same position on the line as HEADER-FORMAT-IS
Error 3:
Keyword MODULE-TYPE-IS missing
Error 4:
Invalid MODULE type.
Action: Modules must be SOURCE, PACKAGE, FOREIGN or PMODEL
Error 5:
Keyword MODULE-NAME-IS missing
Error 6:
Keyword TITLE-IS missing
Error 7:
Keyword MODIFICATION-RECORDS-ARE missing
Error 8:
Keyword END-OF-MODIFICATION-RECORDS missing
Error 9:
Keyword CLASSIFICATIONS-ARE missing
Error 10:
Keyword END-OF-CLASSIFICATIONS missing
Error 11:
Keyword TYPES-AND-NAMES-OF-CONTENTS-ARE missing
Error 12:
Keyword END-OF-TYPES-AND-NAMES missing
Error 13:
Keyword DESCRIPTION-LINES-ARE missing
Error 14:
Keyword END-OF-DESCRIPTION-LINES missing
Error 15:
Keyword ERRORS-REPORTED-ARE missing
Error 16:
Keyword END-OF-ERRORS missing
Error 17:
Keyword CODING-DETAILS-ARE missing
Error 18:
Keyword END-OF-CODING-DETAILS missing
Error 19:
Keyword REFERENCES-ARE missing
Error 20:
Keyword END-OF-REFERENCES missing
Error 21:
Keyword TEST-STATUS-ARE missing
Error 22:
Keyword END-OF-TEST-STATUS missing
Error 23:
Keyword MODULE-RELATIONS-ARE missing
Error 24:
Keyword END-OF-MODULE-RELATIONS missing
Error 25:
Keyword EOMD missing.
The module header cannot be found.
Error 26:
END OF FILE found
Error 27:
TOO MANY ERRORS.
Action: Correct the errors noted up to this point, then run the scanner again.
Error 28:
Information field too long.
Action: Check the maximum length of entry allowed in this field.
Refer to Appendix B.
Error 29:
Error in Keyword ISSUE.
Action: Keyword ISSUE not found or wrongly spelt.
Error 30:
Keyword ISSUE wrongly indented.
Action: Keyword ISSUE must be indented two spaces from the MODIFICATION-RECORDS-ARE keyword.
Error 31:
Invalid MOD ACTION Keyword.
Action: Keyword CREATED-BY, MOD-BY, CHECKED-BY or APPROVED-BY not found or wrongly spelt.
Error 32:
Error in MOD ON Keyword.
Action: Keyword ON not found or wrongly spelt.
Error 33:
Error in MOD Support Info.
Action: Keyword IN-PACKAGE, COMMENT or FOR-JOB not found or wrongly spelt.
Error 34:
SUPPORT Information wrongly indented.
Action: The user supplied information after the keywords IN-PACKAGE, COMMENT or FOR-JOB must be indented at least two spaces from the ISSUE keywords.
Error 35:
Error in CLASSIFICATION Description.
Action: Keyword DESCRIPTION-IS, CODE-IS or BINARY-IS not found or wrongly spelt.
Error 36:
Error in Keyword ENVIRONMENT.
Action: Keyword ENVIRONMENT not found or wrongly spelt.
Error 37:
Keyword ENVIRONMENT wrongly indented.
Action: Keyword ENVIRONMENT must be indented two spaces from the TEST-STATUS-ARE keyword.
Error 38:
Error in Keyword LAST CHECKED.
Action: Keyword LAST-CHECKED-ISSUE not found or wrongly spelt.
Error 39:
Error in CODING details.
Action: Keyword LANGUAGE-IS, CODE-CHARACTERISTIC or IS-DEPENDENT-ON not found or wrongly spelt.
Error 40:
Error in MODULE RELATIONS details.
Action: Keyword IS-TESTED-BY, IS-DESCRIBED-BY, REQUIRES-SOURCE-OF, REQUIRES-BINARY-OF, CONTAINS-SOURCE-OF or CONTAINS-BINARY-OF not found or wrongly spelt.
Error 41:
Error in Keyword HEADER-FORMAT-IS.
Action: Keyword HEADER-FORMAT-IS not found or wrongly spelt.
Error 42:
Continuation line missing.
Action: Continuation lines must be indicated by the ‘-’ character after a closing square bracket.
Error 43:
Error in STATUS description.
Action: Keyword STATUS not found or wrongly spelt.
Error 44:
Too many Information Lines.
Action: Check the maximum number of lines allowed for this entry.
Refer to Appendix B.
Error 45:
Wrong Version Number.
Action: Wrong version number for this header format.
Error 46:
Illegal character in Information Field.
Error 47:
Start of Module Header not found.
Action: Module headers must start with the HEADER-FORMAT-IS keyword.
Error 48:
Error in Relation Keyword.
Action: Keyword MODULE-RELATIONS-ARE not found or wrong spelt.
Error 49:
Error in Keyword IN-FILE.
Action: Keyword IN-FILE not found or wrongly spelt.
Error 50:
Error in Selection field.
Action: Keyword SELECTED-ISSUE, PREFERRED-ISSUE-IN-FILE or LATEST-ISSUE-IN-FILE not found or wrongly spelt.
Error 51:
Illegal date format.
Action: Refer to Appendix B for the format of the date.
Error 52:
Date or Issue out of sequence.
Action: The latest modification record must always appear at the top of the list.
Error 53:
Package does not contain itself.
Action: All packages must contain themselves as SELECTED issues.
Error 54:
End of file before Module Header scan complete.
Action: An end-of-file has been found within the module header.
The module header has a fixed format and must be added as a complete block.
Error 55:
Filename already exists.
Action: A file of the same name has already been entered in the Module Relations.
Error 56:
Too many modules in package.
Action: The maximum number of modules in one package is 30.
Error 57:
Line is too long.
Action: The maximum length of any line which can be used in a module header is 255 characters.
Error 58:
Invalid file name.
Action: File names used to specify modules which are to be transferred to and from LIFESPAN must be valid VMS file names.
They must not, however, contain disk or directory names.
Error 59:
Foreign file or files not in directory.
Action: All the files mentioned in FOREIGN-SET-IS must be present in the user's directory before the module can be entered into LIFESPAN.
Error 60:
Invalid version number.
Action: All version numbers must be in the format described under HEADER-FORMAT-IS in Appendix B.
Error 61:
Missing keyword FOREIGN-SET-IS.
Action: This keyword must be supplied with modules of type FOREIGN.
Error 62:
No foreign file found or error in CONTAINS-FILE.
Action: The names of the foreign files listed in the module header must match the names of the files in the account.
Error 63:
Missing keyword END-OF-FOREIGN-SET.
Error 64:
COMMENT not found.
The comment under FOREIGN-SET-IS is mandatory.
Error 65:
This MODULE RELATION is only allowed in packages.
Action: Check in Appendix B for which module relations can be used with which types of module.
Error 66:
More than one CREATED-BY.
Action: Only one CREATED-BY keyword is allowed in each module header under MODIFICATION RECORDS.
Error 67:
Invalid module name.
Action: Module names can be a maximum length of 28 upper case characters, including spaces, consisting of the alphanumeric characters, and the special characters ‘!’, ‘-’, ‘—’, ‘$’ and ‘.’.
Error 68:
FOREIGN type not permitted for this module header version.
Action: Modules of type FOREIGN must not have headers with versions earlier than 2.2.
TRANSACTION FAILURES
A list follows of all the possible errors reported when a Transaction Failure occurs, along with the necessary steps to be taken to recover.
Error:
Communication line to LIFESPAN has TIMED OUT
Error:
LIFESPAN has disconnected and exited from the link.
Error:
LIFESPAN has disconnected from the link.
Error:
LIFESPAN has timed out the link.
Error:
LIFESPAN has disconnected the link.
Error:
LIFESPAN node is unreachable.
Error:
DECNET line to LIFESPAN has gone down.
Error:
DECNET path to LIFESPAN has gone down.
Error:
All DECNET links used at user's node.
Error:
DECNET link terminated.
Error:
DECNET link has timed out.
Action: Please EXIT from LIFESPAN and log on again.
If still unsuccessful, consult the LIFESPAN Manager.
Error:
Communication line to LIFESPAN is ALREADY CONNECTED
Error:
Attempt to connect using invalid CL_MODE
Error:
You are NOT CONNECTED to a LIFESPAN communication line
Action: Please contact SST.
Error:
LIFESPAN task name invalid.
Error:
LIFESPAN node not known at user's node.
Error:
LIFESPAN is unknown at the LIFESPAN node.
Action: Please contact your LIFESPAN Manager.
Error:
DECNET is not running.
Error:
DECNET is not available.
Action: Please contact your LIFESPAN Manager.
Error:
Facility unavailable.
Action: Before anyone can use LIFESPAN, the LIFESPAN Manager must make the facilities available to users.
If this has not been done, consult the LIFESPAN Manager, and request the required facilities be made available.
Error:
You are not logged on to LIFESPAN
Action: The system is running slowly.
Try logging off and logging on again.
If unsuccessful, consult the LIFESPAN Manager.
Error:
Message is out of sequence
Action: The system is running slowly.
This results from a previous transaction failure where the user has not complied with the instructions.
Try logging off and logging on again.
If unsuccessful, consult the LIFESPAN Manager.
Error:
LIFESPAN has returned an unknown error.
Action: Contact the LIFESPAN Manager.
Error:
LIFESPAN…
Failure
Action: Errors in this format, e.g. LIFESPAN Module Details Failure, indicate an internal failure within LIFESPAN.
Consult the LIFESPAN Manager.
SUMMARIES OF LIFESPAN STATES
This Appendix summarises the states through which each of the important LIFESPAN objects may be transitioned.
The following objects are considered:
Design Changes
Software Performance Reports
Software Status Reports
Quality Assurance
It also lists the various access rights which a user may have to a module.
Design Change States
The Design Change states are as follows:
CRE — being created Only the originator is aware of the contents of the DC.
The originator may alter the contents of the DC any number of times while in this state.
PRO — proposed Other users likely to be affected by the change have been shown the DC and may agree or reject it, with an optional comment.
The originator can no longer alter the contents of the DC.
AGR — agreed All affected users have agreed that the DC is acceptable.
REJ — rejected One or more users have rejected the DC.
The proposed changes must be re-considered.
ABO — cancelled For some reason, it has been decided not to proceed with the DC.
ACT — active The DC is currently active on a package.
This allows the modules to be modified by the authorised user.
IAP — being approved Work is complete and the results are being subjected to quality approval.
APD — approved The modified modules have been accepted as embodying the DC.
Software Performance Reports
The Software Performance Report states are as follows:
Cr — Created The SPR is in the process of being entered into LIFESPAN and may be modified by the user creating it.
The SPR can be viewed by all users, but no response is required to it yet.
O — Outstanding All details of the SPR have been entered and the SPR has been submitted for distribution to affected users.
A user has been allocated responsibility for replying to it but no SSR has been sent in response to the SPR.
The originator of the SPR still has no indication of what to do to avoid or correct the problem.
R — Replied to An SSR has been generated in response to the SPR and the user who entered it has been informed, but the problem is not yet fully resolved.
The SSR will have re-stated the problem and possibly suggested some temporary avoiding action.
C — Closed The contents of the SPR have now been acted upon and the problem has either been fixed, or cleared for some other reason, for example the problem did not really exist at all, or there was a misunderstanding on the part of the originator.
Software Status Reports
The Software Status Report states are as follows:
Cr — Created The SSR is in the process of being entered into LIFESPAN and may be modified by the user creating it.
Sb — Submitted The SSR has been submitted.
Quality Assurance
The QA Activity states are as follows:
OFFLINE The package which has been requested for approval contains one or more modules which are currently offline.
A restore request has been generated to retrieve these.
PREPING Approval listings are currently being prepared for the package which has been requested for approval.
MOVING LIFESPAN is in the process of transferring the modules in the requested package to or from its QA work space.
PREPED Approval listings have been prepared for the package which has been requested for approval.
APPING The modules in the requested package are in the process of being updated to contain the new approval records.
Access rights to modules
The following lists the various access rights which a user may have to a module:
PARENT the current user is above the manager of the package in the family tree.
OFFSPRING the current user is below the manager of the package in the family tree.
MANAGER the current user is the manager of the package.
PASSWORD the current user may access the package by supplying the password.
SPEC ACC the current user may access the package module, due to having a special access link set up.
OWNER the current user is the owner of the package.
NO ACCESS the current user may not access the package, as the package manager has not made the password known to the current user.
SCROLLED AREA ERROR MESSAGES
Option 1.1.3 — RESERVE SOURCE, FOREIGN AND PMODEL MODULES
The following error messages may occur in the scrolled area:
MSYN, USYN This module name contains invalid characters.
Valid characters for a module name are alphanumerics, and the special characters ‘-’, ‘—’, ‘$’, ‘!’,
‘.’. Spaces are also valid but these are not significant.
PNMN The part number associated with a module is defaulted from the module name.
You have tried to reserve a module name with the same part number as an existing module.
This is not possible as a part number must be unique.
You should change the part number of the existing module or reserve a different module name.
A module's part number may be viewed using option 1.7.1 — View Module Details or via LIFESPAN RDBI, and may be updated using option 1.8.0 — Update Module Details.
TYPE, PFND The Module type has not been specified for this module or is not S, F or M. Please specify a valid module type,S for a SOURCE module,F for a FOREIGN module, or M for a PMODEL module.
If a package or product is to be created, option 1.1.1 — Create Package /Product should be used instead.
DUP This module name has been specified more than once in the scrolled area.
All module names reserved in LIFESPAN must be unique and so the entry should be changed.
It is good practise to adopt a naming convention to prevent this from occurring.
EXST This module name has previously been reserved within LIFESPAN and, to ensure uniqueness, this entry must be changed.
It is good practise to adopt a naming convention to prevent this from occurring.
Option 1.3.1 — READ COMPLETE PACKAGE
The following error messages may occur in the scrolled area:
NMOD The specified version of this module does not exist within LIFESPAN and so cannot be read out into your current VMS directory.
NORD The specified version of this module has been hard copied and removed from the system by Module Version Deletion.
A copy of the module is no longer available in magnetic format but please consult your LIFESPAN Manager who will be able to provide you with a hard copy version of the module (on paper, microfiche or microfilm).
PASS The module password is required to read this module out of LIFESPAN since you are not a descendant or ascendant of the module's manager/owner.
If you do not know the module password, your LIFESPAN Manager will be able to tell you who manages the module (using option 1.7.0 — View Module Details) and, from this user you can try to obtain the password to give you access.
If any of the above errors appear in the Error column, you must use Option 1.3.2 — Read /Enter Individual Modules or Option 1.3.3 — Read From Root Package to read the module(s) out of LIFESPAN which you have access to.
Option 1.3.2 — READ/ENTER INDIVIDUAL MODULES
The following error messages may occur in the scrolled area:
NMOD The specified version of this module does not exist within LIFESPAN and so cannot be read out into your current VMS directory.
NORD The specified version of this module has been hard copied and removed from the system by Module Version Deletion.
A copy of the module is no longer available in magnetic format but please consult your LIFESPAN Manager who will be able to provide you with a hard copy version of the module (on paper, microfiche or microfilm).
PASS The module password is required to read this module out of LIFESPAN since you are not a descendant or ascendant of the module's manager/owner.
If you do not know the module password, your LIFESPAN Manager will be able to tell you who manages the module (using option 1.7.0 — View Module Details) and, from this user you can try to obtain the password to give you access.
MARK The character in the mark field is invalid (ie. not R, E or space).
If you wish to read the module out of LIFESPAN, you should enter R or if you wish to enter a new version of the module into LIFESPAN, you should enter E .
If you leave the field blank, no action will be taken for this module.
No other characters are acceptable.
MIX You cannot request both Read and Enter operations simultaneously.
You must, therefore, perform two operations to achieve this: one to read modules out of LIFESPAN and the other to enter modules into LIFESPAN.
NOFL The filename for the module you wish to enter (as specified in the package) cannot be found in your current VMS directory and so cannot be entered.
IFOR The module header format in the file you wish to enter into LIFESPAN is not accepted by this issue of LIFESPAN.
You may have forgotten to add a LIFESPAN header to the file or a package may reference one of the files contained in a foreign set rather than the foreign module header itself.
You must update the file first before trying to enter it.
This can be achieved in a number of ways:
Log out of LIFESPAN and edit the file using a VMS editor.
Having edited the file, you should use the stand-alone scanner to verify that the file is syntactically correct ($RUN SYS$LIFESPAN:SCAN).
Break out to a VMS editor from within LIFESPAN (PF1/1) and edit the file.
Having edited the file, you are returned to LIFESPAN in the same field you were in prior to the edit operation and you can continue (assuming the file scans without errors).
It is good practise, if you are not familiar with the syntax of module headers to use the scan option within LIFESPAN first, option 1.4.0 — Scan A File.
NDEV Whilst the file you wish to enter is syntactically correct, the module issue number is not a development version (eg. 01.01A).
You may only enter development (unapproved) modules into LIFESPAN.
NLTR Whilst the file you wish to enter is syntactically correct, the module issue number is not later than the latest known to LIFESPAN.
You may use option 1.7.0 — View Module Details to determine the latest version in LIFESPAN and then edit the file to ensure that its issue is later than this (for details on editing, refer to error IFOR above).
SCAN This module is syntactically incorrect (ie. fails to scan) and so cannot be accepted by LIFESPAN (for details on resolving the errors, refer to error IFOR above).
NOWR As you do not have write access to this module via the current package, you cannot enter a new version.
To obtain access to change the module, you should ensure that you have an active DC, referencing the module(s), through this package.
UNKN An unknown error has occurred — please consult your LIFESPAN Manager who should be aware of any known problems in LIFESPAN and how to avoid them.
If restarting LIFESPAN does not clear the problem, please contact the Technical Support Department at Yard Software Systems for advice.
Option 1.3.3 — READ FROM ROOT PACKAGE
The following error messages may occur in the scrolled area:
NMOD The specified version of this module does not exist within LIFESPAN and so cannot be read out into your current VMS directory.
NORD The specified version of this module has been hard copied and removed from the system by Module Version Deletion.
A copy of the module is no longer available in magnetic format but please consult your LIFESPAN Manager who will be able to provide you with a hard copy version of the module (on paper, microfiche or microfilm).
PASS The module password is required to read this module out of LIFESPAN since you are not a descendant or ascendant of the module's manager/owner.
If you do not know the module password, your LIFESPAN Manager will be able to tell you who manages the module (using option 1.7.0 — View Module Details) and, from this user you can try to obtain the password to give you access.
G.5 Option 1.3.4 — EDIT PACKAGE CONTENTS
The following error messages may appear in the scrolled area:
MSYN, USYN The module name contains invalid characters.
Valid characters for a module name are alphanumeric, and the special characters ‘-’, ‘-’, ‘$’, ‘!’,
‘.’. Spaces are also valid but these are not significant.
FSYN The specified filename is of an invalid format.
Only valid VMS filenames are allowed.
NFIL No filename has been specified for the referenced module.
This is a mandatory input.
ISYN The specified issue is of an invalid format.
Valid entries are L (for LATEST), P (for PREFERRED) or issue numbers of the form NN.NNA where N is an integer between 0 and 9, and A is an alphabetic character.
NISS No issue has been specified for the referenced module.
This is a mandatory input.
NMOD No module has been specified for referenced issue and/or filename.
DUPM This module name has been specified more than once in the scrolled area.
All module names must be unique on this page.
DUPF This filename has been specified more than once in the scrolled area.
All filenames must be unique on this page.
PACK The package which is being edited has been specified.
This is unnecessary and is performed automatically by the option.
Option 1.5.2 — APPROVAL MODULES
The following error messages may occur in the scrolled area:
QA OK This module is acceptable to LIFESPAN for approval purposes.
This message does not reflect, in any way, the quality of the work.
It is part of the Quality Assurance activity to validate this and LIFESPAN merely provides all the information necessary for you to make your judgement (via the approval listings).
NO MODULE The version of this module, specified within the package, does not exist and, therefore, approval listings cannot be prepared.
It may be that the user has submitted another package which references this module which must be approved first (thus causing the error to be replaced with QA OK, after this module has been approved).
Please check with the package manager.
If this is not the case and you are the nominated approver, you should deny approval to the package using option 1.5.3 — Grant /Deny Approval To Package.
NO ACCESS You do not have access to this module without supplying it's associated password.
You should ask the package manager for this and enter the password using option 1.7.0 — View Module Details or the package manager can set up a special relation using option 7.2.6 — Grant /Cancel Special Link which gives you automatic access to all modules managed by that user.
If this is not possible and the package has been submitted for approval, you should deny approval to the package using option 1.5.3 — Grant /Deny Approval To Package.
NOT ON DC This module is not on an active Design Change (DC) via the package and is selected as LATEST-ISSUE.
All modules which are selected as LATEST-ISSUE must be on a DC activated via this package for successful approval.
If you are the package manager you can do one of the following:
Update the package to reference the module as SELECTED-ISSUE.
Note that you may only select approved versions for successful approval (except for the package module which must select itself at the same issue) or
Ensure that a DC which references the module is activated via the package.
If you are the nominated approver, you should deny approval to the package using option 1.5.3 — Grant /Deny Approval To Package.
NO APPROVE The selected module is not an approved issue and so LIFESPAN will not allow approval.
You may only select approved versions in the SELECTED-ISSUE statement within the package (except for the package module which must always select itself).
If you are the package manager, you should update the package to select an approved issue of the module (which must exist in LIFESPAN at approval time for successful approval).
Alternatively, if you are changing the module via this package, you should edit the package to select the module as LATEST-ISSUE (and ensure that you have a DC referencing the module active via the package).
If you are the nominated approver, you should deny approval to the package using option 1.5.3 — Grant /Deny Approval To Package.
PREFERRED This module is selected as Preferred.
In order for successful approval to be granted all preferred issues must be changed to either LATEST-ISSUE (if the module is being changed via this package) or SELECTED-ISSUE (if the module is not being changed through this package).
Note that you may only use SELECTED-ISSUE to select approved modules (which must exist in LIFESPAN at approval time for successful approval).
If you are the nominated approver, you should deny approval to the package using option 1.5.3 — Grant /Deny Approval To Package.
SUBPACKAGE The package cannot be approved (or the listings obtained) until this subpackage has been approved.
If you are the nominated approver, you should approve this subpackage first (if you were nominated to approve it).
NOT LATEST This version of the package module is not the latest known to LIFESPAN.
QA FAIL, UNKNOWERR An unknown error has occurred — please consult your LIFESPAN Manager who should be aware of any known problems in LIFESPAN and how to avoid them.
If restarting LIFESPAN does not clear the problem, please contact the Technical Support Department at Yard Software Systems for advice.
Option 2.1.2 — UPDATE DC — PAGE 2 — SUPERSEDED DCs
The following error messages may occur in the scrolled area:
DUP This DC has been specified more than once in the scrolled area.
All DC identifiers must be unique on this page.
IVDC This DC identifier is not known to LIFESPAN.
Please check that you have entered the correct DC identifier.
A list of all DCs can be displayed using option 2.8.5 — View DC Titles.
Option 2.1.2 — UPDATE DC — PAGE 3 — MODULES REFERENCED
The following error messages may occur in the scrolled area:
MSYN, USYN This module name contains invalid characters.
Valid characters for a module name are alphanumerics, and the special characters ‘-’, ‘—’, ‘$’, ‘!’,
‘.’. Spaces are also valid but these are not significant.
NMOD This module name is not known to LIFESPAN and, therefore, cannot be referenced on this Design Change.
DUP This module name has been specified more than once in the scrolled area.
All module names must be unique on this page.
UNKN An unknown error has occurred — please consult your LIFESPAN Manager who should be aware of any known problems in LIFESPAN and how to avoid them.
If restarting LIFESPAN does not clear the problem, please contact the Technical Support Department at Yard Software Systems for advice.
Option 2.1.2 — UPDATE DC — PAGE 4 — RELATED SPRs
The following error messages may occur in the scrolled area:
NVAL This SPR identifier is not known to LIFESPAN.
Please check that you have entered the correct SPR identifier.
A list of all SPRs can be displayed using option 3.7.2 — View All SPRs.
DUP This SPR identifier has been specified more than once in the scrolled area.
All SPR identifiers must be unique on this page.
Option 2.1.2 — UPDATE DC — PAGE 5 — REFERENCED DCs
The following error messages may occur in the scrolled area:
DUP This DC has been specified more than once in the scrolled area.
All DC identifiers must be unique on this page.
IVDC This DC identifier is not known to LIFESPAN.
Please check that you have entered the correct DC identifier.
A list of all DCs can be displayed using option 2.8.5 — View DC Titles.
Option 2.4.0 — ACTIVATE DCs — ADDITIONAL DCs
The following error messages may occur in the scrolled area:
IVDC This DC identifier is not known to LIFESPAN.
Please check that you have entered the correct DC identifier.
A list of all DCs can be displayed using option 2.8.5 — View DC Titles.
MDOL DC module overlap.
One or more of the modules on this (DC) are already the subject of an active DC via another package.
This DC cannot be activated until the other package has been approved or the other DC has been aborted.
NADV You have attempted to activate a DC for which you are not the associated user.
You may only activate DCs for which you are the associated user.
If the DC is not yet active, the current DC user may pass the DC to you using option 2.5.0 — Change Ownership of DC.
IUPD You have attempted to activate a DC which is not in the AGREED state (state 3).
You may only activate DCs in this state.
Option 3.2.0 — UPDATE SPR — PAGE 2
The following error messages may occur in the scrolled area:
ISS This Issue identifier does not yet exist within LIFESPAN.
This is only a warning, and it will not prevent you from updating the SPR.
NDSP This Issue identifier has not yet been despatched.
This is only a warning, and it will not prevent you from updating the SPR.
DUP This Issue identifier has been specified more than once in the scrolled area.
All Issue identifiers must be unique on this page.
Option 3.2.0 — UPDATE SPR — PAGE 3
The following error messages may occur in the scrolled area:
MSYN, USYN This module name contains invalid characters.
Valid characters for a module name are alphanumerics, and the special characters ‘-’, ‘—’, ‘$’, ‘!’,
‘.’. Spaces are also valid but these are not significant.
DUP This module name has been specified more than once in the scrolled area.
All module names must be unique on this page.
FINV The First version specified is invalid (or does not exist).
You should specify either a module version which does exist in the format 99.99A or F to signify the first version of the module.
LINV The Last version specified is invalid (or does not exist).
You should specify either a module version which does exist in the format 99.99A,L to signify the last version of the module or A to signify the next approved version of the module.
FVNF The First version has not been specified.
You should specify either a module version which does exist in the format 99.99A or F to signify the first version of the module.
LVNF The Last version has not been specified.
You should specify either a module version which does exist in the format 99.99A,L to signify the last version of the module or A to signify the next approved version of the module.
FGTL The First version specified is greater than the Last version.
For a valid range of module issues the first version must be less than the last version.
INVM This module name is not known to LIFESPAN and, therefore, cannot be referenced on this SPR.
Option 3.5.0 — RELATE SPR TO MODULES
The following error messages may occur in the scrolled area:
MSYN, USYN This module name contains invalid characters.
Valid characters for a module name are alphanumerics, and the special characters ‘-’, ‘—’, ‘$’, ‘!’,
‘.’. Spaces are also valid but these are not significant.
DUP This module name has been specified more than once in the scrolled area.
All module names must be unique on this page.
FINV The First version specified is invalid (or does not exist).
You should specify either a module version which does exist in the format 99.99A or F to signify the first version of the module.
LINV The Last version specified is invalid (or does not exist).
You should specify either a module version which does exist in the format 99.99A,L to signify the last version of the module or A to signify the next approved version of the module.
FVNF The First version has not been specified.
You should specify either a module version which does exist in the format 99.99A or F to signify the first version of the module.
LVNF The Last version has not been specified.
You should specify either a module version which does exist in the format 99.99A,L to signify the last version of the module or A to signify the next approved version of the module.
FGTL The First version specified is greater than the Last version.
For a valid range of module issues the first version must be less than the last version.
FVRD The First version has been reduced from its original value.
You may only use this option to extend the range of module versions to which this SPR relates.
LVRD The Last version has been reduced from its original value.
You may only use this option to extend the range of module versions to which this SPR relates.
BVRD Both the First and Last versions have been reduced from their original values.
You may only use this option to extend the range of module versions to which this SPR relates.
MDEL A module name has been deleted from the list.
You may only use this option to extend the range of modules to which this SPR relates.
CMOD A module name has been changed in the list.
You may only use this option to extend the range of modules to which this SPR relates.
INVM This module name is not known to LIFESPAN and, therefore, cannot be referenced on this SPR.
Option 4.2.0 — UPDATE SSR — PAGE 2
The following error messages may occur in the scrolled area:
RINV An invalid relation has been specified for the SPR.
You should specify R if this SSR replies to the SPR or C if it closes the SPR.
No other relations are acceptable.
Note that the SPR must first be submitted before an SSR can reference it and an SPR must be accepted before it can be closed.
NVAL This SPR identifier is not known to LIFESPAN.
Please check that you have entered the correct SPR identifier.
A list of all SPRs can be displayed using option 3.7.2 — View All SPRs.
NSUB This SPR has not yet been submitted and so cannot be referenced on this SSR.
NACC You cannot close an SPR which has not been accepted.
Before being able to close off an SPR, it must have been accepted by a LIFESPAN user (to prevent it being passed on indefinitely if no one is willing to take responsibility for the work).
The current holder should use Option 3.4.0 — Accept /Reject SPR to accept the SPR.
Alternatively, Option 3.8.0 — Force User To Accept SPR can be used by a user with SPR SSR Controller privilege to force a user to be responsible for the SPR.
This also automatically changes the status to Accepted.
NCLO This SPR is already closed by another SSR and cannot be closed again.
An SPR can only be closed once and should only be closed when all necessary work has been completed.
If any other problems occur which relate to this SPR then the SSR should use the Replied to relation (R ).
DUP This SPR has been specified more than once in the scrolled area.
All SPR identifiers must be unique on this page.
Option 4.2.0 — UPDATE SSR — PAGE 3
The following error messages may occur in the scrolled area:
MSYN, USYN This module name contains invalid characters.
Valid characters for a module name are alphanumerics, and the special characters ‘-’, ‘—’, ‘$’, ‘!’,
‘.’. Spaces are also valid but these are not significant.
DUP This module name has been specified more than once in the scrolled area.
All module names must be unique on this page.
FINV The First version specified is invalid (or does not exist).
You should specify either a module version which does exist in the format 99.99A or F to signify the first version of the module.
LINV The Last version specified is invalid (or does not exist).
You should specify either a module version which does exist in the format 99.99A,L to signify the last version of the module or A to signify the next approved version of the module.
FVNF The First version has not been specified.
You should specify either a module version which does exist in the format 99.99A or F to signify the first version of the module.
LVNF The Last version has not been specified.
You should specify either a module version which does exist in the format 99.99A,L to signify the last version of the module or A to signify the next approved version of the module.
FGTL The First version specified is greater than the Last version.
For a valid range of module issues the first version must be less than the last version.
INVM This module name is not known to LIFESPAN and, therefore, cannot be referenced on this SSR.
Option 4.4.0 — ENDORSE SSR
The following error messages may occur in the scrolled area:
MARK
An invalid mark character has been specified.
You should only specify A to accept the endorsement or R to reject the endorsement for the package, or leave the field blank, if you do not want to make a decision about that module at present.
No other characters are accepted.
Note that you cannot mix endorsement marks, ie. you cannot accept some and reject others at the same time.
Option 4.4.0 — ENDORSE SSR — ACCEPT
The following error messages may occur in the scrolled area:
FINV The First version specified is invalid (or does not exist).
You should specify either a module version which does exist in the format 99.99A or F to signify the first version of the module.
LINV The Last version specified is invalid (or does not exist).
You should specify either a module version which does exist in the format 99.99A,L to signify the last version of the module or A to signify the next approved version of the module.
FVNF The First version has not been specified.
You should specify either a module version which does exist in the format 99.99A or F to signify the first version of the module.
LVNF The Last version has not been specified.
You should specify either a module version which does exist in the format 99.99A,L to signify the last version of the module or A to signify the next approved version of the module.
FGTL The First version specified is greater than the Last version.
For a valid range of module issues the first version must be less than the last version.
Option 4.5.1 — RELATE SSR TO MODULES
The following error messages may occur in the scrolled area:
MSYN, USYN This module name contains invalid characters.
Valid characters for a module name are alphanumerics, and the special characters ‘-’, ‘—’, ‘$’, ‘!’,
‘.’. Spaces are also valid but these are not significant.
DUP This module name has been specified more than once in the scrolled area.
All module names must be unique on this page.
FINV The First version specified is invalid (or does not exist).
You should specify either a module version which does exist in the format 99.99A or F to signify the first version of the module.
LINV The Last version specified is invalid (or does not exist).
You should specify either a module version which does exist in the format 99.99A,L to signify the last version of the module or A to signify the next approved version of the module.
FVNF The First version has not been specified.
You should specify either a module version which does exist in the format 99.99A or F to signify the first version of the module.
LVNF The Last version has not been specified.
You should specify either a module version which does exist in the format 99.99A,L to signify the last version of the module or A to signify the next approved version of the module.
FGTL The First version specified is greater than the Last version.
For a valid range of module issues the first version must be less than the last version.
FVRD The First version has been reduced from its original value.
You may only use this option to extend the range of module versions to which this SSR relates.
LVRD The Last version has been reduced from its original value.
You may only use this option to extend the range of module versions to which this SSR relates.
BVRD Both the First and Last versions have been reduced from their original values.
You may only use this option to extend the range of module versions to which this SSR relates.
MDEL A module name has been deleted from the list.
You may only use this option to extend the range of modules to which this SSR relates.
CMOD A module name has been changed in the list.
You may only use this option to extend the range of modules to which this SSR relates.
INVM This module name is not known to LIFESPAN and, therefore, cannot be referenced on this SSR.
Option 4.5.2 — RELATE SSR TO SPRs — ADDITIONAL SPRs
The following error messages may occur in the scrolled area:
RINV An invalid relation has been specified for the SPR.
You should specify R if this SSR replies to the SPR or C if it closes the SPR.
No other relations are acceptable.
Note that the SPR must first be submitted before an SSR can reference it and an SPR must be accepted before it can be closed.
NVAL This SPR identifier is not known to LIFESPAN.
Please check that you have entered the correct SPR identifier.
A list of all SPRs can be displayed using option 3.7.2 — View All SPRs.
NSUB This SPR has not yet been submitted and so cannot be referenced on this SSR.
NACC You cannot close an SPR which has not been accepted.
Before being able to close off an SPR, it must have been accepted by a LIFESPAN user (to prevent it being passed on indefinitely if no one is willing to take responsibility for the work).
The current holder should use Option 3.4.0 — Accept /Reject SPR to accept the SPR.
Alternatively, Option 3.8.0 — Force User To Accept SPR can be used by a user with SPR SSR Controller privilege to force a user to be responsible for the SPR.
This also automatically changes the status to Accepted.
NCLO This SPR is already closed by another SSR and cannot be closed again.
An SPR can only be closed once and should only be closed when all necessary work has been completed.
If any other problems occur which relate to this SPR then the SSR should use the Replied to relation (R ).
DUP This SPR has been specified more than once in the scrolled area.
All SPR identifiers must be unique on this page.
G.20 Option 7.3.1 — Install/Deinstall Process Models
The following error messages may occur in the scrolled area:
UMODIS The specified module/issue is unkown to LIFFESPAN.
FAIL Process model operations failure.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology, Technical Support Department for assistance.
NOTPMD You have tried to install/deinstall a non pmodel type module.
You are only able to install/deinstall modules of type pmodel.
ALRINS The module you have tried to install is already installed.
BEINST The module you have tried to install/deinstall is currently being installed.
NOTINS The module you have tried to deinstall is not currently installed.
PMOF The module you have tried to install/deinstall is offline.
The module must be brought back on line before it can be installed/deinstalled.
DUP This module name has been specified more than once in the scrolled area.
All module names must be unique on this page.
MSYN, USYN This module name contains invalid characters.
Valid characters for a module name are alphanumerics, and the special characters ‘-’, ‘-’, ‘$’, ‘!’,
‘.’. Spaces are also valid but these are not significant.
ISSU The specified issue is of an invalid format.
Valid entries are issue numbers of the form NN.NNA where N is an integer between 0 and 9, and A is an alphabetic character.
OPER The specified operation type is of an invalid format.
Valid entries are ‘I’ for install and ‘D’for deinstall.
Option 9.3.0 — UPDATE AVAILABILITY OF MEDIA
The following error messages may occur in the scrolled area:
TYPE, TOM The Media Type specified is greater than the maximum allowed or it is zero.
Media Types must be in the range 1 to 10 and these must previously have been introduced using option 9.5.0 — Update Media Types.
TOC The Copy Type specified is invalid.
Please specify P for a primary copy or S for a secondary copy (if the field is blank, the media item is not yet registered).
No other characters are accepted.
Note that both a primary and secondary media item are required for offlining purposes as two copies are taken (one on each) before a module is considered offline.
ERRS The number of errors against the media item is not zero.
This count represents the number of errors reported by VMS against the media item for previous offline cycles.
This may be reset to zero by the Offline Manager.
If the number of errors is high, it is strongly recommended that the media item is verified by VMS.
STATE The state specified is either not in the range 1–7 or you have tried to change the state incorrectly.
The following state changes are valid:
NOTYP State is incompatible with type of media and/or type of copy.
Option 9.4.0 — UPDATE AVAILABILITY OF UNITS
The following error messages may occur in the scrolled area:
UNF The media unit name specified does not exist and, therefore, cannot be assigned or used for offline.
Please specify a unit which is known to your VMS system and which LIFESPAN can assign to.
To establish which devices are connected to your LIFESPAN hostnode, enter SHOW DEVICES from VMS.
OPT An invalid Operation Type has been specified.
Please specify a combination of the following:
‘P’— for Primary stores
‘S’— for Secondary stores
‘R’— for Restore operations
‘V’— for Verify operations
No other characters are accepted.
MDT The Media Type specified is greater than the maximum allowed or it is zero.
Media Types must be in the range 1 to 10 and these must previously have been introduced using option 9.5.0 — Update Media Types.
ERR The number of errors against the media unit is not zero.
This count represents the number of errors reported by VMS against the media unit for previous offline cycles.
This may be reset to zero by the Offline Manager.
If the number of errors is high, it is strongly recommended that the media unit is verified by VMS.
TIM The Time per Block is not in the range 1–1000000 milliseconds.
You should enter an approximate time for this media unit to transfer a 512 byte block of data.
This figure can be an estimate or a calculation based on the specification of the media unit.
It is used by LIFESPAN to balance the workload between units operating at different speeds.
SAC The Serial Access specified is invalid.
Please specify Y if this media unit is a serial device or N if it is a random access device.
Note that if this device accepts magnetic tapes or is DEC's RV20 optical disk, you must specify Y .
To VMS, the RV20 optical disk drive is a serial device ($SHOW DEVICE/FULL <device name>).
Option 9.5.0 — UPDATE MEDIA TYPES
The following error messages may occur in the scrolled area:
APPBLK The Approximate Blocks specified is not in the range 1–1000000.
You should enter an approximate number of 512 byte blocks which this media type can hold.
For random access media, the approximate blocks can be found by entering the VMS command $SHOW DEVICE/FULL <device name>.
For serial access media, there is no easy way to calculate this figure (because of file sizes and inter-block gaps) but as an estimate, use the calculation Approx Blocks = (length of tape in feet) * 4.5.
FULPER The Full percentage is not in the range 1–100.
Specify a figure between 1 and 100 to signify when the media type is to be considered full (95% is a recommended figure).
SQUPER The Squeeze percentage is not in the range 1–100.
Offline media squeezing is not implemented but a figure of 5% is recommended.
ERROR MESSAGES REPORTED BY THE USER INTERFACE
Introduction
The following error messages are those that may occur when using the LIFESPAN user interface.
The messages are ordered alphabetically by error string and is laid out in the following way:—
Paragraph 1 — Error string reported from the LIFESPAN user image
Paragraph 2 — A detailed description of the problem encountered
Paragraph 3 — A solution to the problem, with advice as appropriate.
If any other errors occur, please contact your LIFESPAN Manager.
Errors
Additional information exists — repeat for more details.
There is still more information which could not be displayed on the screen due to size limitations.
You should select this option again to display further information.
Additional Products exist — repeat for more details.
There are still more products which could not be displayed on the screen due to size limitations.
You should select this option again to display further products.
Additional SPRs exist — repeat for more details.
There are still more Software Performance Reports (SPRs) which could not be displayed on the screen due to size limitations.
You should select this option again to display further SPRs.
Additional SSRs exist — repeat for more details.
There are still more Software Status Reports (SSRs) which could not be displayed on the screen due to size limitations.
You should select this option again to display further SSRs.
ALL failure — see LIFESPAN Manager.
An unexpected internal error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Seme Software Software Technical Support Department for assistance.
All packages processed successfully.
All packages in the structure which were selected have been processed.
You should choose this option again if you wish to selectively read out another package structure.
Basis SPR Identifier invalid.
The new Software Performance Report (SPR) has been based on another SPR identifier which does not exist.
You should ensure that the new SPR is based on an SPR identifier that is known to LIFESPAN.
Cannot update package manager due to existence of active DCs.
The package manager cannot be changed since one (or more) Design Changes (DCs) are currently active via the package.
The package manager may only be changed when the package has been approved or after the DCs have been aborted using option 2.7.0 — Abort DC.
Charge Code account failure 
An unexpected error has occurred while trying to access the appropriate charge code.
You should advise your LIFESPAN Manager, who should ensure that the charge code directory is accessible to LIFESPAN (if logical names are being used, these should be set up in the system table) and has not exceeded its allocated disk quota (if enabled).
Charge Code account invalid 
An invalid charge code has been specified.
You should use a charge code which is known to LIFESPAN and to which you have access.
The LIFESPAN Manager will advise which charge code to use.
Charge Code account unavailable 
The storage directory for the charge code is not currently available to LIFESPAN.
The LIFESPAN Manager should make the storage directory available for LIFESPAN use.
Charge Code already exists.
The Charge Code has been created previously in LIFESPAN.
A charge code unknown to LIFESPAN should be used instead.
A listing of all existing charge codes can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
Charge Code created successfully 
LIFESPAN has successfully created the charge code and ensured that it is available for use.
The charge code can now be used when reserving module names (options 1.1.1 — Create Package /Product and 1.1.3 — Reserve Source, Foreign and Pmodel Modules).
It is advisable to alter the user responsible for this charge code using option 7.7.2 — Change Ownership of Charge Code (for security).
Charge Code unknown to LIFESPAN.
The Charge Code is not known to LIFESPAN.
The LIFESPAN Manager should create the charge code using option 7.7.1 — Create Charge Code or a charge code known to LIFESPAN should be specified.
The LIFESPAN Manager will advise which charge code to use.
Client already exists.
The unique Client name is already known to LIFESPAN and therefore cannot be used for a new Client name.
The Client should be created with a name unknown to LIFESPAN.
Note that the client name is case-sensitive.
Client Details failure — see LIFESPAN Manager.
An unexpected internal error has occurred while processing your Client Details transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Client unknown to LIFESPAN.
The Client name is not known to LIFESPAN and therefore cannot be used.
To use a Client name in this situation, the name must have been created previously using option 5.2.1 — Create Client.
Note that the client name is case-sensitive.
Client updated successfully 
The Client details have been updated successfully.
The client details can be updated again using the same option, 5.2.2 — Update Client.
Data structure containing package ancestors is full 
The root structure has a depth of more than 20 packages which exceeds an internal limit.
Repeat the read out at a lower level in the structure.
Data structure containing package and ancestors is empty 
An unexpected internal error has occurred while processing your request.
Repeat the request again.
If the problem still exists, you should advise your LIFESPAN Manager, who should contact Sema Software Technology Technical Support Department for assistance.
Data structure containing packages is full 
The root structure has more than 200 packages at the same level which exceeds an internal limit.
Repeat the read out from where the failure occurred.
DC aborted successfully 
The Design Change (DC) identifier has been CANCELLED (state 5) and no further work can be done on the modules listed.
You would abort a DC if it was decided not to proceed and complete the proposed change.
A new DC can be created (using option 2.1.1 — Create DC) specifying the aborted DC as a basis.
This allows the new DC to have the same information as the aborted one and may be edited thereafter to suit the new DC.
DC assessed successfully 
The Design Change (DC) assessment has been successfully registered in LIFESPAN.
The DC will only become AGREED (state 3) when all assessors have registered their comments and accepted the proposed changes.
If one assessor rejects the DC, the DC will become REJECTED (state 4) when all assessors have voted.
Option 2.8.2 — View DC Assessors displays all assessors for a DC and whether or not each user has assessed it.
Option 2.8.3 — View DC Assessment allows assessors' comments to be viewed.
When a DC is AGREED it can be made ACTIVE using option 2.4.0 — Activate DCs (assuming a DC is not currently active on any of the modules via a different package).
If the DC is rejected by anyone, a new DC must be created using option 2.1.1 — Create DC (using the rejected DC as a basis and incorporating the necessary changes).
DC cannot be submitted — no modules referenced.
A Design Change (DC) which is in the state CREATED (state 1) cannot be submitted to LIFESPAN for assessment without at least one module name being listed on PAGE 3 of the DC form.
Update the DC using option 2.1.2 — Update DC, PAGE 3 and enter a module or list of modules known to LIFESPAN which are to be changed.
DC created successfully — the identifier is:
The Design Change (DC) has been created successfully.
LIFESPAN has allocated a unique identifier.
The DC identifier should be noted carefully and used in all further operations on the DC.
If this is an automatic DC created by reserving modules in the options 1.1.0 — Reserve Module Names Index, it will already be AGREED (state 3).
If it has just been created using option 2.1.1 — Create DC, it should now be updated using option 2.1.2 — Update DC and then submitted for assessment using option 2.1.3, whereupon no further changes will be possible.
Once a DC has been agreed, it should be activated using option 2.4.0 — Activate DCs which allows the modules on the DC to be modified.
DC formatted successfully 
The chosen Design Change (DC) has been formatted into the supplied filename in your current VMS directory.
The DC file may be inspected and printed for safe-keeping or for distributing to others.
DC Identifier unknown to LIFESPAN.
The Design Change (DC) identifier is not known to LIFESPAN and therefore cannot be used.
To use a DC identifier in this situation, the identifier must have been created previously using option 2.1.1 — Create DC (or an automatic DC generated when reserving module names in options 1.1.1 — Create Package /Product or 1.1.3 — Reserve Source, Foreign and Pmodel Modules).
Option 2.8.5 — View DC Titles provides a list of all existing DCs and their state.
DC module not accessible 
An attempt has been made to submit a Design Change (DC) which references modules to which the submitter does not have access to.
Check which modules are not accessible and either remove these modules from the DC (using option 2.1.2 — Update DC) or obtain the passwords from the corresponding managers.
To determine whether the modules are accessible, you can use option 1.7.0 — View Module Details or 1.2.0 — Display Contents Of A Package, if the package has already been entered.
If this is not possible, a variant module may be created for inaccessible modules.
Please contact Sema Software Technology Technical Support Department for further advice.
DC owner changed successfully 
The user associated with the Design Change (DC) has been changed successfully.
Further changes to this DC may only be made by the new user associated with it.
The DC may be passed back (after further modification or after submitting the DC for assessment) to the original user or passed onto another LIFESPAN user.
Note that DC OPERATIONS privilege is required to submit a DC.
DC request processed successfully 
The Design Change (DC) request has been processed.
No further action is required.
DC submitted successfully 
The Design Change (DC) has successfully been submitted for assessment by all interested users; ie. all users who have a package containing any of the modules listed on the DC, managers of all modules listed on the DC and the DC submitter.
Option 2.8.2 — View DC Assessors displays all assessors for a DC and whether or not each user has assessed it.
Option 2.8.3 — View DC Assessment allows assessors' comments to be viewed.
When a DC is AGREED it can be made ACTIVE using option 2.4.0 — Activate DCs (assuming a DC is not currently active on any of the modules via a different package).
If the DC is rejected by anyone, a new DC must be created using option 2.1.1 — Create DC (using the rejected DC as a basis and incorporating the necessary changes).
DC update failure during QA 
An unexpected internal error has occurred while updating a Design Change (DC) to the APPROVED state (state 8).
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
DC updated successfully 
The Design Change (DC) has been updated successfully to reflect the specified changes.
The DC can be further updated using the same option, 2.1.2 — Update DC or can be submitted for assessment using option 2.1.3 — Submit DC.
Note, that a DC can only be submitted by a user with DC OPERATIONS privilege; if you do not have this privilege, you can pass the DC to another user (who has this privilege) using option 2.5.0 — Change Ownership Of DC.
DC(s) activated successfully 
The Design Changes (DCs) specified have been successfully activated via the given package.
You now have the sole authority to change the modules listed on the DCs via the given package.
New versions of the modules may be entered into LIFESPAN (via the given package) until such time as it is judged that the work has been completed.
At that point, the package should be submitted for approval to a LIFESPAN user with QUALITY ASSURER privilege.
Directory in use 
The given storage directory is already in use by another charge code.
There is now more than one charge code using the same storage directory.
This situation cannot be rectified by the LIFESPAN Manager but, if this is not a desirable situation, please do not use the newly created charge code.
For further advice please contact Sema Software Technology Technical Support Department for assistance.
Directory not available for required operation 
The directory you have specified when creating a new charge code using option 7.7.1 — Create Charge Code, cannot be accessed by LIFESPAN.
Check that the directory exists and has the correct protection for LIFESPAN to access it.
Endorsement accepted successfully 
The endorsement of the Software Status Report (SSR) has been successful.
The package(s) being endorsed will automatically be added to the SSR by LIFESPAN.
Following endorsement, the SSR is distributed to the managers of further packages which contain the endorsed package(s).
Endorsement rejected successfully 
The rejection of the endorsement of the Software Status Report (SSR) has been successful.
The package(s) being rejected are not added to the SSR as in the acceptance of the endorsement.
No further action is required.
Error — Product Module Issue unknown to LIFESPAN 
You have tried to register a product for an unknown version of a product package.
Update the product using option 5.1.2 — Update Product to specify a known version of the product package.
This must be done prior to creating issues of the product to clients (either internal or external).
Exited option — data not updated 
You have exited the option without updating any of the existing data.
Select the option again if the data is to be changed and modify the appropriate fields, before pressing RETURN.
Failed to create new issue of module 
An error has occurred while trying to create and/or edit the module in your VMS directory.
You should check that you have not exceeded your disk quota.
Failure in request to update facilities 
An unexpected internal error has occurred while updating the facilities available/unavailable status, using option 7.5.0 — Available Facility Access.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Failure to add to FTAF/Failure to open FTAF 
LIFESPAN has been unable to add to/open the File Transfer Authorisation File in your SYS$LOGIN directory.
Check that the logical name SYS$LIFESPAN has been set up correctly and that you have read/write access to your SYS$LOGIN directory.
If the problem still exists, please contact the LIFESPAN Manager, who should contact Sema Software Technology Technical Support Department for assistance.
Header cannot be updated — header format version less than 2.3 
The format version of the header of the module that you are trying to update is less than 2.3.
The option is trying to update the header format version to the latest header format.
It is unable to cope with a version less than 2.3.
You should read the module out of LIFESPAN using one of the other read options eg. option 1.3.2 — Read/Enter Individual Modules, option 1.3.3 — Read From Root Package, or LIFEPAN PI, and update the header format manually.
Illegal DC update.
You have tried to illegally change the state of a Design Change (DC) e.g. activating a DC which is already active.
Valid DC state transitions are:
Incorrect Charge Code.
The specified module owner is not related to the user responsible for the given charge code, using options 1.1.1 — Create Package /Product or 1.1.3 — Reserve Source, Foreign and Pmodel Modules.
Specify a charge code that is accessible to this user, or use a different module owner.
Incorrect manager.
The specified module owner is not related to you (as the module manager), using options 1.1.1 — Create Package /Product or 1.1.3 — Reserve Source, Foreign and Pmodel Modules.
Specify a module owner that is related to you.
Insufficient Create User privilege 
You have tried to create a new LIFESPAN user using option 7.2.1 — Create User, without having the privilege CREATE USER.
To access this option the CREATE USER privilege will be required, this can be obtained from an ascendant in the user tree with this privilege.
Insufficient DC privilege.
You have tried to submit a Design Change (DC) for assessment using option 2.1.3 — Submit DC, without having the privilege DC OPERATIONS.
To access this option the DC OPERATIONS privilege will be required, this can be obtained from an ascendant in the user tree with this privilege.
Insufficient Manager privilege.
You have tried to use one of the options such as:—
7.4.0 — Adjust Time To Shut Down
7.5.0 — Available Facility Access
7.7.0 — Charge Code Access
The privilege MANAGER is required to access these options.
Alternatively, you have tried to create a new user without CREATE USER privilege, or you have tried to give a user privileges you do not have yourself, or you have tried to reduce the LIFESPAN Manager's privileges.
To access these options the MANAGER privilege will be required, this can be obtained from an ascendant in the user tree with this privilege.
However, it is strongly advised that there is only one LIFESPAN user with the MANAGER privilege — please contact Sema Software Technology Technical Support Department for further advice.
Insufficient Marketing privilege.
You have tried to use one of the options in the indexes:—
5.1.0 — Product Management
5.2.0 — Client Management
5.3.0 — Issue Management
5.4.0 — View Product, Client and Issue Management
The privilege MARKETING is required to access these options.
To access these options the MARKETING privilege will be required, this can be obtained from an ascendant in the user tree with this privilege.
However, it is strongly advised that there is only one LIFESPAN user with the MARKETING privilege — please contact Sema Software Technology Technical Support Department for further advice.
Insufficient Process Model operations privilege 
You have attempted to use an option which is restricted to users with the PROCESS MODEL OPERATIONS priv.
To access this option the PROCESS MODEL OPERATIONS privilege will be required, this can be obtained from an ascendant in the user tree with this privilege.
Insufficient Offline privilege.
You have tried to use one of the options:—
9.2.0 — Update Offline Parameters
9.3.0 — Update Availability of Media
9.4.0 — Update Availability of Units
9.5.0 — Update Media Types
9.6.0 — Start Offline Integrity Check
The privilege OFFLINE MANAGER is required to access these options.
To access these options the OFFLINE MANAGER privilege will be required, this can be obtained from an ascendant in the user tree with this privilege.
However, it is strongly advised that there is only one LIFESPAN user with the OFFLINE MANAGER privilege — please contact Sema Software Technology Technical Support Department for further advice.
Insufficient QA privilege 
You have tried to grant approval to a package using option 1.5.3, without having the privilege QUALITY ASSURER.
To access this option the QUALITY ASSURER privilege will be required, this can be obtained from an ascendant in the user tree with this privilege.
Insufficient quota for DC output file 
LIFESPAN has been unable to create the Design Change (DC) listing file in your current directory since the VMS account has insufficient disk quota available (or the device is full).
If the VAX/VMS disk quota has been exceeded (check by using VMS command SHOW QUOTA ), you should inform the System Manager or purge the account of all unnecessary files.
Insufficient quota for output file 
LIFESPAN has been unable to create the output file in your current directory since the VMS account has insufficient disk quota available (or the device is full).
If the VAX/VMS disk quota has been exceeded (check by using VMS command SHOW QUOTA ), you should inform the System Manager or purge the account of all unnecessary files.
Insufficient SPR SSR Controller privilege 
You have tried to either force a user to accept responsibility for a Software Performance Report (SPR)(using option 3.8.0 — Force User To Accept SPR) or to submit a Software Status Report (SSR)(using option 4.3.0 — Submit SSR), without having the privilege SPR SSR CONTROLLER.
To access these options, the SPR SSR CONTROLLER privilege will be required, this can be obtained from an ascendant in the user tree with this privilege.
It is strongly advised that this privilege is only given to responsible users — please contact Sema Software Technology Technical Support Department for further advice.
Insufficient SPR SSR Operations privilege 
You have tried to produce listings of Software Performance Reports (SPRs) using 3.6.0 index — Prepare SPR Listings or Software Status Reports (SSRs) using 4.6.0 index — Prepare SSR Listings, without having the privilege SPR SSR OPERATIONS.
To access these options the SPR SSR OPERATIONS privilege will be required, this can be obtained from an ascendant in the user tree with this privilege.
Integrity running 
You have tried to start the offline integrity check using option 9.6.0 — Start Offline Integrity Check — and it is already running.
Wait until the current offline integrity check has finished and try again.
However, it is strongly advised that only one LIFESPAN user has OFFLINE MANAGER privilege to prevent duplication of work — please contact Sema Software Technology Technical Support Department for further advice.
Integrity started 
LIFESPAN Offline Integrity has started successfully, using option 9.6.0 — Start Offline Integrity Check.
A mail message will be sent to you when the check is complete.
Inspect the mail message using index 6.0.0 — Mail System and ensure that no offline media verification is required.
If it is, an offline run should be initiated for verification of those items identified.
Invalid issue 
An invalid issue for a product has been specified.
Specify an issue which is known to LIFESPAN.
A list of issues for a client can be obtained using option 5.4.7 — View Issues For a Client.
Note that issue identifiers are case-sensitive.
Invalid manager 
You have tried to pass managership of a module to a LIFESPAN user in another branch of the user tree using option 1.8.0 — Update Module Details.
Managership of a module may only be changed to another user in the same branch of the user tree as the current manager (ie. either an ascendant or descendant of the current manager).
Managership of modules can be changed to another branch of the user tree in two steps: change the manager to an ascendant common to both users (current manager and new manager) and from there to the new manager.
Invalid owner 
You have tried to pass ownership of a module to a LIFESPAN user in another branch of the user tree using option 1.8.0 — Update Module Details.
Ownership of a module may only be changed to another user in the same branch of the user tree as the current owner (ie. either an ascendant or descendant of the current owner).
Ownership of modules can be changed to another branch of the user tree in two steps: change the owner to an ascendant common to both users (current owner and new owner) and from there to the new owner.
Invalid page number selected 
You have selected a page number outside the range permitted.
You can specify the number of a page in the mail message you have viewed previously; you may also specify a page number to move forward in the mail message, but only to a page you have already viewed, or to the next page (if one exists).
Invalid password 
You have not supplied your LIFESPAN password correctly.
You should supply your full LIFESPAN password which, for security reasons, is not echoed to the screen.
Invalid SPR user 
You are not the user associated with the given Software Performance Report (SPR) or the username you have specified does not exist.
Use option 3.7.1 — View One SPR to establish the LIFESPAN user who is associated with the SPR or supply an existing LIFESPAN username.
Invalid SSR user 
You are not the user associated with the given Software Status Report (SSR) or the username you have specified does not exist.
Use option 4.7.1 — View One SSR to establish the LIFESPAN user who is associated with the SSR or supply an existing LIFESPAN username.
Invalid start module 
An invalid module name has been specified as the start module for the transaction.
Specify an existing module name as the start module, up to 28 alphanumeric characters long including spaces and the special characters: ‘—’, ‘-’, ‘.’,
‘$’, ‘!’.
A listing of all valid module names can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
Issue already despatched 
The issue has previously been despatched.
Once an issue has been despatched, only the contact name and maintenance dates may be changed.
No further action is required.
Issue created successfully 
The product issue has been created successfully with the user-supplied information.
Using option 5.3.2 — Update Issue, the issue may be updated further unless it has already been despatched whereupon only the contact name and maintenance dates may be changed.
Issue Identifier already exists 
You have tried to create a product issue which already exists within LIFESPAN using option 5.3.1 — Create Issue.
Specify an issue name which has not previously been created.
A list of issues for a client can be obtained using option 5.4.7 — View Issues For a Client.
Note that issue identifiers are case-sensitive.
Issue Identifier unknown to LIFESPAN 
An issue identifier which is unknown to LIFESPAN has been specified.
You should specify an issue identifier which is known to LIFESPAN.
A list of issues for a client can be obtained using option 5.4.7 — View Issues For a Client.
Note that issue identifiers are case-sensitive.
Issue number not greater than current version 
A issue number lower than the current version of the module has been entered at the new package version or new module version prompt.
This is not allowed.
An issue greater than the current latest version must be entered otherwise the updated module will be invalid for re-entry into LIFESPAN.
Issue updated successfully 
The product issue has been updated successfully with the user-supplied information.
Using this option again (option 5.3.2 — Update Issue), the issue may be updated further unless it has already been despatched whereupon only the contact name and maintenance dates may be changed.
LIFESPAN ALU failure — see LIFESPAN Manager 
An unexpected internal error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
LIFESPAN DC failure — see LIFESPAN Manager 
An unexpected internal error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
LIFESPAN message failure — see LIFESPAN Manager 
An unexpected internal error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
LIFESPAN Module Details failure — see LIFESPAN Manager 
An unexpected internal error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
LIFESPAN Offline error xxx — see LIFESPAN Manager 
An unexpected internal error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Logon failure 
An unsuccessful attempt has been made to logon to LIFESPAN.
You should check that you have entered the username correctly and reenter the password (by firstly clearing the field, using LINEFEED or Ctrl/J).
LIFESPAN users have three attempts to logon to LIFESPAN, except the LIFESPAN user, MANAGER, who is only given one attempt.
Logon failure — another user is already logged on 
You have tried to logon to LIFESPAN as a user who is already logged on.
Wait until the LIFESPAN user has logged off.
Note that it is not advisable to have more than one person associated with a LIFESPAN user — please contact Sema Software Technology Technical Support Department for further advice.
Logon failure — invalid node 
You have tried to logon to LIFESPAN from a node which is not registered with LIFESPAN.
You should check which nodes are valid with the LIFESPAN Manager.
If this is not a valid node, the LIFESPAN Manager should add the node to the configuration file (up to the licensed maximum) and restart LIFESPAN.
Please contact Sema Software Technology Technical Support Department for further advice.
Logon quota full — please try later 
You have tried to logon to LIFESPAN when the maximum allowable number of users are currently logged on.
Either wait until one of the other users logs off or inform the LIFESPAN Manager to increase the allowable number of interactive users.
The LIFESPAN Manager should update the configuration file (up to the licensed maximum) and restart LIFESPAN.
Please contact Sema Software Technology Technical Support Department for further advice.
Logon successful 
You have successfully logged on to LIFESPAN.
You should enter the required option number at the cursor position or press the RETURN key to display the MASTER LEVEL INDEX.
Low SPR id is greater than High SPR id 
The highest Software Performance Report (SPR) identifier specified (using option 3.6.2 — Prepare Listings Of All SPRs) is numerically smaller than the lowest SPR identifier.
This is not a valid range for the search.
Ensure the highest SPR identifier is numerically higher than or equal to the lowest SPR identifier.
Low SSR id is greater than High SSR id 
The highest Software Status Report (SSR) identifier specified (using option 4.6.2 — Prepare Listings Of All SSRs) is numerically smaller than the lowest SSR identifier.
This is not a valid range for the search.
Ensure the highest SSR identifier is numerically higher than or equal to the lowest SSR identifier.
Mail copied successfully 
The selected mail message(s) have been copied successfully to the specified user using index 6.3.0 — Copy Mail.
You should either continue with further mail transactions or select another option.
Mail deleted successfully 
The selected mail message(s) have been deleted successfully using index 6.4.0 — Delete Mail.
You should either continue with further mail transactions or select another option.
Mail failed to print 
An unexpected error has occurred while trying to print mail.
It is possible that LIFESPAN has been unable to create the output file for the mail in your current directory as the VMS account has insufficient disk quota available (or the device is full).
If the disk quota has been exceeded (check by using VMS command ‘SHOW QUOTA’) you should inform the System Manager or purge the account of all unnecessary files.
Otherwise, contact the LIFESPAN Manager for assistance.
Mail not copied 
An unexpected error has occurred while trying to copy mail.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Mail not deleted 
An unexpected error has occurred while trying to delete mail.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Mail page directive failure — see LIFESPAN Manager 
An unexpected error has occurred while processing your mail transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Mail Print access failure — see LIFESPAN Manager 
An unexpected error has occurred while processing your mail transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Mail Print exceeded quota — see LIFESPAN Manager 
LIFESPAN has been unable to create the output file for the mail in your current directory since the VMS account has insufficient disk quota available (or the device is full).
If the VAX/VMS disk quota has been exceeded (check by using VMS command SHOW QUOTA ), you should inform the VAX/VMS System Manager or purge the account of all unnecessary files.
Mail Print serious failure — see LIFESPAN Manager 
An unexpected error has occurred while processing your mail transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Mail printed successfully 
The selected mail message(s) have been printed successfully using index 6.0.0 — Mail System.
You should either continue with further mail transactions or select another option.
Mail sent 
The selected mail message(s) have been sent successfully using option 6.5.0 — Send Mail.
You should either continue with further mail transactions or select another option.
Mail success 
The mail transaction using index 6.0.0 — Mail System has been processed successfully.
You should either continue with further mail transactions or select another option.
Mail transaction has failed 
An unexpected error has occurred while processing your mail transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Manager unknown to LIFESPAN 
The module manager specified is not a recognised LIFESPAN user.
You should check the spelling and enter an existing LIFESPAN user name.
Option 7.2.5 — View User Names provides a list of all current users.
Maximum allowed DCs on package 
You have tried to activate more than 10 Design Changes (DCs) on a package.
You should take one of the following three options:—
Reduce the number of DCs to be activated via the package to 10.
The remaining DCs can be activated on the next issue of the package.
Consolidate the DCs.
The existing DCs should be aborted (using option 2.7.0 — Abort DC) and new DCs created (using option 2.1.1 — Create DC).
The new DCs will reference the modules on the aborted DCs and will reference the aborted DCs as being superseded.
Once the new DCs have been AGREED, activate them up via the package using option 2.4.0 — Activate DCs.
Use another package to do the work.
Media Identifier unknown to LIFESPAN 
The media identifier specified is not known to LIFESPAN.
You should enter a known media identifier.
A list of these can be obtained using option 9.3.0 — Update Availabiltiy Of Media.
Module at highest version — cannot be further updated 
The current latest version is 99.99Z.
This is the highest version allowed within LIFESPAN and hence the module cannot be updated any further.
Module Details request processed successfully 
The module details request has been processed successfully.
No further action is required.
Module Details updated successfully 
The module details have been updated successfully by LIFESPAN.
You should either select this option again to perform further updates to the module (or to a different module) or select a completely new option.
Module Issue unknown to LIFESPAN 
The module issue specified is not known to LIFESPAN.
You should enter a known module issue.
A record of issues of the module can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
Module is not a package/Module is not of type Package 
LIFESPAN is expecting a module of type Package.
This module is either Source or Foreign.
You should enter an existing package name.
A listing of all valid package names can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
Module NAME unknown to LIFESPAN 
The module name specified is not known to LIFESPAN.
You should check the spelling and enter an existing module name.
A listing of all valid module names can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
Module not in package 
The package to be submitted for approval, or already submitted for approval, does not reference the modules listed on the corresponding Design Changes (DCs).
If you are the Preparer of the package, two options are available:—
If the modules should be included in the package, edit the package module header to reference the omitted modules.
If the modules are development versions they must be referenced as LATEST-ISSUE in the package header module relations section.
Check that the correct versions of the modules exist in LIFESPAN using option 1.2.0 — Display Contents Of A Package.
If the modules should not be included in the package, abort the offending DC using option 2.7.0 — Abort DC.
If the DC also references valid modules create a new DC based on the old DC using option 2.1.1 — Create DC.
Remove the references to the invalid modules from PAGE 3 of the DC.
Submit the DC for agreement using option 2.1.3 — Submit DC, then activate the DC using option 2.4.0 — Activate DCs, after all affected users have agreed to the change.
If you are the Approver of the package deny approval using option 1.5.3 — Grant /Deny Approval To Package and advise the package manager that module(s) referenced on a DC are not included in the package.
Module not read out — maximum wait time exceeded 
A request has been made to read out the module to be updated but this has been unsuccessful.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Module of TYPE package are inhibited in this option 
You have entered a package name at the ‘module name’ prompt.
This is invalid as package modules cannot be updated using this option.
You should clear the package name using LINEFEED or Ctrl/J and enter the name of the source, foreign or pmodel module you wish to update.
Or, if you wish to update a package, you should use option 1.3.4 — Edit Package Contents.
Module unknown to LIFESPAN 
The module specified is not known to LIFESPAN.
You should check the spelling and enter an existing module name.
A listing of all existing module names can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
Module(s) related to SPR successfully 
The specified modules have been related to the Software Performance Report (SPR) successfully.
You should note that up to 10 module names can be added to each SPR.
It is also possible to extend the range of versions to which the SPR applies for a particular module name.
Module names cannot be removed and version ranges cannot be reduced once the SPR has been submitted.
Module(s) related to SSR successfully 
The specified modules have been related to the Software Status Report (SSR) successfully.
You should note that as many module names as required can be added to each SSR.
It is also possible to extend the range of versions to which the SSR applies for a particular module name.
Module names cannot be removed and version ranges cannot be reduced, once the SSR has been submitted.
The managers of any newly related module names will be notified of the SSR via the Mail System.
Managers of packages containing newly related modules will be asked to endorse the SSR unless the package is already on the SSR.
Modules on DC overlap with modules on another DC 
One or more modules on your Design Change (DC) are already included on another DC activated via another package.
It will not be possible to activate your DC using option 2.4.0 — Activate DCs until the other DC has completed its approval cycle.
This prevents conflicting modifications.
To determine the package(s) where the module overlap occurs, you should use LIFESPAN Project Management Reports (PMR) or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
More data available 
There is still more data available which could not be displayed on the screen due to size limitations.
You should select this option again to display further data.
More QA information available 
There is still more QA information available which could not be displayed on the screen due to size limitations.
You should select this option again to display further QA information.
New package version created but not entered, no active DC or not package manager 
The package has been successfully read out of LIFESPAN and updated, but cannot be re-entered into LIFESPAN because you are either not the package manager or do not have an active DC referencing the package.
You must pass the package to the package manager for entry or obtain an active DC referencing the package.
New user is unknown to LIFESPAN 
The new user specified using option 2.5.0 — Change Ownerhip Of DC, is not a recognised LIFESPAN user.
You should check the spelling and enter an existing LIFESPAN user name.
Option 7.2.5 — View User Names provides a list of all current users.
New version of module created in your default directory — enter it via a package 
The module has been successfully read out of LIFESPAN and updated.
When you have updated the module's contents you should enter it back into LIFESPAN via a package.
New version of package being entered — check mail message for successful entry 
The package has been successfully updated and is now being entered back into LIFESPAN.
You should use option 6.1.1 — Inspect Individual mail or option 6.1.2 — Inspect All Mail to confirm that this is successful.
Newly created module failed to scan 
The newly created module has failed to scan and therefore entry into LIFESPAN has not been attempted.
You should run the stand alone module header scanner on the module, determine the errors and amend appropriately before attempting to enter the module into LIFESPAN.
No DC assessment available 
The specified user has not assessed the Design Change (DC) as yet.
You will be able to view the DC assessment when the specified user has made his assessment.
No DC assessors 
There are no assessors connected to the Design Change (DC).
You should ensure that the DC has been submitted for agreement using option 2.1.3 — Submit DC.
Once submitted, there will always be at least one assessor — the user associated with the DC.
No DCs available 
There are currently no DCs on the package you are trying to submit.
If the package has changed and the DCs have been aborted for some reason, but you still wish to proceed with the change, raise new DCs, get agreement for the changes, activate the Dcs through your package, then resubmit the package for approval.
No access to package 
You do not have access to the package specified.
You should either supply the password required (if known) or request access to the password from the manager of the package.
No details within given range 
No information exists for the data requested at the present time.
Repeat the request at a later time or repeat the request with a different set of data.
No endorsement required 
No SSR endorsement is required from you for the specified SSR and package.
Repeat the request at a later time or repeat the request with a different set of data.
No information available 
No information exists for the data requested at the present time.
Repeat the request at a later time or repeat the request with a different set of data.
No Mail has been selected 
No mail messages have been selected for processing using option 6.0.0 — Mail System.
You should select individual mail messages for processing, by entering any printable character in the ‘MK’ field of the following options:—
6.1.1 — Inspect Individual Mail
6.2.1 — Print Individual Mail
6.3.1 — Copy Individual Mail
6.4.1 — Delete Individual Mail
To select all mail messages (up to a maximum of 16 of the oldest mail messages) any of the following options should be selected:—
6.1.2 — Inspect All Mail
6.2.2 — Print All Mail
6.3.2 — Copy All Mail
6.4.2 — Delete All Mail.
No model sub state defined 
You have selected to view the model sub state of a module for which no model subtype has been defined.
There is therefore no sub state defined for the module.
Modules will only follow a process model if they have been defined to be of that particular model subtype via the MODULE-SUB-TYPE-IS keyword in the module header.
No module access 
You do not have access to the module specified.
You should either supply the password required (if known) or request access to the password from the manager of the module.
No more data available 
No further information exists for the data requested at the present time.
Repeat the request at a later time or repeat the request with a different set of data.
No more details 
No further information exists for the data requested at the present time.
Repeat the request at a later time or repeat the request with a different set of data.
No QA entry in LIFESPAN 
No Quality Assurance information exists for the data requested at the present time.
Repeat the request at a later time or repeat the request with a different set of data.
No Special Relationships found 
No Special Relationships exist for the user requested at the present time.
Repeat the request at a later time or repeat the request with a different user name.
No SPR details 
No Software Performance Report (SPR) information exists for the data requested at the present time.
Repeat the request at a later time or repeat the request with a different set of data.
No SSR details 
No Software Status Report (SSR) information exists for the data requested at the present time.
Repeat the request at a later time or repeat the request with a different set of data.
No Users found 
No LIFESPAN user names exist from the start name requested at the present time.
Repeat the request at a later time or repeat the request with a different start user name.
Note, the start user name does not need to exist, as LIFESPAN will start the list at or after the specified start point.
No user slot — Logon unsuccessful 
You have tried to logon to LIFESPAN when the maximum allowable number of users are currently logged on.
Either wait until one of the other users logs off or inform the LIFESPAN Manager to increase the allowable number of interactive users.
The LIFESPAN Manager should update the configuration file (up to the licensed maximum) and restart LIFESPAN.
Please contact Sema Software Technology Technical Support Department for further advice.
Nominated approver may not approve package 
You have tried to submit a package for approval to a user who does not have QUALITY ASSURER privilege.
You should submit the package to a user with QUALITY ASSURER privilege.
Option 7.2.3 — View One User, shows users' privileges.
The Project Manager should advise you which LIFESPAN user is to approve your packages.
Not all modules accessible 
You have tried to access one or more modules which are password protected.
You should either supply the password(s) required (if known) or request access to the password(s) from the manager(s) of the module(s).
Not all modules available 
You have tried to read out a complete package using option 1.3.1 when one or more modules are HCOA (Hard Copy Only Available) or their selection within the package does not exist.
Use option 1.3.2 — Read/Enter Individual Modules to read out the modules which are available.
Offline fail 
An unexpected internal error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Offline integrity running 
You have tried to start the offline integrity check using option 9.6.0 — Start Offline Integrity Check and it is already running.
You should wait until the current offline integrity check has finished and try again.
However, it is strongly advised that only one LIFESPAN user has OFFLINE MANAGER privilege to prevent duplication of work.
Please contact Sema Software Technology Technical Support Department for further advise.
Offline Media Types updated successfully 
The offline media types have been updated successfully using option 9.5.0 — Update Media Types.
No further action is required.
Offline Media updated succesfully 
The offline media availability has been updated successfully using option 9.3.0 — Update Availability Of Media.
No further action is required.
Offline Parameters updated successfully 
The offline parameters have been updated successfully using option 9.2.0 — Update Offline Parameters.
The offline operator screen (if supplied) will appear on the specified terminal (assuming it is not in use) at the stated time.
Offline request processed successfully 
The offline request has been processed successfully.
No further action is required.
Offline transaction failure — Please see LIFESPAN Manager 
An unexpected error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Offline Units updated successfully 
The offline units availability has been updated successfully using option 9.4.0 — Update Availability Of Units.
No further action is required.
Only development version number allowed 
An approved version number has been entered at the new package version or new module version prompt.
This is not allowed, as approved versions cannot be entered directly into LIFESPAN.
Only development versions with a trailing alphabetic character are valid.
You should clear the offending version number using LINEFEED or Ctrl/J and enter a development version.
Owner details access failure — see LIFESPAN Manager 
An unexpected error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Systems Technical Support Department for assistance.
Owner unknown to LIFESPAN 
The module owner specified is not a recognised LIFESPAN user.
You should check the spelling and enter an existing LIFESPAN user name.
Option 7.2.5 — View User Names provides a list of all current users.
Package already approved 
You have tried to approve a package which is already approved.
You should enter a package name which is not currently approved or quit the option.
All outstanding packages to be approved by a user can be listed by using option 1.5.4 — View User Status Enquiries.
Package already being prepared 
You have tried to prepare approval listings for a package which is being prepared already.
You should either enter the name of a package which has not been prepared previously or quit the option.
Package approval listings can be inspected by breaking out to an editor using PF1/1.
Package already submitted 
You have tried to submit a package for approval which has been submitted already.
You should either enter the name of a package which has not been submitted previously or quit the option.
Option 1.5.4 — View User Status Enquiries can be used to list all the packages which have been submitted for approval by a user.
Package in approval 
The package specified is currently in approval.
No further work can be carried out to the package until the QA approver has either granted or denied approval to that package.
Package Issue unknown to LIFESPAN 
The package issue is not known to LIFESPAN and therefore cannot be used.
You should enter a valid package issue.
A record of issues of the package can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
Package Name unknown to LIFESPAN 
The package name is not known to LIFESPAN and therefore cannot be used.
You should use an existing package name, a listing of all valid package names can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
Package or Product already exists 
You have tried to create a package /product which already exists.
You should either enter a package or product which has not been created previously or quit the option.
A listing of all existing product names can be obtained using option 5.4.4 — View Product Titles.
A listing of all existing package names can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
Package preparation or approval privilege violation 
You have tried to prepare approval listings for a package without the necessary privilege.
Only the Preparer and the Approver of the package can prepare approval listings.
If you are the Preparer of the package you may only obtain these listings provided the package has not been submitted for approval.
If you are the Approver of the package you may only obtain the listings after the package has been submitted for approval.
Package submitted successfully 
The package has been submitted successfully to the nomimated Approver.
No further work can be carried out.
All interested users receive a LIFESPAN mail message for each Design Change (DC) on the package once the Quality Assurance process is complete (i.e. APPROVED if approved, ACTIVE if denied).
The submitter also receives an additional mail message if the package has been denied, giving the reason for denying approval.
The approval status of the package can be determined also by using option 1.5.5 — View Package Status Enquiries.
No further action is required.
Package unknown to LIFESPAN 
The package name is not known to LIFESPAN and therefore cannot be used.
To use this package name you should create it using option 1.1.1 — Create Package/Product.
A listing of all existing package names can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
Password verification unsuccessful 
The verification of the password you have specified has been unsuccessful.
You should clear each password field (using the LINEFEED key or Ctrl/J) and then re-type the password and the verification taking care to spell both correctly.
Note that passwords are not case-sensitive.
Prefered module selected 
The preferred version of the module has been selected.
This is generally the version of the module which the module manager recommends for use.
This is generally the latest tested version but not necessarily the latest version.
Press TAB to continue 
Press the TAB key to continue.
LIFESPAN will display the next page in the sequence.
Process model operation successful 
The process model operation has been processed successfully.
No further action is required.
Process model operation failure 
There has been an error in performing the process model transaction.
You should advise your LIFESPAN Manager who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Product already exists 
The product has been created previously in LIFESPAN.
You should use a product name unknown to LIFESPAN.
Option 5.4.4 — View Product Titles, can be used to view the names of all existing products.
Product Details failure — see LIFESPAN Manager 
An unexpected error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Product has already been registered 
You have tried to either update a product which has already been registered or to register a product which has already been registered.
You should enter the name of a product which has not been registered previously or quit the option.
Option 5.4.4 — View Product Titles can be used to view the registration status of all products.
Product not registered 
You have tried to create an Issue without registering the details of the product.
You should register the product using option 5.1.3 — Register Product.
An Issue can now be created using option 5.3.1 — Create Issue.
Product package name unknown to LIFESPAN 
The product package name is not known to LIFESPAN and therefore cannot be used.
To use this package name you should create it using option 1.1.1 — Create Package/Product.
A listing of all existing package names can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
Product package type is invalid 
You have tried to use a package which was not reserved as a product package using option 1.1.1 — Create Package/Product.
A listing of all existing product packages can be obtained using LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
Product registered successfully 
The product details have been registered successfully with LIFESPAN.
You may now create an Issue for this product using option 5.3.1 — Create Issue, which links the product to a Client.
Product request processed successfully 
The product request has been processed successfully.
No further action is required.
Product unknown to LIFESPAN 
The product is not known to LIFESPAN and therefore cannot be used.
To use this product it must be created using option 5.1.1 — Create Product.
To use an existing product, use option 5.4.4 — View Product Titles, to view the names of all existing products.
QA Approval request processed successfully 
The request to approve a package has been processed successfully.
No further work can be carried out.
All interested users receive a LIFESPAN mail message for each Design Change (DC) on the package once the Quality Assurance process is complete (i.e. APPROVED if approved, ACTIVE if denied).
The submitter also receives an additional mail message if the package has been denied, giving the reason for approval being denied.
The approval status of the package can be determined also by using option 1.5.5 — View Package Status Enquiries.
QA cad fail 
An unexpected internal error has occurred while processing your QA transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
QA DC referenced modules not in package 
The package to be submitted for approval (or already submitted for approval) does not reference the modules listed on the corresponding Design Changes (DCs).
If you are the Preparer of the package you have two options:—
If the modules should be included in the package, edit the package module header to reference the omitted modules.
If the modules are development versions they must be referenced as LATEST-ISSUE in the package header module relations section.
Check that the correct versions of the modules exist in LIFESPAN using option 1.2.0 — Display Contents Of A Package.
If the modules should not be included in the package, abort the offending DC using option 2.7.0 — Abort DC.
If the DC also references valid modules create a new DC based on the old DC using option 2.1.1 — Create DC.
Remove the references to the invalid modules from page 3 of the DC.
Submit the DC for agreement using option 2.1.3 — Submit DC, then activate the DC using option 2.4.0 — Activate DCs, after all affected users have agreed to the change.
If you are the Approver of the package deny approval using option 1.5.3 — Grant /Deny Approval To Package and advise the package manager that a module(s) referenced on a DC are not included in the package.
QA DC user not package manager 
Only package managers are authorised to submit a package for QA approval.
Request the package manager to submit the package.
The package manager can be determined using option 1.7.0 — View Module Details.
QA failure 
An unexpected internal error has occurred while processing your QA transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
QA module offline not def 
An unexpected internal error has occurred while processing your QA transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
QA modules not on DC 
A package which is to be submitted for approval/has already been submitted for approval includes modules which are not listed on a corresponding Design Change (DC).
If you are the Preparer of the package you have three options:—
If the modules should be included in the package and are to be approved, create a DC to reference them using option 2.1.1 — Create DC.
Submit the DC for agreement using option 2.1.3 — Submit DC etc.
If the modules should be included in the package but are not to be approved (i.e. already approved issues) ensure that the modules are included as SELECTED-ISSUES in the module relations section of the package header.
These modules should not appear on the DC.
If the modules should not be included in the package, edit the package module header and remove the references to the offending modules.
Enter the updated package module into LIFESPAN using option 1.3.2 — Read/Enter Individual Modules.
Submit the package for approval using option 1.5.1 — Submit Package For Approval.
If you are the Approver of the package deny approval using option 1.5.3 — Grant /Deny Approval To Package and advise the package manager that a module(s) included in the package are not referenced on a DC.
QA modules offline 
One or more of the modules in a package to be approved are offline.
LIFESPAN QA has automatically requested the offlined modules to come back online.
Further processing of the package cannot be carried out until all modules are online.
QA no request 
You have tried to perform a QA operation on a package which has not been submitted for approval.
There are three possibilities:—
Check the package name has been typed correctly
Check those packages which have been submitted for approval by option 1.5.6 — View All Current QA Enquiries and select the appropriate package, if listed.
Submit the appropriate package for approval using option 1.5.1 — Submit Package For Approval.
QA non approved sub package 
You have tried to approve a package which references an unapproved sub package.
This is illegal.
Approvals in LIFESPAN must be performed in a ‘bottom up’ fashion.
You should submit the unapproved sub package for approval using option 1.5.1 — Submit Package For Approval.
Once the sub package has been approved the ‘containing’ package (i.e. higher level) can be approved.
QA not package module 
You have tried to submit a package for approval which is not a package module.
This is illegal.
You should enter a valid package name.
A listing of all existing package names can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
QA package not ready for approval 
You have tried to grant approval to a package before the approval listings have been prepared.
You should request preparation of approval listings using option 1.5.2 — Prepare Package For Approval.
Once these listings have been prepared in a VMS file (user specified), option 1.5.3 — Grant /Deny Approval To Package can be used to approve the package.
QA request processed successfully 
The QA request has been processed successfully by LIFESPAN.
No further action is required.
QA Submit request processed successfully 
The request to submit a package for QA approval has been processed successfully.
You will receive a LIFESPAN mail message once the QA process is complete.
The approval status of the package can be determined also by using option 1.5.5 — View Package Status Enquiries.
QA too many packages 
The current number of requests pending in LIFESPAN is all that it can currently handle.
You should try the request again at a later time.
QA user invalid 
The user name is not known to LIFESPAN and therefore cannot be used.
You should use a name known to LIFESPAN instead.
Option 7.2.5 — View User Names provides a list of all current users.
Request processed successfully 
The request has been processed successfully by LIFESPAN.
No further action is required.
SCAN file not found — please check spelling and try again 
The file to be scanned cannot be found in your current directory.
You should check the file exists in your current directory (by using the VAX/VMS DIR command) and that the spelling of the file is correct.
Selection Error — Please select one item 
You have selected more than one item.
Check your input and make sure that you have only selected one item.
Selected Mail processed — Press Return 
All mail which was selected for processing has now been completed.
Press RETURN to complete the option and to select a new option.
Serious Product error — see LIFESPAN Manager 
An unexpected internal error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Some modules offline: unavailable for at least dddd:hh:mm:ss 
A request has been made to read modules out of LIFESPAN where one or more modules are currently offline.
All modules requested will only be read out when all modules are available online.
An indication of when these are expected is shown in the message.
If the modules are needed sooner than this, please inform the LIFESPAN Manager.
Special Link updated successfully 
The special link has been successfully granted or removed for the given LIFESPAN user.
If the link has been granted, the specified user will have access to all your modules.
If the link is being removed, the user will no longer have automatic access to your modules.
A special link is used in conjunction with passwords and allows users who do not normally have access to a user's modules without supplying a valid password (as they are in a different branch of the user tree).
SPR accepted successfully 
The request to accept the Software Performance Report (SPR) has been successful.
No further action is required.
SPR already accepted 
You have tried to accept an Software Performance Report (SPR) which has already been accepted — this is illegal.
You should enter the identifier of an SPR which has not been accepted or quit the option.
A list of existing SPRs and their states can be obtained using option 3.7.2 — View SPR Titles.
SPR cannot be passed on — maximum passes exceeded 
A Software Performance Report (SPR) can be passed on a maximum of 6 times — this has been exceeded.
You are still responsible for the SPR and should address the problem(s) listed or ask a user with SPR SSR CONTROLLER privilege to ‘force’ another user to accept it.
SPR cannot be updated — check status 
You have tried to update a Software Performance Report (SPR) which has already been submitted — this is illegal.
You should either enter the identifier of an SPR which has not been submitted or quit the option.
A list of existing SPRs and their states can be obtained using option 3.7.2 — View SPR Titles.
SPR closed 
You have tried to process a Software Performance Report (SPR) which is already closed — this is illegal.
You should either enter the identifier of an SPR which is not closed, quit the option or use option 3.1.0 — Create SPR to create a new SPR based on the closed SPR.
A list of existing SPRs and their states can be obtained using option 3.7.2 — View SPR Titles.
SPR created successfully — the identifier is:
The Software Performance Report (SPR) has been successfully created.
LIFESPAN has allocated a unique identifier.
Take note of the identifier to be used for all future transactions involving the SPR.
SPR has already been submitted — cannot be updated 
You have tried to update an Software Performance Report (SPR) which has already been submitted — this is illegal.
You should either enter the identifier of an SPR which has not been submitted or quit the option.
A list of existing SPRs and their states can be obtained using option 3.7.2 — View SPR Titles.
SPR has not been entered 
You have tried to submit a paper Software Performance Report (SPR) which has not been updated.
You should update the SPR using option 3.2.0 — Update SPR and re-submit.
SPR has not been updated yet 
You have tried to submit an Software Performance Report (SPR) which has not been updated.
You should update the SPR using option 3.2.0 — Update SPR and re-submit.
SPR identifier unknown to LIFESPAN 
The Software Performance Report (SPR) identifier is not known to LIFESPAN and therefore cannot be used.
To use this SPR identifier you should create it using option 3.1.0 — Create SPR.
A list of existing SPRs and their states can be obtained using option 3.7.2 — View SPR Titles.
SPR internal failure — see LIFESPAN Manager 
An unexpected error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
SPR invalid module 
A module specified on the Software Performance Report (SPR) is not known by LIFESPAN and therefore cannot be used.
You should enter a valid module name.
A listing of all module names can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
SPR modules error 
The module information supplied is incorrect.
The Error column in the scrolled area will indicate which entries are invalid (see Appendix G for further details).
These errors must be resolved before the data can be updated.
SPR not submitted 
The Software Performance Report (SPR) has not been submitted.
Submission is necessary before using the following options:—
Option 3.4.0 — Accept/Reject SPR
Option 3.5.0 — Relate SPR To Modules
Option 4.0.0 — Software Status Report options which reference the SPR.
You should submit the SPR using option 3.3.0 — Submit SPR.
SPR not updated 
You have tried to submit a Software Performance Report (SPR) which has not been updated.
You should update the SPR using option 3.2.0 — Update SPR, then submit the SPR using option 3.3.0 — Submit SPR.
SPR other IDA failure — see LIFESPAN Manager 
An unexpected error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
SPR passed to user successfully 
The Software Performance Report (SPR) has been passed to the specified user successfully.
No further action is required.
SPR product failure — see LIFESPAN manager 
An unexpected error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
SPR rejected successfully 
The Software Performance Report (SPR) reject request has been successful.
No further action is required.
SPR request processed successfully 
The Software Performance Report (SPR) request has been processed successfully.
No further action is required.
SPR submitted 
The Software Performance Report (SPR) has been submitted.
You should enter the identifier of an SPR which has not been submitted or quit the option.
A list of existing SPRs and their states can be obtained using option 3.7.2 — View SPR Titles.
SPR submitted successfully 
The Software Performance Report (SPR) has been successfully submitted to LIFESPAN.
LIFESPAN will automatically mail a user deemed to be responsible for the SPR from the following list (in the order specified):—
The manager of an issue (if specified)
The manager of a module listed (if specified)
The LIFESPAN Manager.
No further action is required.
SPR unknown failure — see LIFESPAN Manager 
An unexpected error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
SPR updated successfully 
The Software Performance Report (SPR) has been successfully updated.
You should either update the SPR further using option 3.2.0 — Update SPR or submit it using option 3.3.0 — Submit SPR.
SPR/SSR Listings failure — see LIFESPAN Manager 
An unexpected error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
SSR cannot be submitted — an SPR is already closed 
A Software Performance Report (SPR) referenced by the Software Status Report (SSR) is already closed.
This is illegal.
An SPR may only be closed once but may be referred to as ‘replied’ many times.
You should use option 4.2.0 — Update SSR, to update the SSR as appropriate and re-submit.
SSR cannot be submitted — no modules or SPRs referred to 
The Software Status Report (SSR) must refer to either a Software Performance Report (SPR) or to a valid module.
You should update the SSR using option 4.2.0 — Update SSR and re-submit.
SSR created successfully — the identifier is:
The Software Status Report (SSR) has been successfully created.
LIFESPAN has allocated a unique identifier.
Take note of the identifier to be used for all future transactions involving the SSR.
SSR endorsement failure — see LIFESPAN Manager 
An unexpected error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
SSR has already been submitted — cannot be updated 
You have tried to update a Software Status Report (SSR) which has been submitted.
This is illegal.
You should either enter the identifier of an SSR which has not been submitted or quit the option.
A list of existing SSRs and their states can be obtained using option 4.7.2 — View SSR Titles.
SSR has already been submitted 
You have tried to submit a Software Status Report (SSR) which has already been submitted.
You should either enter the identifier of an SSR which has not been submitted or quit the option.
A list of existing SSRs and their states can be obtained using option 4.7.2 — View SSR Titles.
SSR identifier unknown to LIFESPAN 
The Software Status Report (SSR) identifier is not known to LIFESPAN and therefore cannot be used.
To use this SPR identifier you should create it using option 4.1.0 — Create SSR.
A list of existing SSRs and their states can be obtained using option 4.7.2 — View SSR Titles.
SSR internal failure — see LIFESPAN Manager 
An unexpected error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
SSR invalid module 
A module specified on the Software Status Report (SSR) is not known by LIFESPAN and therefore cannot be used.
You should enter a valid module name.
A listing of all module names can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
SSR modules error 
The module information supplied is incorrect.
The Error column in the scrolled area will indicate which entries are invalid (see Appendix G for further details).
These errors must be resolved before the data can be updated.
SSR not submitted 
The Software Status Report (SSR) has not been submitted.
Submission is necessary before using the following options:—
Option 4.4.0 — Endorse SSR
Option 4.5.1 — Relate SSR To Modules
Option 4.5.2 — Relate SSR to SPRs.
You should submit the SSR using option 4.3.0 — Submit SSR.
SSR other IDA failure — see LIFESPAN Manager 
An unexpected error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
SSR request processed successfully 
The Software Status Report (SSR) request has been processed successfully.
No further action is required.
SSR submitted 
The Software Status Report (SSR) has been submitted already.
You should enter the identifier of an SSR which has not been submitted or quit the option.
A list of existing SSRs and their states can be obtained using option 4.7.2 — View SSR Titles.
SSR submitted successfully 
The Software Status Report (SSR) has been successfully submitted to all affected users.
All users who are asked by LIFESPAN to endorse the SSR should do so using option 4.4.0 — Endorse SSR.
SSR unknown failure — see LIFESPAN Manager 
An unexpected error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
SSR updated successfully 
The Software Status Report (SSR) has been successfully updated with the information supplied.
You should update the SSR further using option 4.2.0 — Update SSR or submit it (providing you are a user with SPR SSR CONTROLLER privilege) using option 4.3.0 — Submit SSR.
Start Issue alphabetically after End Issue 
The start issue identifier for a range of issues is alphabetically after the specified end issue identifier.
The end issue identifier must be alphabetically after (or equal to) the start issue identifier for it to be a valid range for the search.
Start Module alphabetically after End Module 
The start module name for a range of modules is alphabetically after the specified end module name.
The end module name must be alphabetically after (or equal to) the start module name for it to be a valid range for the search.
Syntax Error — Charge Code in invalid numeric format 
You have specified a non-numeric value for a charge code — this is invalid.
Enter a charge code in the range 0 — 9999.
Syntax Error — Charge Code out of range 
You have specified a value for a charge code which is outside the permitted range.
Enter a charge code in the range 0 — 9999.
Syntax Error — Client Identifier in invalid numeric format 
You have specified a non-numeric value for a client identifier — this is invalid.
Enter an existing client identifier in the range 1000 — 999999.
Syntax Error — Client Identifier out of range 
You have specified a value for a client identifier which is outside the permitted range.
Enter an existing client identifier in the range 1000 — 999999.
Syntax Error — Confirmation value in invalid format — Please specify Y/N 
A response has been made which is not ‘Y’(Yes) or ‘N’(No) as expected.
You should specify ‘Y’ or ‘N’.
Syntax Error — Date and Time in invalid format 
The date and time specified is in an invalid format.
You should specify a date and time in the format dd-MMM-yyyy hh:mm .
Syntax Error — Date and Time should be later than current date and time 
The date and time specified is later than the current date and time.
You should specify a date and time which does not exceed the current date and time in the format dd-MMM-yyyy hh:mm .
Syntax Error — Day Month Year in invalid format 
The date has been specified incorrectly.
You should specify a date in the format dd-MMM-yyyy .
Syntax Error — DC Filename in invalid format 
The specified filename for the Design Change (DC) listing is not a valid VMS filename.
You should specify a valid VMS filename (without disk and directory) in the format FILE.EXTENSION, up to 64 characters long.
Note that for VMS filenames, the FILE and the EXTENSION must not exceed 39 characters.
Syntax Error — DC Identifier in invalid numeric format 
You have specified a non-numeric value for a Design Change (DC) identifier — this is invalid.
Enter an existing DC identifier in the range 1000 — 999999.
Syntax Error — DC Identifier out of range 
You have specified a value for a DC identifier which is outside the permitted range.
Enter an existing DC identifier in the range 1000 — 999999.
Syntax Error — DC Priority value in invalid format 
An invalid value has been specified for the Design Change (DC) priority.
You should specify one of the following:—
Routine —(R is sufficient)
Urgent —(U is sufficient)
Emergency —(E is sufficient).
Syntax Error — Filename in invalid format 
The specified filename is not a valid VMS filename.
You should specify a valid VMS filename (without disk and directory) in the format FILE.EXTENSION, up to 64 characters long.
Note that for VMS filenames, the FILE and the EXTENSION must not exceed 39 characters.
Syntax Error — Future Date in invalid format 
The future date specified is in an invalid format.
You should specify a date in the future in the format dd-MMM-yyyy .
Syntax Error — Future Date should be later than current date 
The future date specified is earlier than the current date.
You should specify a date which is later than the current date, in the format dd-MMM-yyyy .
Syntax Error — Issue Number in invalid format 
The specified issue number is not valid for LIFESPAN.
You should enter an issue number in the format 99.99 or 99.99A, where 9 is a digit in the range 0 — 9, and A is an optional development code in the range A — Z.
Syntax Error — Logic value in invalid format — Please specify Y/N 
A response has been made which is not ‘Y’(Yes) or ‘N’(No) as expected.
You should specify ‘Y’ or ‘N’.
Syntax Error — Media Identifier in invalid numeric format 
You have specified a non-numeric value for a media identifier — this is invalid.
Enter a media identifier in the range 1 — 1000.
Syntax Error — Media Identifier out of range 
You have specified a value for a media identifier which is outside the permitted range.
Enter a media identifier in the range 1 — 1000.
Syntax Error — Module Name in invalid format 
An invalid module name has been specified.
You should enter a valid module name up to 28 alphanumeric characters long including spaces and the special characters: ‘—’, ‘-’, ‘.’,
‘$’, ‘!’
Syntax Error — Mounts Allowed value in invalid format — Please specify P/S/B 
A response has been made which is not ‘P’(Primary), ‘S’(Secondary) or ‘B’(Both) as expected.
You should specify one of the following:—
'P' — if a primary run only is to be done,
'S' — if a secondary run only is to be done or
'B' — if both primary and secondary runs are to done.
Syntax Error — Package Filename in invalid format 
The specified package filename is not a valid VMS filename.
You should specify a valid VMS filename (without disk and directory) in the format FILE.EXTENSION, up to 64 characters long.
Note that for VMS filenames, the FILE and the EXTENSION must not exceed 39 characters.
Syntax Error — Package Name in invalid format 
An invalid package name has been specified.
You should enter a valid package name up to 28 alphanumeric characters long including spaces and the special characters: ‘—’, ‘-’, ‘.’,
‘$’, ‘!’
Syntax Error — Page number in invalid numeric format 
You have specified a non-numeric value for a page number — this is invalid.
Enter any positive integer up to the next page number you have already viewed; 0 indicates that you have finished viewing the mail message.
Syntax Error — Page number out of range 
You have specified a value for a page number which is outside the permitted range.
Enter any positive integer up to the next page number you have already viewed; 0 indicates that you have finished viewing the mail message.
Syntax Error — Past Date in invalid format 
The past date specified is in an invalid format.
You should specify a date in the format dd-MMM-yyyy .
Syntax Error — Past Date should be earlier than current date 
The past date specified is not earlier than the current date.
You should specify a date which is earlier than the current date in the format dd-MMM-yyyy .
Syntax Error — Preferred Issue Number in invalid format 
The specified issue number is not valid for LIFESPAN.
You should enter an issue number in the format 99.99 or 99.99A, where 9 is a digit in the range 0 — 9, and A is an optional development code in the range A — Z.
Syntax Error — Print Retain Delete in invalid format — Please specify P/R/D 
The response made is not ‘P’(Print), ‘R’(Retain) or ‘D’(Delete) as expected.
You should specify:—
'P' — if the current mail message is to be printed,
'R' — if it is to be retained (default) or
'D' — if it is to be deleted.
Syntax Error — Product Identifier in invalid numeric format 
You have specified a non-numeric value for a product identifier — this is invalid.
Enter an existing product identifier in the range 1000 — 999999.
Syntax Error — Product Identifier out of range 
You have specified a value for a product identifier which is outside the permitted range.
Enter an existing product identifier in the range 1000 — 999999.
Syntax Error — QA Approve or Deny value in invalid format — Please specify G/D 
The response made is not ‘G’(Grant) or ‘D’(Deny) as expected.
You should specify:—
'G' — if the package is to be granted approval or
'D' — if it is to be denied approval.
Syntax Error — QA Filename in invalid format 
The specified QA filename is not a valid VMS filename.
You should specify a valid VMS filename (without disk and directory) in the format FILE.EXTENSION, up to 64 characters long.
Note that for VMS filenames, the FILE and the EXTENSION must not exceed 39 characters.
Syntax Error — Relative Time in invalid format 
The relative time specified is in an invalid format.
You should specify a relative time in the format dddd hh:mm .
Syntax Error — Scan Filename in invalid format 
The specified filename is not a valid VMS filename.
You should specify a valid VMS filename (without disk and directory) in the format FILE.EXTENSION, up to 64 characters long.
Note that for VMS filenames, the FILE and the EXTENSION must not exceed 39 characters.
Syntax Error — Selected Issue Number in invalid format 
The specified issue number is not valid for LIFESPAN.
You should enter an issue number in the format 99.99, 99.99A, ‘F’ for first issue, ‘L’for latest issue or ‘A’for next approved issue.
Syntax Error — Special Access value in invalid format — Please specify G/C 
A response has been made which is not ‘G' (Grant) or ‘C' (Cancel) as expected.
You should specify:—
'G’— if a special link is to granted or
'C' — if a special link is to be cancelled.
Syntax Error — SPR Filename in invalid format 
The specified Software Performance Report (SPR) filename is not a valid VMS filename.
You should specify a valid VMS filename (without disk and directory) in the format FILE.EXTENSION, up to 64 characters long.
Note that for VMS filenames, the FILE and the EXTENSION must not exceed 39 characters.
Syntax Error — SPR Identifier in invalid numeric format 
You have specified a non-numeric value for a Software Performance Report (SPR) identifier — this is invalid.
Enter an existing SPR identifier in the range 1000 — 999999.
Syntax Error — SPR Identifier out of range 
You have specified a value for a Software Performance Report (SPR) identifier which is outside the permitted range.
Enter an existing SPR identifier in the range 1000 — 999999.
Syntax Error — SPR Issue Number in invalid format 
The specified issue number is not valid for LIFESPAN.
You should enter an issue number in the format 99.99, 99.99A, ‘F’ for first issue, ‘L’for latest issue or ‘A’for next approved issue.
Syntax Error — SPR Selection value in invalid format — Please specify A/O/R/C 
A response has been made which is not ‘A' (All), ‘O’(Outstanding), ‘R’(Replied) or ‘C’(Closed) as expected.
You should specify:—
‘O’— if only outstanding SPRs are to included,
‘R’— if only replied to SPRs are to be included,
‘C’— if only closed SPRs are to be included or
‘A’— if all SPRs are to be included.
Syntax Error — SSR Filename in invalid format 
The specified Software Status Report (SSR) filename is not a valid VMS filename.
You should specify a valid VMS filename (without disk and directory) in the format FILE.EXTENSION, up to 64 characters long.
Note that for VMS filenames, the FILE and the EXTENSION must not exceed 39 characters.
Syntax Error — SSR Identifier in invalid numeric format 
You have specified a non-numeric value for a Software Status Report (SSR) identifier — this is invalid.
Enter an existing SSR identifier in the range 1000 — 999999.
Syntax Error — SSR Identifier out of range 
You have specified a value for a Software Status Report (SSR) identifier which is outside the permitted range.
Enter an existing SSR identifier in the range 1000 — 999999.
Syntax Error — User Directory in invalid format 
The specified directory is not in a valid VAX/VMS format
You should specify a valid VAX/VMS directory e.g. DISK1:[USER]
Task mail may be replied to or forwarded to another user — not both 
You have attempted to both reply to a task mail message and forward it to another user.
This is not possible, you cannot do both, only one or the other.
You should clear either the reply or forward fields using LINEFEED or Ctrl/J so that you either reply to the task mail or forward it, not both.
If you are not yet sure of your reply you should clear both fields and TAB to the next task mail message or leave the option.
You can then return to the option when you feel able to respond to the task mail.
This Client has been allocated the following identifier:
The client has been created successfully.
The client identifier should be noted carefully and either the identifier or the title used in all further operations for this client.
You should now use option 5.2.2 — Update Client to add the client's details.
This package is intended for issue as a Product 
The package has been reserved as a product module and can be used to create products using option 5.1.1 — Create Product.
No further action is required.
This Product has been allocated the following identifier:
The product has been created successfully.
The product identifier should be noted carefully and either the identifier or the title used in all further operations for this product.
You should now use option 5.2.2 — Update Client to add the product's details.
Too many DCs on package 
You have tried to activate more than 10 Design Changes (DCs) on a package.
Either consolidate the existing DCs or use another package to do the work.
If the DCs are consolidated then the existing DCs should be aborted and new DC(s) created referencing the modules on the old DC(s) and the old DC(s) as being superseded.
Too many links specified 
You have tried to create too many Special Relations.
If this relationship is required, it will be necessary to cancel an existing link, before a further link can be added.
Too many requests — please try again later 
The current number of requests pending in LIFESPAN is all that it can currently handle.
You should try again later.
UWS IN USE failure — see LIFESPAN Manager 
An unexpected internal error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
UWS internal error — see LIFESPAN Manager 
An unexpected internal error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
UWS serious error — see LIFESPAN Manager 
An unexpected internal error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Unable to prepare Approval Listings 
The package is not in state for approval — listings cannot be prepared.
Correct the errors indicated in the scrolled area of the Approval Modules page and repeat the request again.
Unidentified transaction response — see LIFESPAN Manager 
An unexpected internal error has occurred while processing your transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Unknown DC Error — see LIFESPAN Manager 
An unexpected internal error has occurred while processing your Design Change (DC) transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Unknown mail error — see LIFESPAN Manager 
An unexpected internal error has occurred while processing your mail transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
Unknown model subtype name 
You have specified a model subtype name which is currently not installed and hence is unknown in LIFESPAN.
You should clear the model subtype field using LINEFEED or Ctrl/J and enter the model subtype name of a process model which is currently installed.
Unknown Product error — see LIFESPAN Manager 
An unexpected internal error has occurred while processing your product transaction.
You should advise your LIFESPAN Manager, who should restart LIFESPAN.
If the problem still exists, please contact Sema Software Technology Technical Support Department for assistance.
User already exists 
You have tried to create a LIFESPAN user which has previously been created.
You should supply a LIFESPAN username which is not currently known to LIFESPAN.
Use option 7.2.5 — View User Names, to establish which names are already known to LIFESPAN.
User created successfully 
The LIFESPAN username has been created successfully as an immediate descendant of the requesting user (this cannot be altered).
Use option 7.2.2 — Update User, to update the user's details and the user's privileges.
Note that the user can only be given privileges which you possess (or a subset thereof).
User Details request processed successfully 
The request for user information has been successfully processed.
No further action is required.
User has already been passed this SPR 
You have tried to pass a Software Performance Report (SPR) to a user who has already been a holder of it.
LIFESPAN prohibits users from passing SPRs back and forwards indefinitely.
To this end, an SPR may only be passed on 6 times and cannot be passed to a user who has previously held it.
Option 3.8.0 — Force User To Accept SPR, allows users with SPR SSR CONTROLLER privilege to force an SPR on a user and prevent it being passed on further.
User has no access to module(s) or is not associated 
You are not an associated user for the DC(s) on the specified package and therefore cannot submit the package for approval (using option 1.5.1) or prepare the approval listings (using option 1.5.2).
Check that you have specified the correct package name.
A listing of all existing package names can be obtained using LISTREL or LIFESPAN Relational Database Interface (RDBI).
Contact Sema Software Technology Technical Support Department for more information on RDBI.
User is not Manager 
You have tried to create a new charge code using option 7.7.1 — Create Charge Code and you do not have MANAGER privilege or you have tried to offline a package using option 9.1.0 — Request Package To Be Offlined, and you are not the package manager.
In the first instance, the MANAGER privilege will be required, this can be obtained from an ascendant in the user tree with this privilege.
However, it is strongly advised that there is only one LIFESPAN user with the MANAGER privilege — please contact Sema Software Technology Technical Support Department for further advice.
In the second case, ask the manager of the package to offline the package on your behalf.
User is not a descendant 
The user name you have specified is not one of your descendants.
You have tried to update the details of a user that is not one of your descendants (using option 7.2.2) or you have tried to change the owner responsible for a charge code to a user that is not one of your descendants (using option 7.7.2).
Specify a user that is one of your descendants.
User is not a relation 
The user name you have specified is not one of your relations.
You have tried to view the details of a single user (using option 7.2.3) or a user's family (using option 7.2.4) that is not one of your relations.
Alternativley, you have tried to change the owner responsible for a charge code to a user that is not one of your relations (using option 7.7.2).
Specify a user that is one of your relations.
User is not an ancestor 
You have tried to change the owner responsible for a charge code when you are not the user currently associated with the charge code or one of his ascendants.
Check that you have specified the correct charge code, otherwise get the user assoiated with the charge code to change ownership for you.
User is not an assessor of DC 
You are not an assessor of the specified Design Change (DC).
A DC can only be assessed by a user who has been asked by LIFESPAN to assess it (ie. all managers of modules listed on the DC, managers of packages referencing modules on the DC and the DC submitter, calculated at the time the DC was submitted).
User is not associated with DC 
The given user is not associated with the Design Change and, therefore, is not permitted access to it.
Check that you have specified the correct DC identifier.
Option 2.8.5 — View DC Titles provides a list of all existing DCs and their state.
User is not designated approver 
The supplied username is not known to LIFESPAN or does not have QUALITY ASSURER privilege.
You should supply a username which is known to LIFESPAN and has QUALITY ASSURER privilege.
Option 7.2.5 — View User Names, displays all LIFESPAN users, option 7.2.3 — View One User, shows users' privileges.
The Project Manager should advise you which LIFESPAN user is to approve your packages.
User is not package manager 
You have tried to use option 2.4.0 — Activate DCs specifying a package that you are not the manager of.
You must supply a package name that you manage, to successfully activate the DC(s).
User name of SPR recipient unknown to LIFESPAN 
The supplied username is not known to LIFESPAN and, therefore, cannot be passed the Software Performance Report (SPR).
You should supply a username which is known to LIFESPAN.
Option 7.2.5 — View User Names, displays all such users.
User name unknown to LIFESPAN 
The supplied username is not known to LIFESPAN.
You should supply a username which is known to LIFESPAN.
Option 7.2.5 — View User Names, displays all such users.
Warning — identifier is for paper SPR 
The identifier supplied has been reserved by the LIFESPAN Manager as a paper Software Performance Report (SPR).
No further action is required.
Warning — Invalid issue(s) 
Invalid issues have been specified.
Either correct the issues or continue, by pressing RETURN.
Warning — Product Module Issue unknown to LIFESPAN 
The product module issue is not yet known to LIFESPAN.
LIFESPAN enables products to be created and updated to reference module issues which have not yet been created.
Warning — product package already referenced by another product 
A product has been updated to reference a product package for which there is already a product registered.
LIFESPAN does not disallow this but merely brings this to your attention.
Warning — product package is not approved 
A product has been updated to reference an unapproved issue of the product package.
You may make a product reference an unapproved product package.
However this is not usual and for this reason, LIFESPAN give a warning.
You are not allowed to send mail to yourself 
You have tried to send mail to yourself.
LIFESPAN does not permit this.
Mail may only be sent to other LIFESPAN users using option 6.5.0 — Send Mail Message.
You have NO Mail to process 
An option for processing mail has been selected and no mail exists for you at the present time.
You should select of the following options which may only be done when the combination of old and new mail is not zero:—
6.1.1 — Inspect Individual Mail
6.1.2 — Inspect All Mail
6.2.1 — Print Individual Mail
6.2.2 — Print All Mail
6.3.1 — Copy Individual Mail
6.3.2 — Copy All Mail
6.4.1 — Delete Individual Mail
6.4.2 — Delete All Mail.
Your Mail id is/Your Mail Identifier is:
This message is displayed to inform you of the mail identifier for the preceeding transaction.
This identifier should be noted and used to check the mail in the mail options 6.0.0 — Mail System.
PREFACE
Purpose
This User's Guide is intended to provide the knowledge required to operate LIFESPAN effectively on a day to day basis, describing the format of the LIFESPAN User Image and the structure of the various options available to users.
For the novice user, it introduces the LIFESPAN components and how these can be manipulated to perform the tasks which LIFESPAN offers.
For the more experienced user, it describes how complex or unfamiliar tasks may be performed, the reasons why some difficulties may be encountered and how these can be overcome.
audience
This User Guide is intended for all users who wish to access LIFESPAN.
Manual Structure
Section 1 gives an overview of LIFESPAN.
Section 2 describes the layout of the LIFESPAN user interface and an overview of the options available to the user.
Section 3 introduces the concept of LIFESPAN users and describes the various LIFESPAN privileges.
Sections 4 onwards give a detailed description of each of the items used by LIFESPAN.
A number of typical day to day scenarios involving LIFESPAN are presented.
These show how different LIFESPAN facilities interact and point out some common pitfalls in their use.
The ‘Reference Guide to LIFESPAN’ gives a detailed explanation of the options available to perform the tasks supported by LIFESPAN together with a description of the required inputs and the generated outputs.
INTRODUCTION
This section gives an overview of LIFESPAN, describing briefly how it is implemented and installed.
Functional Description
LIFESPAN is an interactive system for managing software throughout its life cycle.
It fulfils two top-level functions:
Production Control Support: LIFESPAN provides a number of automatic mechanisms (e.g. routine administration, modification interlocks) which help to enforce the orderly management of software development and its subsequent maintenance.
Configuration Control: LIFESPAN ensures that a precisely defined set of approved software can be issued and, if need be, re-issued.
The management functions which LIFESPAN supports include:
Controlled access to a securely held set of software.
Automatic enforcement of administrative, modification and quality control approval procedures.
Administrative support for quality assurance activities.
Help for project managers in establishing and maintaining software production procedures and standards.
Help for project leaders in organising and controlling software production.
Realisation of the LIFESPAN system
LIFESPAN consists of two main components, usually referred to as:
the Main Image and
the User Image 
The Main Image
The main image is the core of the LIFESPAN system.
It is an executable image which controls all accesses to the information under the control of LIFESPAN by servicing requests from one or more LIFESPAN users.
These requests, formed into transactions,cause the main image to interrogate and update the set of protected process files and the contents of storage directories containing the actual information.
The User Image
A user image process is generated by each LIFESPAN user when he or she ‘logs on’ to LIFESPAN.
The user image is the implementation of the user interface; its purpose is to collect information from users and construct this into transactions for processing by the main image.
The user image achieves this by means of options.
A LIFESPAN option performs a specific task which may construct and issue one or more transactions.
Functionally similar options are ordered into an index or menu and the set of indexes are linked together by the Master Level Index.
The complete range of LIFESPAN tasks can thus be represented by a hierarchical structure.
This is described more fully in Section 2.
Setting Up the LIFESPAN system
A full description of the steps required to install and maintain a new LIFESPAN system is given in the manual ‘Installation and Management of LIFESPAN’.
This is essential reading for the VAX System Manager and the appointed LIFESPAN Manager.
It defines the requirements of the VMS directories required by LIFESPAN and describes how to create the process files and the Configuration File and explains how to maintain the LIFESPAN system once it has been established.
THE LIFESPAN USER INTERFACE
Introduction
As introduced in Section 1, the LIFESPAN user image is the implementation of the user interface to LIFESPAN.
This section describes the general aspects of:
Structure of user interface options
Layout of the user interface pages
Structure of user interface options
The user of LIFESPAN interfaces with the facilities through a page,displayed on the terminal screen.
A single page, or series of pages, forms a facility, or option which is identified by means of an option number .
A set of logically related options is formed into an index,from which a selection may be made.
The indexes are grouped to form a hierarchical structure whose root is the Master Level Index shown in figure 2.1.
This is the first index presented to you when you access LIFESPAN.
When an option number is entered, LIFESPAN displays the associated page.
Figure 2.2 shows the range of facilities offered by the LIFESPAN user interface.
These are presented as a kind of ‘Route Map’ from the Master Level Index downwards.
Highlighting is used on all or part of an option number to emphasise the significant part of the number at the level shown.
Module Management and Quality Assurance
Module Management and Quality Assurance is option 1 of the Master Level Index.
It provides a range of facilities concerning the day-to-day handling of modules, such as reserving module names and transferring modules into and out of LIFESPAN.
These facilities are shown in figure 2.3.
Design Change System
The Design Change System is option 2 of the Master Level Index.
Design Changes are the mechanisms which regulate and co-ordinate changes made to modules stored in LIFESPAN.
These facilities are shown in figure 2.4.
Software Performance Reports
The Software Performance Report (SPR) system is option 3 of the Master Level Index.
SPRs are used to report a fault or documentation error relating to a specific issue or module under LIFESPAN control, and to suggest improvements to pieces of software or documentation.
These facilities are shown in figure 2.5.
Software Status Reports
The Software Status Report (SSR) system is option 4 of the Master Level Index.
SSRs are used to reply to Software Performance Reports (SPRs), by providing an explanation of the original problem and a solution to it or by giving recommendations on how to proceed.
SSRs can also be used to describe the problem more clearly and in more detail, which is necessary because the originator of an SPR may not have been able to indicate the full extent of the problem or how it applies to other users.
In addition, SSRs may be sent out at any time to inform users of the current status of software.
These facilities are shown in figure 2.6.
Product, Client and Issue system
The Product, Client and Issue system is option 5 of the Master Level Index.
The options under this index allow the manipulation of ‘products’, packages of software which are intended for internal or external release to a ‘client’.
When the product is released many times to different clients, specific ‘issues’ act as a cross-reference delineating the relationship between the product and the client.
These facilities are shown in figure 2.7.
Mail System
The Mail System is option 6 of the Master Level Index.
When you request facilities which may take time to process (for example, transferring modules into and out of LIFESPAN), they are automatically set up as background activities.
The Mail System is used to inform you when these transactions have been completed.
It can also be used to send messages from one LIFESPAN user to another.
These facilities are shown in figure 2.8.
Manager Operations and User Organisation
Manager Operations and User Organisation is option 7 of the Master Level Index.
It provides options which are concerned with organising or adjusting the LIFESPAN system facilities, and includes creating new users, administration of process model functionality, arranging times of shut downs, displaying and updating user details and allocating charge codes.
These facilities are shown in figure 2.9.
The Offline System
The Offline System is option 9 of the Master Level Index.
LIFESPAN allows information to be distributed across a number of offline storage media types via the Offline System, and provides automatic control of the offlining and recovery of modules.
It is particularly useful when the storage disks become full, or if a certain package does not need to be stored online.
These facilities are shown in figure 2.10.
Layout of the user interface pages
General aspects
An example of a typical LIFESPAN user interface page is shown in figure 2.11.
The standard items of data are as follows:
(1) User name
— this is shown in the top left hand corner and displays the LIFESPAN user name of the current user, eg. MANAGER
(2) Option
— the option which is being selected (this field also allows the input of a new option number, eg. 2.8.1
(3) Halt
— the date and time of the next scheduled LIFESPAN shutdown, eg. 20-JUL-1990 11:29
(4) Node
— the host node name of the LIFESPAN process being accessed, eg. YGVX06
(5) Mail
— relating to the mail messages for the current user, the New figure shows the number of unread mail messages and the Old figure shows the number of mail messages which are still retained in LIFESPAN but which have already been printed or read by the user, eg. 13 new messages and 1 old message.
The LIFESPAN box, in the top centre of the page, shows the following:
(6) Version
— the version of the currently running LIFESPAN process, eg. LIFESPAN 07.00
(7) Process name
— the name of the LIFESPAN process being accessed, eg. OMEGA.
The remainder of the page is used to transfer information between the user and LIFESPAN.
The information required or displayed depends on the option and this part of the page is reconstructed and displayed when options are selected,
Index page
The last two options on the index page shown in figure 2.1 are common to all index pages:
N — New Option This avoids the use of further index pages and takes you directly to the option prompt, so that you can enter the 3 digit number of the option you require.
E — Exit from LIFESPAN This is used when work on LIFESPAN is finished.
Control is returned to the VMS directory from which you accessed LIFESPAN.
In addition, all index pages except the Master Level Index have one more option in common :
0 — Previous Menu This returns you to the index page one level higher in the hierarchy of indexes.
One of these standard options (N, E, 0) appears as a default beside Your Option and is selected by pressing RETURN.
If it is not the one required, you should overtype it with the correct single digit option number and press RETURN.
An example of an index page containing all of the standard options is given in the Design Change System index, figure 2.12.
The aim of Index pages is to lead you easily and quickly to the option required, without needing to know, or remember, all the option numbers before starting.
The pages lead automatically from general areas of interest to specific LIFESPAN operations, depending on the sequence of options selected from each page.
Help pages
Whenever you are in doubt about what to do next, what to enter, or you do not understand what is being displayed on the page, more information can be obtained by pressing the Help key,(the PF2 key on the keypad).
The help facility is multi-level.
Initially, a simple message is displayed at the foot of the current page, but if this information is insufficient, more is available by pressing the Help key repeatedly until sufficient detail is displayed to solve any problems.
In some cases, whole pages of information are displayed, temporarily replacing the original page.
An example of a Help page is shown in figure 2.13.
Cache page
It is helpful to users to be able to provide a means of storing a number of items representing certain LIFESPAN configuration types (eg. module names, DC identifiers, SPR identifiers, etc.) so that previously used items can be recalled.
This reduces the number of errors from mistyping, speeds up the operation of the user interface and provides a session memory.
The LIFESPAN cache provides this facility.
On entry to an option, all fields which have data items maintained by the cache are automatically initialised, using the most recent data held in the cache.
Each field may then be edited in the usual manner.
A Cache page can be accessed to select a previous input value by pressing the special function key PF1/2 , while on a field whose data type is cacheable (eg. Package Name).
An example of the Cache page is shown in figure 2.14.
This page displays details of each data item held in the cache for the current input field.
In addition to the above, the module name cache has further functionality in that it allows alphabetic and wild card searches to be performed upon both the contents of the cache and the LIFESPAN database.
Hence it is easy to see exactly what modules are contained within your database.
An example of the module name Cache page is shown in figure 2.15.
For a full explanation of the contents, see the ‘Reference Guide to LIFESPAN’.
Multi-Form Index page
Where an option handles a large amount of information, a page, showing the names of all input fields which are handled by the option, can be used to help you supply the necessary input.
This Multi-Form Index page displays an indication of all fields which have been accessed, all fields which are mandatory (and therefore require to be accessed), and the next field to be processed.
The facility is available for all options, but is particularly useful for options which extend over two or more pages.
You may invoke this index form by pressing PF1/3 , the Multi-Form key.
This will display the relevant information as illustrated in figure 2.16.
You can select the required field name from the form, if this is different from the current value, by marking the required field name or by inputting an appropriate index.
On exit from the form, you will be returned to the specified input field of the option from which the Multi-Form Index page was invoked.
For a full explanation of the use of the Multi-Form Index page, see the ‘Reference Guide to LIFESPAN’.
LIFESPAN USERS AND PRIVILEGES
Introduction
In order to retain flexibility within LIFESPAN, everyone able to use LIFESPAN is called a ‘user’.
Users within LIFESPAN are arranged in a hierarchy with the LIFESPAN Manager at the top.
The LIFESPAN Manager (whose name is MANAGER) has the full range of privileges available to him and is the only user who exists in a system when it is installed.
MANAGER has the privilege to create new users who, in turn, may then create other new users, building up families with parents and descendants.
In creating new users a parent may grant subsets, up to the full set, of his own privileges to his descendants.
Refer to figure 3.1.
A parent can grant additional privileges (provided the parent has the additional privileges himself) or rescind privileges previously granted to a descendant at any time.
Any user can reduce his own range of privileges.
In addition, LIFESPAN always assumes that the parent of a user is the person to whom information is to be sent if a user is in some way deficient in the activities to be undertaken, e.g. failing to respond to a Software Performance Report.
It is therefore recommended that the LIFESPAN user hierarchy should be set up to reflect the structure of the individual organisation concerned.
A detailed explanation with examples of different hierarchies can be found in the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
Effects of LIFESPAN Privileges
The following describes each of the LIFESPAN privileges and which options they allow you, as a privileged LIFESPAN user, to perform.
If do you not have the required privilege, you will be able to view the various index pages, but you will be prevented from executing any of the privileged options.
An appropriate warning message will be displayed to alert you to the lack of privilege, however you can still read the HELP pages for general information.
Manager privilege
Manager privilege gives a user the highest privileges on the system, It should therefore be granted with care.
However, the user MANAGER always remains at the top of the LIFESPAN system's user tree and can never lose his unique privileges.
Other users may have Manager privilege, but are always beneath MANAGER in the hierarchy.
Manager privilege allows you to:
change the privileges of any user (option 7.2.2)
adjust the time to shut down (option 7.4.0)
make facilities available /unavailable (option 7.5.0)
create a Charge Code (option 7.7.1)
change ownership of a charge code (option 7.7.2).
Create User privilege
Create User privilege allows you to create immediate descendants in the LIFESPAN user tree using option 7.2.1.
Quality Assurer privilege
Quality Assurer privilege allows you to grant or deny approval to packages using option 1.5.3.
Marketing privilege
You will require Marketing privilege to use any of the Product options under index 5.0.0.
Offline Manager privilege
You must have Offline privilege to use the following Offline options:
Update Offline Parameters (option 9.2.0)
Update Availability of Media (option 9.3.0)
Update Availability of Units (option 9.4.0)
Update Media Types (option 9.5.0)
Start Offline Integrity Check (option 9.6.0)
SPR SSR Operations privilege
You must have SPR SSR Operations privilege to use any of the SPR and SSR listing options under indexes 3.6.0 and 4.6.0.
SPR SSR Controller privilege
You must have SPR SSR Controller privilege to use the following options:
Force User to Accept SPR (option 3.8.0)
Submit SSR (option 4.3.0)
DC Operations privilege
You must have DC operations privilege to submit a Design Change using option 2.1.3.
Process Model Operations privilege
You must have Process Model Operations privilege to Install/Deinstall a Process Model using option 7.3.1.
Project Administrator privilege
You must have Project Administrator privilege to assign or deassign roles to users using option 7.2.2.
Typical Users
There are a range of job titles in use in most organisations, some inherent in design and production and some specific to the requirements of configuration control and computer operation.
LIFESPAN does not specifically recognise job titles such as programmers, analysts or quality assurers; all are known to LIFESPAN simply as users.
Recognising, however, that many organisations may allow different users to carry out different activities, LIFESPAN allows users to be assigned one or more access privileges in connection with these varied activities.
It is therefore the responsibility of each recipient of LIFESPAN to determine which privileges should be allowed; for example, which privileges should be allocated to programmers in their organisation.
The following paragraphs suggest what sort of privileges such users might be assigned.
LIFESPAN Manager
Mandatory privileges All
The LIFESPAN manager has all possible privileges on the LIFESPAN system as a whole.
This user's responsibilities include ensuring that there are adequate safety precautions taken in the back-up of the LIFESPAN system, invoking routine processes, and registering new users.
Module Manager
Mandatory privileges None
Typical privileges Create User
The module manager is responsible for a particular module (or set of modules) throughout its life.
This user has access privileges to all of these modules at any time.
Provided that the module is not called up by any packages managed by other users, the module manager can authorise the module to be modified, copied and deleted.
If the module is called up by other packages managed by other users, it can only be modified, copied or deleted if the agreement of the relevant package managers is obtained.
Configuration Manager
Mandatory privileges SPR SSR Controller, SPR SSR Operations
The configuration manager has access privileges to ensure that a particular software configuration is ready for emission as a product, i.e. that a software set has been tested and approved.
This user also distributes the appropriate software performance and status report forms.
Quality Assurer
Mandatory privileges Quality Assurer
The quality assurer has access privileges to packages which are currently undergoing approval.
His responsibility is to ensure that a particular package has achieved the quality standards set by the project which is using it.
This user receives information from LIFESPAN, but only enters into LIFESPAN the fact that a particular quality check has passed, or failed.
Programmer
Mandatory privileges None
The programmer in LIFESPAN terminology has access privileges to the modules and packages with which he is working.
The programmer may also be given temporary access to other modules by way of special links.
This user is seen as the person who will create, enter and modify individual modules and packages.
Sales User
Mandatory privileges Marketing
The sales user has access privileges to client and product information.
The sales user's typical functions include entering new clients' names, the products which they have purchased and the maintenance agreements for which they have contracted.
Computer System Manager
Mandatory privileges None
The computer system manager has no specific LIFESPAN privileges, but does have access privileges to the computer system(s) on which LIFESPAN runs.
He is responsible for the day-to-day running of the computer system, installing new software and setting up the accounts on which LIFESPAN users will do most of their work.
Computer System Operator
Mandatory privileges None
The computer system operator is normally involved only in the administrative side of LIFESPAN, carrying out tasks such as loading the offline media.
Module Owner
Mandatory privileges None
The module owner is generally the person or organisation who pays for the module (or modules) to be developed, although this user has no specific LIFESPAN privileges.
MODULES
Introduction
Modules are LIFESPAN's fundamental building blocks.
All software, of whatever form or kind, is submitted to LIFESPAN, stored and retrieved as one or more LIFESPAN modules.
The concepts and structure of LIFESPAN modules are described in the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
The aim of this section is to describe the life cycle of a module and highlight the use and interaction between the LIFESPAN user interface options necessary to manipulate modules.
A diagrammatic representation of this life cycle is shown in figure 4.1.
Reserve a name for the package
A PACKAGE module name can be reserved using option 1.1.1, Create Package /Product.
This requires the user to enter a unique name, together with a valid charge code so that LIFESPAN can determine where to store its copy of the package, and a filename which will be used each time the package is transferred to or from LIFESPAN.
If the package is intended for issue as a Product, the user must specify ‘N’ to the ‘Package (Y/N)’prompt.
In most cases, only a package will be required, in which case, the user must specify ‘Y’.
Module names for SOURCE, FOREIGN and PMODEL modules can be reserved in a similar way using option 1.1.3, Reserve Source, Foreign and Pmodel Modules.
These types of modules do not require an associated filename as this will be specified by the package which will eventually reference them.
Having reserved the name(s) successfully, LIFESPAN will return a unique Design Change (DC) identifier to the user.
This DC is the authority given by LIFESPAN to the user to allow him to update the new package.
The user should take careful note of the DC identifier as it will be required in other operations involving the package.
The automatic DC created in this case, will be in state AGREED.
See the section on Design Changes for additional information.
When a package module name is reserved, a skeleton module header is created by LIFESPAN containing (amongst other things):
the package module name
the issue number (00.00Z)
the user name and date
the package name again, together with the specified file name, in the ‘MODULE-RELATIONS-ARE’ section (a package always contains itself).
This skeleton module header is created in the storage directory associated with the charge code which has been specified by the user and can be subsequently read from LIFESPAN.
Activate the DC(s)
Using the package name and the identifier of the DC in AGREED state, the user must now associate the two, using option 2.4.0, Activate DC.
The result of this option is that the state of the DC is changed to ACTIVE, thus fulfilling LIFESPANs requirement for a DC to be active through only one package.
A DC can only be activated once.
At this stage, the DCs relating to any other modules which are to be updated using this package can also be specified.
The most likely cause of any errors at this stage are due to an incorrectly specified package name or DC, or because the DCs relating to other modules are not in the correct (AGREED) state.
Update the package contents
Option 1.3.4, Edit Package Contents, should now be used to automatically read the package from LIFESPAN, update its contents and re-enter it.
The user must specify the name of all the other modules which the package is to contain.
If the package is to contain new modules, their names must be referenced as LATEST resulting in a ‘MODULE-RELATIONS-ARE’ reference of the form:
If the package is to contain modules which already exist, then each one must be referenced as LATEST, PREFERRED or SELECTED at a specified issue, resulting in ‘MODULE-RELATIONS-ARE’ references of the form:
If the user wishes to make other additions to the module header, including the description, references etc. then the package must be read out of LIFESPAN using either option 1.3.1, Read Complete Package, 1.3.2, Read/Enter Individual Modules or 1.3.3, Read From Root Package and updated manually.
Scan the package and modules
Before the package and modules can be entered into LIFESPAN again, the information within the module header must be checked to ensure that it has been correctly formatted and is thus acceptable to LIFESPAN.
This is achieved by an operation known as ‘scanning’.
Scanning can be performed using the stand-alone scanner, supplied with LIFESPAN, or by using the online scanner, available while logged onto LIFESPAN through option 1.4.0, Scan A Module.
Scanning need not be performed every time a module is updated as LIFESPAN will automatically scan a module when an attempt is made to enter it.
It is useful, however, to know that the modules scan correctly when, for example, the headers have been generated by a novice user.
A common scan error at this stage is due to the package issue number in the MODIFICATION-RECORDS-ARE section being inconsistent with the issue number specified in the MODULE-RELATIONS section.
A full set of scan errors is given in the ‘Reference Guide to LIFESPAN’.
Enter the package and modules into LIFESPAN
When the modules have been scanned successfully, the user can enter the new versions using option 1.3.2.
This option is used to read or enter modules.
It displays the contents of the package and allows the user to mark the modules to be transferred with an ‘E’(for Enter) or a ‘R’(for Read).
Only one type of operation may be performed at a time.
For a new package which requires to contain other modules, the Entry operation must be carried out twice.
As the skeleton package originally contains only the package itself, there is no means of marking the constituent modules for entry until the updated package has been entered.
When this has been carried out successfully, option 1.3.2 can be invoked again, the new contents are displayed, and the remaining modules can be marked for entry.
LIFESPAN scans all the module headers which are marked for entry.
Provided that they contain no errors, the modules are then transferred from the user's directory into LIFESPAN.
Note that all the files to be included as part of a FOREIGN module must be on the user's directory before the module can be entered.
The scanner checks this and reports any errors.
Once all the modules have been entered, the package is then established.
Access to packages and modules
Options 1.3.1, 1.3.2, 1.3.3, 1.3.4 and 1.3.5 can be used repeatedly to transfer modules to and from LIFESPAN.
All user access to modules is based on packages and is subject to the rigorous security checks built into LIFESPAN.
A user can only enter or retrieve a module by reference to a LIFESPAN package which contains it and to which the user has appropriate access privileges.
It should be noted that each time a module is transferred from LIFESPAN, it is copied to the directory from which LIFESPAN is currently being accessed.
Likewise, modules must be entered into LIFESPAN from the current directory.
Therefore, while the user is moving between various directories in the course of normal work, LIFESPAN can be accessed at any time from any directory which contains the relevant modules.
Quality Assurance of packages
Once the required modifications to a package and its constituent modules have been carried out they can be submitted for APPROVAL to a baseline, specified by the Quality Control procedures of the organisation.
This means that a specified LIFESPAN user, with QUALITY ASSURER privilege, can examine and assess the contents of the package as fit for the purpose, specified by the baseline to which approval is being sought.
Before submitting the package for approval, the manager of the package can ensure that the package is in an ‘approvable’ condition,(in a similar way to running the scanner before attempting to enter a module).
LIFESPAN will perform this check during the approval process, but it is worthwhile knowing that it can also be performed by the user, thus avoiding any inconvenience to himself or the approver.
The check is carried out as a preliminary step within option 1.5.2, Prepare Package for Approval.
This option obtains the material to be approved and carries out a check to ensure that the package, the references to its contents, the constituent modules and the set of active DCs are in a correct and consistent state.
If the checks are successful, LIFESPAN will allow the user to generate a file containing this information.
If the checks fail, then the user will not be allowed to generate the listings.
Regardless of whether or not the user carries out these checks, option 1.5.2 must be used by the designated approver during the approval process.
Errors which are frequently encountered at this stage arise because:
DCs reference modules which are not in the package.
Either add the modules to the package or abort the DC(s) which reference the offending modules.
If the aborted DC(s) reference other modules which ARE required, then new DCs, referencing these modules, must be activated through the package.
the package contains modules for which an active DC does not exist or has been raised through another package.
If a DC has been activated through another package, then abort the DC.
Thereafter, in either case, activate a DC which references the modules.
the package relations include SELECTED versions of development modules.
If the development versions are required, then DCs must be created for them.
If approved versions of the modules are required, then the package should be updated to SELECT the APPROVED versions.
When the manager of the package is satisfied that the package is ready, he can then invoke option 1.5.1 to submit the package for approval.
This option requires the name of the package, the name of the LIFESPAN user to be designated to carry out the approval, and the date by which the approval decision is required.
If this information is valid, LIFESPAN changes the states of all DCs which are currently ACTIVE on the package, to the state IN APPROVAL.
While DCs are in this state, no modifications may be made to the modules, although they may still be read out of LIFESPAN.
Once the designated approver has decided whether or not the package is to be approved, he will grant or deny approval to the package using option 1.5.3.
If the approver has granted approval to the specified package, each module to be approved will be automatically updated by LIFESPAN to contain an approval record, indicating that the module has undergone a successful QA check.
The user cannot enter a module with such a record as the latest version; this can only be done by LIFESPAN.
When the package and its contents are approved, all DCs which are in state IN APPROVAL change to state APPROVED and no longer apply to the modules.
The modules are now available again for update, provided a new DC is raised on them.
If the approver has denied approval, the DCs which are associated with the package will be returned to state ACTIVE in order to allow the submitter to rework the modules and address the faults raised by the approver.
A diagram of the QA process is shown in figure 4.2.
Viewing information on Modules
LIFESPAN has three options which allow the viewing and manipulation of the details associated with individual modules.
Option 1.7.1, View Module Details, enables the user to display information about an individual module.
It gives immediate on-line access to the details, such as the module's type, its charge code, the Latest and Preferred versions, who is responsible for it and why it was created.
In order to prevent unauthorised access to module details, LIFESPAN will only display the information if the current user:
is the owner or manager of the module, or is a relative of the module's owner or manager (ancestor or descendant).
has been granted a special access to the module by the owner or manager of the module.
has supplied the current module password, either now or at any time since the password was last changed, or the module has no password.
If the user does not fall into any of these categories, LIFESPAN displays an appropriate error message and prevents the viewing of details of that module.
Option 1.7.2, View Module Substate, enables the user to display the substate of an individual module.
Option 1.8.0, Update Module Details, enables the user to update the details of an existing module.
The user must be the manager of the module and may update details such as the preferred version, module owner, module manager and existence string (or module title).
DESIGN CHANGES
Introduction
Design Changes (DCs) are the authorisation which LIFESPAN gives to its users to allow them to update modules.
The concepts and structure of Design Changes are described in the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
The aim of this section is to describe the life cycle of a Design Change and highlight the use and interaction between the LIFESPAN user interface options available to manipulate it.
A diagrammatic representation of this life cycle is shown in figure 5.1.
In order to modify one or more modules which constitute a baseline, a package is required which:
contains the modules to be changed.
has associated with it one or more DCs which refer to the modules to be changed and which have been agreed by all the other module managers likely to be affected.
A DC goes through a variety of states from its creation to final approval as indicated by the list below.
CRE ated.
Only the originator is aware of the contents of the DC.
The originator may alter the contents of the DC any number of times while in this state.
PRO — Proposed.
Other users likely to be affected by the change have been shown the DC and may agree or reject it, with an appropriate comment.
The originator can no longer alter the contents of the DC.
AGR — Agreed.
All affected users have agreed that the DC is acceptable.
REJ — Rejected.
One or more users have rejected the DC.
The proposed changes must be re-considered.
ABO — Aborted.
For some reason, it has been decided not to proceed with the DC.
ACT — Active.
The DC has been associated with a package.
This allows the modules to be modified by the authorised user.
IAP — In Approval.
Work is complete and the results are being subjected to quality approval.
APD — Approved.
The modified modules have been accepted as embodying the DC.
Changes to New Modules
In order to make the modification of modules consistent, DCs are automatically generated in state AGREED for all new module names which are created in a single transaction with LIFESPAN.
These DCs can be activated immediately to allow work to proceed.
The Overall Cycle
The cycle of modification starting from one agreed baseline and ending at another agreed baseline will be used to explain the operation of DCs.
Create the DC
To create a DC, the user must invoke option 2.1.1, Create DC.
This option requires only the input of a title.
Once this has been done, LIFESPAN allocates a unique number, a DC identifier, and returns this to the user.
A careful note must be taken of this DC identifier as it is required in all other operations regarding the DC.
At this point, the DC is in state CREATED and the user who created it is said to be the ‘associated user’.
Update the DC
Once a DC identifier has been obtained, the user can fill in the details of the required change.
This is done using option 2.1.2, Update DC.
This option allows the user to add details such as a textual description of the DC, details of any DCs which it may refer to or supersede, the names of the LIFESPAN modules which are affected, and details of any SPRs which are related to, or are referenced by, the DC.
It is recommended that as much information as possible be supplied since the DC may have to be assessed by other users, and will certainly be examined by the QA user who will eventually decide upon the fitness for purpose of any modules referenced by the DC.
It is not necessary to supply all of this information at once.
The DC can be updated as many times as necessary until such time as it is submitted for assessment.
Submit the DC
If all updates have been completed and the user has DC OPERATIONS privilege, he may submit the DC for assessment by all interested users by selecting option 2.1.3 Submit DC.
If the user does not have DC OPERATIONS privilege, he may use option 2.5.0, Change Ownership of DC, to pass the DC to a user who does have this privilege.
At this point, the DC changes to PROPOSED state.
Assess the DC
Once submitted, LIFESPAN informs all interested users that the DC requires to be assessed.
An ‘interested’ user is the creator of the DC or one who is the manager of a package containing any of the modules referenced by the DC.
The interested users are notified of the requirement for them to assess the DC via the LIFESPAN Mail System.
Each of these users should examine the contents of the DC using option 2.8.1, View One DC, and assess the implications of its progress.
Each user must then use option 2.2.0, Assess DC, to register their acceptance or rejection of the DC.
It is possible to see who has been asked to assess a DC using option 2.8.2, View DC Assessors and view their assessments using option 2.8.3, View DC Assessments.
If any of the interested users reject the DC, for any reason, the DC changes state to REJECTED once all users have assessed it.
No further work may be performed on the DC and the user who proposed it should review the reasons why it was rejected and produce a more suitable DC.
Activate the DC
When all interested users have accepted the DC, it changes state to AGREED.
It can then be activated through a package by the associated user using option 2.4.0, Activate DC, as described in the section on LIFESPAN modules.
The DC then changes state to ACTIVE, thus allowing the modules to which it refers to be updated, using the package through which the DC has been activated.
Common problems at this stage are:
the user is not associated with the DC, in which case the correct user name should be used or the managership of the DC transferred to the required user.
the user is not the manager of the package, in which case the correct user name should be used or the mangership of the package transferred to the required user.
Note that managership of the package can only be transferred if there are no DCs already active on it.
The DC is not in state AGREED.
The user must wait until all interested users have accepted the DC.
The DC refers to modules which are already referred to by a DC activated via another package (this check prevents the occurrence of conflicting modifications).
The current DC cannot be progressed at this stage.
The user must assess the impact of the modifications specified by the other DC.
The choice is either to
wait until the other modifications have been completed
abort the other DC and create another, which does not refer to the offending module.
Include an explanation in the description of the new DC as to why the module has been omitted.
Raise a DC on the offending module and persuade the other developer to activate this DC on the current package.
In order to work on a DC it is necessary for all the modules referenced to be in a single package.
If no such package is available, one may be created specifically to complete the work identified by the DC.
Otherwise, the DC must be aborted and replaced by a number of other DCs, each of which covers only part of the original work required.
More than one DC can be activated via a package at the same time, up to a maximum of 10, and all of the DCs can be worked on at the same time (which is why they must all be handled through one user and one package).
DCs and Quality Assurance
Once the required modifications to a package and its constituent modules have been carried out and the package has been submitted for approval, as described in the section on Modules, the DCs which were formerly active through the package change state to IN APPROVAL, thus preventing any further modifications to the modules while approval is in progress.
When the package and its contents are approved, the DCs change to state APPROVED and no longer apply to the modules.
If approval is denied, the DCs which are active through the package are returned to state ACTIVE in order to allow the appropriate rework to take place on the modules.
Aborting DCs
A Design Change can be aborted using option 2.7.0, Abort DC, if, for example, it refers to the wrong module or it has been activated through the wrong package.
The DC to be aborted must already exist and must not be in the state IN APPROVAL or APPROVED.
Once it has been aborted, no further development versions of the referenced modules can be entered into LIFESPAN via the DC, so it is important to ensure that the correct DC is specified.
An aborted DC can still be used as a basis for a new DC, using option 2.1.2, Update DC, if the volume of detail is large and the errors are minor.
Viewing information on DCs
LIFESPAN offers a number of options for finding out information about DCs.
Option 2.8.1, View One DC, enables the user to view the details of a specific DC, However the user must be associated with the DC or an interested user (i.e. the manager of any modules on the DC or the manager of packages containing one or more of these modules) or, if applicable, the nominated approver of the package via which the DC has been activated.
Option 2.8.2, View DC Assessors, and option 2.8.3, View DC Assessments, enable the user to view the list of assessors for a particular Design Change, whether thay have assessed it and, if so, what assessment comment has been specified.
The DC must have been submitted and, again, the requesting user must be the user associated with the DC or an interested user, if applicable.
Finally, option 2.8.5, View DC Titles, enables the user to view a list of DCs and their titles and states.
The information displayed by this option is available to all users, regardless of association with the DCs requested.
DC State Transitions
This sub-section describes how DCs can be transitioned between each of the states described in Section 5.1.
A diagrammatic representation is given in figure 5.2.
A DC is set to state CREATED by use of option 2.1.1.
When the details of a DC have been finalised and it has been submitted using option 2.1.3, its state changes from CREATED to PROPOSED.
It remains in this state while all interested users are assessing the DC.
A DC changes state from PROPOSED to AGREED only when the last interested user has accepted the DC using option 2.2.0 and only then if all interested users have accepted it.
Additionally, DCs which are generated as a result of using option 1.1.1 or option 1.1.3 are initially set to this state.
A DC changes state to REJECTED if a user has rejected the DC using option 2.2.0 but only when the last interested user has assessed the DC.
No more state changes can occur to a DC once in this state.
For DCs which are not in state IN APPROVAL or APPROVED, a transition can be made to state ABORTED using option 2.7.0.
This may be necessary when, for instance, the DC has been activated through the wrong package.
No more state changes can occur to a DC once in this state.
When a DC is activated using option 2.4.0, it changes state from AGREED to ACTIVE.
The DC can also enter this state from state IN APPROVAL when approval is denied to any modules referenced by it.
When a package is submitted for approval using option 1.5.1, all DCs which are currently ACTIVE through the package are transitioned to state IN APPROVAL.
The DC remains in this state until option 1.5.3 is used to indicate the outcome of the approval process.
When approval is granted to a package using option 1.5.3, all DCs, which were transitioned to IN APPROVAL when the package was submitted for approval, change to APPROVED state.
No more state changes can occur to DCs once in this state.
SOFTWARE PERFORMANCE REPORTS AND SOFTWARE STATUS REPORTS
Introduction
LIFESPAN recognises two types of report which are used to record information about the past, current and future states of one or more modules:
A Software Performance Report (SPR)is used by anyone, even if they are not a LIFESPAN user, to report suspected or real faults and failures, suggestions, observations or any other comments pertinent to modules stored in LIFESPAN.
A Software Status Report (SSR)is used by any LIFESPAN user to provide information to other users about one or more modules in LIFESPAN.
An SSR is used to reply to an SPR, but it can also be used simply as a means of disseminating information about one or more modules, in which case it need not refer to an SPR.
The concepts and structure of SPRs and SSRs are described in the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
The aim of this section is to describe the life cycles of SPR and SSRs and highlight the use and interaction between the LIFESPAN user interface options necessary to manipulate them.
Diagrammatic representations of these life cycles are shown in figures 6.1 and 6.2.
Software Performance Reports
An SPR may either be generated by a user entirely within LIFESPAN (a Magnetic SPR ) or be received from an external client on a paper form and subsequently transcribed into LIFESPAN (a Paper SPR ).
Paper SPRs should be identified by a unique number which can then be used to introduce the details into LIFESPAN.
Before using the SPR facilities, the user must reserve the identifiers allocated to paper SPRs within LIFESPAN by associating the required range with the keyword PAPER_RANGES in the configuration file.
By doing this, any SPR identifiers allocated by LIFESPAN are guaranteed not to clash with identifiers reserved for paper SPRs.
Up to ten non-overlapping paper ranges can be defined, however once defined, paper ranges cannot be reduced or removed, A paper range may be extended, however the identifiers introduced into the extended range must not have been previously allocated as magnetic SPRs.
SPR States
LIFESPAN treats SPRs as objects to which some sort of response must be made.
Generally they are the result of a user finding a deficiency or making a suggestion, and it is therefore important to keep track of whether appropriate action has been taken.
In order to do this, LIFESPAN defines a series of states through which an SPR progresses:
Cr — Created — The SPR is in the process of being entered into LIFESPAN and may be modified by the user creating it.
The SPR can be viewed by all users, but no response is required to it yet.
O — Outstanding — All details of the SPR have been entered and the SPR has been submitted for distribution to affected users.
A user has been allocated responsibility for replying to it but no SSR has been sent in response to the SPR.
The originator of the SPR still has no indication of what to do to avoid or correct the problem
R — Replied to — An SSR has been generated in response to the SPR and the user who entered it has been informed, but the problem is not yet fully resolved.
The SSR will have re-stated the problem and possibly suggested some temporary avoiding action.
C — Closed — The contents of the SPR have now been acted upon and the problem has either been fixed, or cleared for some other reason, for example the problem did not really exist at all, or there was a misunderstanding on the part of the originator.
Create the SPR
The first step in the life cycle of an SPR is to make it known to LIFESPAN.
For magnetic SPRs, this is done using option 3.1.0, Create SPR.
This option merely requires the title of the SPR and the name of the originator.
LIFESPAN will then return the SPR identifier for reference in all other operations regarding the SPR.
The details of the SPR can then be entered and updated using option 3.2.0, Update SPR, specifying this SPR identifier.
For paper SPRs, the SPR identifier should already identify the paper form and should also have been allocated by LIFESPAN, using the paper ranges specified in the configuration file.
It is therefore only necessary to enter the details using option 3.2.0.
LIFESPAN will confirm the fact that a paper SPR is being updated.
At this stage, the SPR is in state CREATED.
When entering the details of the SPR into LIFESPAN, it is best if the actual words written by the originator can be used, but if they are too extensive the paper copy should be filed under its SPR identifier, and a summary indicating that the full report exists in paper form should be entered into LIFESPAN.
It is best not to rely entirely on the paper copy since continual cross-referencing is tedious.
As much detail as possible should be entered into LIFESPAN.
Where possible, it is recommended that a complex SPR is split up into a number of smaller SPRs, each addressing a single point.
This makes it more likely that all of the details can be retained by LIFESPAN, without the need for external references, but more importantly, it allows the user to respond to each point by a separate SSR.
It is often difficult to determine whether the SPR is reporting a failure in the software, a misunderstanding, or a failure in delivered instructions.
It is very likely that the original SPR:
will be inaccurate
will only describe the effect of the problem and not its cause
will not interpret the visible effects to cover all possible causes and occasions of the problem.
It is therefore not usually appropriate for the original SPR to be circulated widely before considerable interpretation of it has been made.
The issued software to which the SPR refers should be stated, together with the version ranges of any modules which are affected by the SPR.
Additionally, the default description, supplied by LIFESPAN when option 3.2.0 is invoked, should be used as a guideline.
Submit the SPR
Once the details of an SPR have been entered and checked, the SPR can be submitted, using option 3.3.0.
Its state is transitioned from CREATED to OUTSTANDING and all users who may be affected by the SPR are informed, via the Mail System, of its existence.
The users deemed to be affected by an SPR are:
the managers of the product packages associated with any issues referenced by the SPR
the managers of all modules referenced by the SPR
the managers of the packages containing referenced modules.
Although these managers are not expected to take any responsibility for it, this does mean that notification of a failure in a module is passed through the LIFESPAN system, and individual managers can decide what impact the reported failure has on their modules and packages.
As well as informing users of the receipt and content of an SPR, a user must be nominated to pursue the SPR.
As it is often difficult for users to give accurate references to the area of software to which their report applies, the nominated user depends on any software issues or modules referenced by the SPR.
If the originator has provided some issue identifiers in the SPR, it is sent to the manager of the package associated with the first valid issue referenced.
If no valid issues are mentioned, the SPR is sent to the manager of the first module referenced.
If the SPR does not reference any modules, it is automatically sent to the LIFESPAN manager.
A user who has been nominated to pursue the SPR should either:
decide whether the report is sensible, relevant and accurate, and generate an appropriate response in the form of an SSR, or
pass the SPR on to a different, more appropriate user who will answer it.
This is done using option 3.4.0, Accept /Reject SPR.
If the user accepts the SPR, he remains as the ‘current holder’ and is responsible for progressing it.
If the user decides to reject the SPR, he may transfer responsibility for the SPR onto another user.
An SPR may only be ‘passed on’ in this manner for a limited number of times.
Once this limit has been reached a user must be forced, by a user with SPR SSR CONTROLLER privilege, to accept the SPR.
This is done using option 3.8.0, Force User to Accept SPR, and may be used as often as required, for example, to re-assign responsibility if the recipient of a previously forced SPR does not wish to take resposibility for it, or a user has accepted responsibility and then wishes to pass it to someone else.
Once the SPR has been submitted, an SSR can be created which ‘replies to’ or ‘closes’it, transitioning the state of the SPR to REPLIED TO or CLOSED, respectively.
This is discussed in more detail in the sub-section on Software Status Reports.
After the SPR has been submitted, it is still possible to add modules to the original SPR and also to extend the range of versions of a module specified by the SPR.
For example, in a large system it is unlikely that the originator will be able immediately to pinpoint the modules which are the root cause of the problem.
It is more likely that a high-level package will be identified initially, and then after some investigation this will be refined to one or more lower level packages.
Note, however, that you can only add a maximum of 10 modules to any one SPR.
Updates to modules and module ranges are achieved by using option 3.5.0, Relate Modules to SPR, and can only be peformed by the current holder.
Such modules may not subsequently be deleted from the SPR.
If an error is made this should be made clear in an SSR which replies to the SPR.
The managers of any newly referenced modules and any packages containing them are notified of the SPR.
During the refinement stage, it may be found that the wording of the SPR is inappropriate and does not describe the failure in detail.
In this case a new SPR should be generated, based on the old one, but with further details added.
The old SPR should then be ‘closed’ by an SSR.
Once the refining process is complete, the user who has accepted responsibility for the SPR must choose one of the following courses of action:
re-state the failure by way of an SSR, suggesting some sort of avoiding action or solution, but leaving the SPR in a ‘Replied to’ state until the problem has been fixed.
dismiss the SPR as inappropriate, wrong or incomprehensible, producing an SSR which ‘closes off’ the SPR without doing anything to modify the items reported on.
In the former case, it is likely that a Design Change will be raised to authorise work to be carried out to fix the reported problem.
This means that the SPR is left in the ‘Replied to’ state until the authorised work has been completed, at which time an SSR should be generated to close off the SPR and inform users of the change.
In the latter case, this is the end of the SPR cycle.
Software Status Reports
An SSR is always generated by a user entirely within LIFESPAN.
Its function is to report the status of some piece of software and can respond to a previously submitted SPR.
SSR States
An SSR may be in one of only two states:
Cr — Created — The SSR is in the process of being entered into LIFESPAN and may be modified by the user creating it.
S — Submitted — The SSR has been submitted.
Users may be in the process of endorsing it or adding module and SPR relations to it.
Create the SSR
An SSR is introduced to LIFESPAN using option 4.1.0, which only requires the input of a title for the SSR and the name of its originator.
LIFESPAN responds by allocating an SSR identifier which should be noted by the user as it is required for reference in other operations relating to the SSR.
When the SSR has been created, the user should then invoke option 4.2.0 to update its details.
These include originator details, relations to SPRs, referenced modules and versions, and a description.
An SSR may either Reply to or Close an SPR.
Replying to an SPR may be taken to suggest that the problem has not yet been resolved.
This may be because no solution, or only a temporary solution has been found, or because the desired solution has not yet been implemented.
Closing an SPR indicates that a problem has now been correctly rectified or that the SPR reported a problem which did not, in fact, exist.
The SSR description should, where appropriate, restate any problems reported by the SPR to which it relates, since it is likely that the person who reported the original situation was not aware of the true cause, or may not have known of any related problems.
As mentioned in the sub-section on SPRs, a number of SSRs should be generated when responding to a complex SPR, thus allowing the complete description to be stored in LIFESPAN.
As with SPRs, it may not always be possible to enter a complete description of the report into LIFESPAN, although it is advisable.
If, however, the required description is too extensive, a summary should be entered into LIFESPAN, noting that further documentation exists which fully specifies the report.
This documentation should be filed under the SSR identifier.
Submit the SSR
In a similar manner to the procedure for SPRs, once an SSR has been fully entered into LIFESPAN it should be submitted for distribution to all affected users using option 4.3.0.
This can only be performed by a user with SPR SSR CONTROLLER privilege and who is the creator of the SSR, or an ancestor of that user.
This privilege is required in order to ensure that users are not flooded with badly described and inappropriate SSRs.
It is recommended that a number of SPR SSR CONTROLLER privileged users are set up to reflect the LIFESPAN user hierarchy, for example one for each project using LIFESPAN.
Each user should be made responsible for checking any SSRs generated for their project and should only submit an SSR once they are satisfied that it correctly and adequately reports the status of an area of software.
Users defined to be affected by an SSR are:
the LIFESPAN users who submitted referenced SPRs
the managers of all modules referenced by the SSR
the managers of the packages containing referenced modules.
These users are notified of the SSR via the Mail System.
If an SSR responds to an SPR which originated from an external client, then it is the responsibility of the user who submitted the SPR in LIFESPAN to arrange for a copy of the SSR to be sent to the client.
If there is any further documentation referenced by the SSR then this must also be sent.
Endorse the SSR
It is important that users of LIFESPAN packages are kept as up to date as possible with the current status of those packages.
In order to propagate this knowledge, the managers of all packages containing a module referenced by an SSR are asked to consider whether:
the SSR applies to the package and whether it would be understandable to users of the package.
If so, then the package is added to the SSR.
the SSR applies, but the wording would be too obscure for users, A new SSR should be sent, paraphrasing the original to make it clear how it applies to the content of the package.
the SSR does not apply.
No action is required.
This process, referred to as Endorsement , is repeated up the tree of packages until it is decided that the SSR no longer applies.
This ensures that all affected users are notified of problems, and can take the necessary steps to correct any problems with individual modules.
When asked to endorse an SSR, managers are informed whether the package is intended for eventual issue as a product, so that they know if an SSR is liable to be sent to clients or if it is purely internal.
To endorse an SSR, option 4.4.0 should be used.
This option presents the user with the list of packages for which he is required to endorse the SSR.
For each package, the user can either ACCEPT or REJECT the SSR, however only one type of operation can be performed at a time.
When accepting the SSR, the user must specify a range of modules for which the SSR is relevant, after which the package and specified range of versions are added to the list of modules to which the SSR refers.
The SSR is then distributed to the managers of packages which contain the endorsed package (unless the package is already on the SSR or the manager has previously been asked to endorse the SSR for the package).
This process is repeated until the SSR has been distributed to the managers of all packages which are affected by it and each manager has either accepted or rejected it.
If a manager rejects an SSR for a particular package, no further distribution takes place for that package and SSR.
The speed at which SSRs are distributed within LIFESPAN depends entirely on the speed of responses to endorsement requests.
Relate Modules and SPRs to an SSR
Package modules are added to SSRs by LIFESPAN as a result of endorsement.
Modules of any type may also be added to an SSR, after it has been submitted, by its submitter.
The range of module versions to which an SSR refers may also be extended in this way.
This will normally be due to a later version of a module being created which contains the same problem as one previously reported, or the realisation that a module which is a variation of another contains the same problem as its variant.
This is achieved by using option 4.5.1, Relate SSR to Modules.
Option 4.5.1 may only be used by the submitter of the SSR.
Version ranges can only be extended and modules may not be deleted from the displayed list.
When extending the range of versions, symbols referring to the ‘First’, ‘Last’ and ‘next Approved’versions of modules can be used to simplify matters.
These symbols are described in more detail in the ‘Reference Guide to LIFESPAN’.
An SPR may report a fault which has previously been reported and replied to via an SSR.
Instead of creating another SSR to reply to the new SPR, it is possible in this case to add the SPR to the SSR which already responds to the problem.
The submitter of the SSR can do this using option 4.5.2, Relate SSR to SPRs.
Modules and SPRs may not be deleted from an SSR once the SSR has been submitted.
If a mistake has been made then new SPRs and SSRs should be generated as necessary to correctly define the status of the affected modules.
For example, if an SSR incorrectly refers to an SPR and closes it, then it will be necessary to create a new SPR based on the old one and also a new SSR which correctly responds to that SPR.
If an SSR incorrectly refers to a module then a new SSR should be generated.
This should be based on the first SSR but should reference the correct module, or all the modules on the SSR.
Also, an SSR based on the first SSR should be generated without reference to the offending module and stating that it supersedes the first.
It should be noted that whenever a new module or SPR is added to an SSR, using options 4.5.1 and 4.5.2, further distribution of the SSR takes place via the new relationship and further endorsements are required.
Listing and Viewing SPRs and SSRs
A number of listing and viewing facilities are available for both SPRs and SSRs, using options under 3.6.0 (Prepare SPR Listings), 3.7.0 (View SPRs), 4.6.0 (Prepare SSR Listings) and 4.7.0 (View SSRs).
However, to prevent unnecessary overloading of the LIFESPAN system, with the subsequent degradation in response time, the listing options may only be performed by users with SPR SSR OPERATIONS privilege.
Common Problems with SPRs and SSRs
A common situation which creates problems is the use of a single report to identify a large number of failures, or to mix a number of failures in with a variety of suggestions.
This effectively nullifies the use of the ‘upwards reporting’ of SPRs and SSRs, since it makes it difficult for the recipients to see the extent of the problem.
Users are strongly recommended to report only one failure or suggestion on a single SPR, however, if they do not, the solution is to create a number of new SPRs to handle the topics individually.
A single SSR can then be used to close off the original SPR when the originator is satisfied that all useful information has been extracted and transferred onto the new SPRs.
Occasionally, responsibility within the SPR system is transferred from user to user without any action being taken.
LIFESPAN itself cannot identify the reasons why this should be so, since under some circumstances the identification of faults can be quite difficult.
If this situation occurs for the majority of SPRs, it is important to examine the organisation of the various teams and groups of users.
This problem is often associated with a lack of clear guidance as to who is responsible for a particular software area, rather than any mischievous intent on behalf of the recipients.
PRODUCTS
Introduction
A LIFESPAN package is a set of modules which are controlled as a single unit throughout their lifetime.
There are, however, two uses to which a package can be put:
it can be used in-house for development and testing.
at some future date it can be released internally or to an external client.
In this case, the package has an additional reference attached to it and the whole article is known as a Product.
When the package is released as a product in this way to a Client,it is known as an Issue of the software.
A package is always created in the same way by reserving its name using option 1.1.1.
However, if it is known that in the future the package will be issued as a product, this must be indicated to LIFESPAN at the time of creation.
A package cannot be issued as a finished product if this is not done, and it cannot be converted into a product at a later stage.
The indication that the package will be issued as a product serves a useful function for Quality Assurance, as more stringent quality checks can be performed if it is known that the package is intended for issue.
Due to the importance and responsibility associated with the definition and use of products, all of the Product options require MARKETING privilege.
Products
Usually the product package is created for use when software development is completed and the software is ready for issue.
When the product package is ready, a Product is created.
A product is not a module and does not contain the package.
It acts merely as an easily identified and meaningful reference to the version of the product package which is to be issued.
Option 5.1.1 is used to create a product.
The user merely supplies a title for the product and LIFESPAN allocates a product identifier to it.
The user must then update the product using option 5.1.2 in order to associate it with the name and issue number of the product package for which it is to provide a reference.
It is recommended that this is an approved version, although a development version may be used if necessary.
Finally, the product must be registered, using option 5.1.3.
This means that the product details will be stored permanently and cannot be altered afterwards.
Clients
The client who receives the product can be any external source buying the software, or an in-house party.
The client is made known to LIFESPAN by using option 5.2.1, where the user supplies a title for it and LIFESPAN allocates a client identifier to it.
The details must then be updated to provide further information such as the clients' name and address and the name of a general contact within the organisation.
Issues
As a product can be released many times to different clients, an Issue is created on each release of the product to a specific client.
This acts as a cross-reference delineating the relationship between the product and the client.
It also provides a record of the order, despatch and maintenance contract dates of the issued product.
The name of a person within the client organisation may be supplied to act as a specific contact for any queries regarding the issue of the product.
This creates a personal link between those issuing and those receiving the product, and makes it clear to those issuing the product who is responsible for it once it has been received by the client.
Unlike products and clients, the user creates an unique identifier for an issue.
The issue identifier acts as a further reference to the product and must be used by the client in references to Software Performance Reports and marketing support.
Option 5.3.1 is used to create the issue details.
The details of the product and client with which it is associated are entered, together with the order, despatch and maintenance contract dates.
The issue can be created after the actual product has been despatched.
Alternatively, the issue can be updated prior to despatch, using option 5.3.2, in order to associate a different product or client with the issue.
However, once the issue has been despatched, only the contact name and maintenance contract dates can be updated.
A number of viewing options are available under option 5.4.0.
Figure 7.1 summarises the life cycle of Products, Clients and Issues.
OFFLINE
Introduction
LIFESPAN allows modules which are no longer required to be maintained in the on-line storage areas to be archived across a number of offline storage media types via the Offline System,and provides automatic control of the offlining and recovery of modules.
The necessity to offline may arise when the storage disks are becoming full, or if a certain package/package structure does not need to be stored online because it has been superseded or is no longer part of a live project.
The effect of items being stored offline is that a user will be informed by LIFESPAN of a delay in certain transactions where retrieval from offline to online storage is required.
The Offline System utilises specific Media Units (device drives) which must be accessible from the LIFESPAN host node and available for use by Offline.
For each Media Unit,Media Items must be declared for exclusive use by Offline and these items must be initialised in accordance with the instructions defined in Section 8.2.3 below.
For example, it may be decided that a TK50 Tape will be used as an Offline Media Type , the Media Unit for this type of device is MUA0:, and that Media Items LS0001, LS0002, LS0003, and LS0004 are available tapes for Offline to use.
The relationships between which modules are stored on which media items and which media units can be used is maintained within the Offline System.
The Offline Cycle encompasses three main stages:
Stage 1: Offline Stores — During this stage the Offline System ensures that two good copies (Primary and Secondary ) are taken before a module is deleted from online storage.
It also ensures that only one instance (primary and secondary) of an offlined module exists ie. if an offlined module is returned to online storage, the offline instance is maintained, so that when the module is subsequently offlined again, Offline will simply delete it from online storage knowing that the offline copies still exist.
Stage 2: Offline Restores — Restores are initiated from a user transaction whereby access to offlined modules is required eg. read module from LIFESPAN.
During this stage Offline will request the appropriate media item to be mounted and it will copy the modules from the media item into the original LIFESPAN storage directory, from where they will be copied into the user's directory.
The modules remain online until such time that they are requested to be offlined again, at which time they are simply deleted from online storage.
Stage 3: Offline Verification — During the verification stage, Offline reads modules from the offline media items and performs a Cyclic Redundancy Check to ensure that the offline copies have not suffered any loss of integrity.
Most offline facilities are available only to a user with OFFLINE MANAGER privilege.
Two people, who have a particular association with the offline system, carry out the majority of the offline procedures.
They are:
Offline Manager This user must be allocated OFFLINE MANAGER privilege and is responsible for the administration of the offline system as described in this section.
Offline Operator This user does not require any knowledge of LIFESPAN and is responsible for the daily running of the system.
The procedures involved are described in the manual ‘Operations Guide to LIFESPAN’.
Offline requests are initiated by the Offline Manager , who decides when offline should start running, the duration of the run, and the type of operation to be performed: a Primary copy, a Secondary copy, a Restore, a Verification, or any combination of these provided sufficient units are available.
At the specified time, Offline will display the offline workload at an Operator Terminal , and the Offline Operator 's task is to mount the appropriate media items requested by Offline and dismount them when Offline has completed its specified workload.
The Operator Terminal must have a fixed terminal address or Decserver port so that Offline can direct its messages to a known and expected destination.
Instructions for setting up the Operator Terminal are given in Section 8.4 below.
At the time that Offline initiates the offline workload, this Operator Terminal must not be in use by any other process.
Initialising the Offline System
Media Types
The first step in using the offline system is to tell LIFESPAN about the kinds of media to be used.
Option 9.5.0, Update Media Types, should be used to enter this information.
Each type of media is allocated a Media Type Identifier (eg. 1 = TK50, 2 = 1600 bpi magtape), and some data about its performance, eg. total storage capacity.
It is important that the media types be specified first, as the type information is required during the specification of Units and Media Items.
Available Units
Next, it is necessary to specify the physical units which are available to the offline system.
Option 9.4.0, Update Availability of Units allows the user to specify this information.
For each unique ‘Unit Identifier’, a descriptive name (eg. TK50 Tape Drive) and a physical name (eg. MUA0:) for the unit must be specified.
At the same time, an association must be made between the unit and a previously specified media type.
Obviously the media type must be capable of being supported by the unit.
The types of offline operation to be performed by the unit must be specified.
These are:
P — The unit will perform Primary copy stores
S — The unit will perform Secondary copy stores
R — The unit will perform Restores
V — The unit will perform offline verifications.
Any number and combination of these types may be specified and they may be updated for each offline run.
If none are specified, it indicates that the unit is not currently available.
Finally, an estimate of the performance of the drive and whether it is a serial or random access device is required.
Available Media Items
It is now necessary to introduce instances of the media types to LIFESPAN.
These are referred to as Media Items and include magnetic tapes, disks, etc.
The offline system will not initialise these items; the Offline Manager must prepare the items for use by LIFESPAN.
Each item must be initialised with a label consisting of a concatenation of:
the two character value, specified for the LIFEID keyword in the Configuration File of the LIFESPAN system (eg. LT for the LSTRAIN process, LL for the LSLIVE process) and,
a unique 4-digit number, in the range 0001 to 1000 (leading zeros are significant)
Thus, for instance, if media item 0323 is a TK50 cartridge for use by LSLIVE, it must be initialised with the label LL0323.
This is done using the VMS command INITIALIZE thus:
INITIALIZE <device-name> LL0323
Additionally, for all random access media items, a directory must be created on the media item which is the same as the name of the LIFESPAN process directory.
This must be created after initialisation but before the item is used in an offline run.
Option 9.3.0, Update Availability of Media, enables the user to introduce media items into LIFESPAN.
The media identifiers displayed by this option correspond to the 4-digit numbers used in the initialisation of the item label, however it is not essential to have initialised the item first.
The option requires information on the media type (as specified using option 9.5.0), the type of copy it is to be used for,(Primary or Secondary), and the state of the item.
The following media item states are used by LIFESPAN:
1 — Not yet initialised The media item has been reserved but is not ready for use.
2 — Ready The media item contains no offlined files and has been initialised, ready for use.
3 — In use The media item is in use, and contains offlined files.
4 — Full There is no more space on the media item.
5 — Available for inspection The Offline system has detected that the media item may be faulty.
It should be physically checked.
6 — Medium failed The system has detected an error on the media item.
It should be physically checked.
7 — Empty The files on the media item are no longer required by LIFESPAN.
The media item can be used again, but only if the Offline Manager re-initialises it and allocates it a new, unique identifier in VMS, then re-introduces it to the offline system.
The user can only alter the state as follows, from:
State 1 to state 2 — usually when introducing a new media item into LIFESPAN.
State 5 to state 3 — usually after a faulty item has been physically checked
State 5 to state 6 — usually after a faulty item has been physically checked
State 6 to state 3 — usually after a faulty item has been physically checked
State 4 to state 3 — usually if the approximate number of blocks for the item was estimated too low, resulting in Offline believing the item is full even though there is physically more space available
State 3 to state 4 — usually if the approximate number of blocks for the item was estimated too high, resulting in Offline believing there is more space available even though it is physically full
State 5 to state 4 — usually after the physical end of tape mark for a serial access device has been reached (Note: In this situation Offline will move the item to state 5 — Available for Inspection)
State 6 to state 4 — usually after a faulty item has been checked (eg. cleaned) and found to be good, but it is decided that no further data should be added to the item
LIFESPAN carries out the remaining state transitions automatically.
The concepts and structure of offline media items are described in the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
A diagrammatic representation of the life cycle of media items is shown in figure 8.1.
Preparation for an Offline Run
To check that an offline run can be performed, submit a package to be offlined using option 9.1.0, Request Package to be Offlined.
This will generate an ‘Offline Workload’, which can be displayed using option 9.8.0.
This option indicates how many modules are to be stored and/or restored, together with an estimate of the number of 512-byte disk blocks occupied by the modules.
For modules which have been requested for offline but which have not yet been copied onto a media item, the estimate will be zero.
As soon as a primary or secondary copy has been made, the estimate will be updated.
Setting up the Offline Terminal
A specific terminal must be allocated for use by Offline at the times when an offline run is to be conducted, as defined by the Offline Manager.
If the terminal is connected directly to the host node then the terminal address may be obtained by logging into VMS at the terminal and issuing the ‘SHOW TERMINAL’ command.
If the terminal is connected via a Decserver, then a physical port must be allocated by following the procedure below.
Find the server name and port number by issuing the commands ‘SHOW SERVER’ and ‘SHOW PORT’at the terminal ‘Local’prompt.
These values should be entered in the sequence below at the references to ‘server’ and ‘port’.
As a VMS user with CMKRNL privilege, find a LAT port number that is unused by listing the current used ports ie. 
The LAT port number selected will be referred to as ‘LTAnnnn’ in the sequence below.
Now issue the following commands 
(This last input will not be echoed to the screen)
Log into the server and enter the following commands:
The port is now set up.
It can be checked by issuing the following commands from a different terminal and watching the ‘Operator terminal’.
The directory output will be displayed on the ‘Operator Terminal’.
Performing an Offline Run
For Offline ‘stores’, two methods can be used to generate an offline workload: either by specifying packages to be offlined using option 9.1.0, or by using the Storeman facility, whereby a range of modules which have not been accessed in a given time period can be offlined.
The latter method is described in more detail in the Operations Guide To LIFESPAN.
In either case, the modules to be offlined are copied into the Offline work directory, which is defined in the configuration file.
It must be remembered, therefore, that for the duration of the offline cycle, sufficient disk space must be available to accommodate the space required in the Offline work directory — only when validated primary and secondary copies have been generated on the offline media will Offline delete modules from the work directory and the storage directories.
If Offline is being conducted because a disk is nearly full, therefore, the work directory may need to be on a different disk, where more space is available.
Option 9.2.0, Update Offline Parameters, is used to schedule the next offline run and details of the parameters required are described below.
The Operator Terminal must be specified, using the terminal name (eg. TTA6:) if connected directly to the host node or the LAT port address (eg. LTAnnnn), if connected via a Decserver, as described above.
This is used to display instructions to the Offline Operator about which media items to load on the available units during this particular run.
The start time and the duration of the offline run must also be specified using option 9.2.0.
It is the users responsibility to ensure that at the time of the next offline run, the specified terminal is connected and not logged in — the offline system will not allocate a terminal to itself if it is already allocated to another VAX/VMS process.
The scheduling of subsequent offline runs can be automated using option 9.2.0, which allows the user to specify an interval between offline runs.
Once an offline run has completed, the offline system will automatically update the time of the next offline run by adding the interval to the current start time.
During the offline run, the offline system will read files in situ and carry out a Cyclic Redundancy Check in order to verify these files.
Option 9.2.0 allows the user to specify the ‘Verification latency’— the time range, since the last verification, within which all offlined material will be verified.
For example, items may be verified within 90 days of the last check, but not more frequently than within 30 days.
For more detailed information on Verification Latency, please consult the manual ‘Creating and Controlling Modules and Packages with LIFESPAN’.
The final two fields in option 9.2.0 refer to the scheduling of Primary and Secondary copying.
The offline system will always take two copies of requested material, seeking one media item available for Primary copies and another available for Secondary copies.
(They may be the same type of media, but will always be different media items).
The parameter ‘Split-type working’ allows the user to specify that Primary and Secondary copies must be stored on different media types.
In order to use Split-type working, there must of course be two different types of media available.
The parameter ‘Simultaneous media copies’ allows the user to specify that Primary and Secondary copies may not be mounted simultaneously.
The user may choose to do this for safety reasons, since if both copies are ruined simultaneously by a fire in the computer room, no amount of intelligent software can replace the material.
If the user decides to allow simultaneous copies, there must of course be at least two available units.
If simultaneous copying is disabled, then two offline runs must be performed to successfully complete the offlining of any material.
The first to offline the Primary copy and the second to offline the Secondary copy.
At the specified start time of the offline run, the operator terminal will be allocated by the offline system and the Offline Operator will be instructed to mount and dismount the required media items on the available units.
For more information on this process, see the manual ‘Operations Guide to LIFESPAN’.
At the completion of the offline run, a mail message will be sent to the Offline Manager.
It should be remembered that the offline sequence does not end when the media item is dismounted; after this time deletion of modules from online storage may take place, but more importantly, the LIFESPAN database files will be updated to reflect the Offline transactions.
It is important, therefore, to inspect the resultant mail message.
Offline Performance
The offline workload is broken down by Offline into 15 minute portions ie. it will estimate what can be achieved in 15 minutes and then carry out that activity before assessing whether time permits any further work to be achieved.
In determining how much can be achieved in 15 minutes, consideration is taken of the time to store/restore and the time to verify, and equal durations of seven and a half minutes are allocated to these phases.
More importantly, the Time Per block parameter specified in option 9.4.0 is used to determine how many blocks can be stored in the specified time i.e. 
The Time Per Block parameter is critical therefore in terms of performance and duration time.
If it is set too low, then Offline will accomplish its workload using less ‘portions’ ie. it will calculate how many blocks can be stored and then continue until it has achieved that workload regardless of the 15 minute factor.
The consequence of this is that the duration time will not be checked until the calculated number of blocks have been stored and verified.
This may be convenient for overnight/weekend operation if it is accepted that the duration time is not critical.
If it set too high, then performance will be poor since it will be completing its workload using a higher number of smaller portions than necessary.
For serial access media items, it must be remembered that offline files are stored in ANSII format and that inter-block gaps may be considerable, and therefore, the capacity of a media item will be far less than that expected from using VMS Backup, for example.
This is particularly true if a high number of small files are being offlined.
When setting the capacity figure for a media type in option 9.5.0, consideration should be given to this fact.
If it is set too high then the end of tape may be physically reached and Offline will believe there is still space available.
If it is set too low, then the opposite occurs and Offline will believe the tape is full when there may be more space available.
In either case, however, the status of a media item may be changed using option 9.3.0 to indicate that it is either ‘full’ or ‘in use’respectively.
(Note: in the first situation, Offline will first set the state to ‘Available for inspection’ if the end of tape is reached).
Prematurely Stopping an Offline Run
The duration of the offline run set in option 9.2.0 may be updated to stop offline, if, for example, the unit is urgently required for use by another process.
In this situation, the duration time should be reduced to a few minutes greater than the current elapsed time.
For example, if the offline cycle start time was 29-FEB-1999 18:00 and the duration was 08:00, and it was decided at 20:25 that offline must be stopped, then the offline duration time should be updated to 02:30.
Checking the Integrity of Offlined Material
Option 9.6.0 enables the user to initiate internal integrity checks on the files stored by the offline system.
Checks are carried out for retention of information relating to files which are to be offlined, those which have been offlined and those which are to be restored from the offline media.
It will identify:
if requests to store/restore files have not been serviced for a period
if offlined files are not being verified on a regular basis.
It produces a report of its findings via the LIFESPAN Mail System.
Common Start-up Problems
The commonest start-up problem is not giving the offline system the media items to make the copies.
If material is to be offlined then there must be two separate media items available (in states 2 or 3), one for the Primary copy and one for the Secondary copy.
Another common problem is forgetting to switch between Primary and Secondary runs when simultaneous copying is disabled.
Finally, some sites may experience problems if they are restricting the use of the available units to specific operation types — it is no good having a TK50 available for a Primary copy if the only unit available is either not a TK50 drive, or is set to Secondary copies only!
PROCESS MODELLING
Introduction
To provide customisation of object lifecycles, LIFESPAN supports process modelling.
Process modelling allows users to configure lifecycles for objects by defining a number of states, transitions between these states, and actions upon entry of an object into a state.
The current version within LIFESPAN supports process modelling of modules.
Modules can hence be defined to follow different process models and thus behave in different ways.
It should be noted that the lifecycle of a module subscribing to a defined process model is in parallel with not instead of the normal DC controlled lifecycle.
Entry of modules and formal approval must still be performed in the normal way via the DC system.
In its simplest form, LIFESPAN's process modelling may be used to log all entries of subscribing modules into LIFESPAN via mail or a log file.
A more complex example might be the six state assessment sequence process model in figure 9.1 below.
A new version of a module following this process model upon initial entry into LIFESPAN enters the ‘compiles’ state and a mail message and log are generated immediately.
The module then moves into a ‘test’ state once the PROGRAMMER is happy with the executable.
Again mail is generated and an entry is made in the log.
Having completed testing the module is passed for review.
At this point mail may be sent to a number of users requesting they assess the module.
A spokesperson will then either transition the module into a conceptually approved state or hold it back for further work before approval.
Process Modelling Nomenclature
Before describing LIFESPAN's process modelling in detail, it is important that the nomenclature is clearly understood.
Firstly objects.
These are the items which move through a lifecycle ie. are acted upon by a process model.
Any object is defined in a hierarchical manner with increasing granularity using the terms class ,type ,subtype and instance .
eg. an object Ford Escort could be described as of class:car, type:Ford, subtype:escort, and instance F123CAR.
In LIFESPAN objects fall into one of six classes; DC, module, SPR, SSR, user, and mail.
Process modelling within LIFESPAN is currently only provided for the object class of ‘module’.
Similarly there are a finite number of types of module; source, foreign, package, and pmodel.
A modules subtype however, is user definable.
This hierarchical description of an object can be represented by a class structure diagram, as shown below.
LIFESPAN's Inherent Process Models Compared With User Definable Process Models
Certain fixed process models are inherent within LIFESPAN and operate on object classes.
For example, there is a lifecycle for DCs as defined in section 5 of this guide.
Process modelling allows the LIFESPAN user to define lifecycles in parallel, not instead of these.
An object's class therefore defines the inherent LIFESPAN process model which an object will follow, whereas the user defined process model (which it is to follow in parallel) may be defined for its type and subtype.
Whilst an object within LIFESPAN will always be of a specific class and therefore will follow the associated process model, it is not mandatory for it to be specified to be of a certain subtype.
Roles
The notion of project is also introduced for process modelling to allow the allocation of roles to users within a project.
Tasks and mail may then be sent to users with a specific role or roles rather than to an explicitly stated LIFESPAN username.
Roles are allocated to users by a user possessing the ‘Project Administrator’ privilege.
This is achieved in a similar fashion to the assignment of LIFESPAN privileges using option 7.2.2 — Update User.
Roles however, cannot be passed down the user tree like privileges since they are designed to allow users to be identified by the set of roles that they possess.
This for example, allows the user to send mail to a user with role ‘SENIOR DESIGNER’ instead of specifying the name explicitly within the model.
The process model searches the tree of users within LIFESPAN for a match with the roles specified in the model.
A match is found when a user has all of the roles specified within the model or a superset of them.
The direction and scope of the search may be defined within the model using the direction attribute of roles.
eg. (SELF, UP, DOWN) would cause the model to first look at the user who caused the last transition for a possible match, followed by a search up the user tree and then down the tree.
The direction attribute is not mandatory, defaulting to (UP, DOWN, SELF), and if no match is found then the task or mail is sent to the project administrator.
The LIFESPAN system allows up to 32 roles to be specified.
These are defined in a file, ROLES.DAT, within the LIFESPAN process directory.
Each line of the file is assumed to be a role name.
Up to 32 lines will be read and on each line only the first 20 characters are significant.
Characters placed after position 20 or after line 32 will be ignored.
Characters in these positions can be used as comments and place markers.
The file should be maintained by the LIFESPAN manager and is edited using a standard text editor.
This file is only read when LIFESPAN starts up and so changes that are made while LIFESPAN is running will not take effect until LIFESPAN is stopped and restarted.
The first 20 characters of lines 1 to 32 in ROLES.DAT will be used to provide the possible roles available to users and are visible via option 7.2.2 — Update User and option 7.2.3 — View One User.
It should be noted that extreme care should be taken when editing the roles file, since line placement is significant ie. to delete a role, leave a blank line, do not delete the line.
If the line were deleted then subsequent roles would all adopt the wrong names.
Similarly when adding new roles, they should be added to the end of the list or to an empty slot.
Quality Assessment Object (QAO)
Logging of information related to a module's development within LIFESPAN is retained within Quality Assessment Objects which hold, for a given module name (ie. type and subtype), the state transitions that any instances have undergone and any other textual QAO log entry defined by the associated process model.
A QAO log is also created for any installed Pmodel module and holds records of any installations and deinstallations occurring under the module name.
This enables the history of a process model to be tracked easily along with the exact period when a particular model was active.
Any user may request a QAO listing at any time using the user image option 7.3.5 — Format QAO Log.
Defining A Process Model
A process model is defined textually via a pmodel module using the Process Model Definition Language (PMDL).
This defines the class, type and subtype of the object for which it applies, a series of states in which the object may exist and a series of actions.
Actions are triggered upon entry of an object into a state.
Valid actions are:
Mail Sends formatted mail to a LIFESPAN user
Transition Performs an immediate state transition
Task Sends a formatted mail message to a LIFESPAN user and requires a response.
The response results in a state transition.
Log Adds an entry in the Quality Assessment Object (QAO) for the module.
This log file exists for each module name and may be formatted to a file in the users directory.
A pmodel module like any other type of LIFESPAN module must contain a LIFESPAN header, albeit commented out using the PMDL comment mark, %.
The rest must conform to the Process Model Definition Language(PMDL).
The PMDL file structure consists of the following main parts:
model identification
state definitions
action definitions
These are now described in turn:
The model identification block relates the model to a particular class, type and subtype.
The model is only used by objects which match this class, type and subtype.
Individual modules are ordered to follow a specific process model by defining them to be of a particular subtype.
This is achieved via the keyword, MODULE-SUB-TYPE-IS in the module header.
The class is type: module.
The type is one of:{package, foreign, pmodel, or source}
The subtype name can be up to 28 characters (alphanumeric).
The state definitions define meaningful names for each state value used by the model.
A state definition consists of a name of up to 64 characters and a number between 0 and 100.
Only one state name is allowed per number, but several state numbers can have the same name.
It is only necessary to define state names for those states which are in use by the model (ie. used within action definitions).
States must also be defined if the model is replacing another model for the same class, type and subtype to define all those states defined by the old model.
Since some modules maybe in those states and would otherwise be left in limbo.
A start state, state 0, must always be included, into which the first version of a module following the model will enter.
The action definition block within the model allows actions to be allocated to state values.
These actions are then triggered when a module enters that state.
Several actions can be allocated to a single state.
However, since a task causes a state transition there can only be one task allocated to a state.
Similarly, only one transition action may be specified and it is not possible to have both a task and transition associated with the same state.
States need not have any action allocated to them since these states may be either superfluous or valid end states.
Up to 75 actions can be defined by any single model.
The four types of action mentioned above (mail, transition, task, log) are now described in more detail.
Mail:A mail action consists of series of text lines which form the mail message and can be directed to a user.
The recipient can be determined in several ways:
through possession of a set of roles
through the user's LIFESPAN username
by being the current user or the manager of the module (the current user being the user who caused the module instance to enter the state ie. caused the last state transition)
The content of the mail message is constructed by providing one or more strings which will be added together and packed to form the final mail text.
In addition to the basic text within each string, there is a facility to allow parameters to be evaluated when the mail message is being constructed.
This allows information to be specified which varies depending on the context of the message.
The following parameters can be specified within a mail message:
$obj_id the class/type/subtype/name and issue number
$obj_state the textual state name (as defined within the model)
$obj_user the Manager of the current module
$ev_user the LIFESPAN user causing the last state transition
Tasks:A task consists of a message describing the task and a set of up to 10 responses that can be returned when the task completes.
The task is directed to a user using the same options as a mail message.
The text of the task is specified like that of the mail message and allows the same parameter substitutions.
The responses from the task consist of a textual name for the response and a state which selecting that response would cause.
The response text can be up to 30 characters long.
Transition:
A transition consists of a new state which the module version is set to.
The transition action causes an immediate transition to occur.
The transition action simply defines the new state.
Log:Consists of a single line text message of up to 48 characters which is entered into the QAO log for the current module when the state is entered.
The QAO log information is held on a per module name basis (ie. one QAO log file per module name) in a formatted file, *.
QAO, in the charge code directory associated with the module name.
It is only created if a QAO log entry is actioned by a process model for that module.
Thereafter, it is added to each time a QAO log entry is actioned.
The file should not be edited but may be deleted or renamed as part of your database management.
If LIFESPAN does not find the QAO log file it will create another when a QAO log is actioned for the module.
In addition to logging defined in this manner it is possible to enable or disable automatic logging of many of the process modelling activities.
This is achieved via the SET-QAO-LOG keyword in the process model definition.
If set to ALL then the following activities are automatically recorded in the QAO log.
all module entries
all state transitions
all task actions
all state inheritance
all mail actions
all QAO logs
In each case a date/time stamp, module version and user name are included in the log.
The user name corresponds to the user performing the module entry, QAO log or state transition, or the user receiving the task or mail respectively.
If SET-QAO-LOG is set to NONE then no such logging is made to the QAO log.
Instead only those logs defined specifically via the LOG action will be made.
The PMDL is described in more detail and formally in the next paragraph.
PMDL Syntax Definition
Backus Naur Form (BNF) of PMDL
The following conventions apply to the PMDL syntax description:
lower case words denote syntactic categories
upper case words denote keywords
a vertical bar i.e. |, denotes alternatives
square brackets denote optional items
angle brackets are used for nesting within syntax rules
an asterisk denotes repetition of the preceeding construct 
An example PMDL is provided in figure 9.3.
Installing A Process Model
Having defined your process model using the process model definition language, the pmodel module must be entered into LIFESPAN and installed before it will take effect.
Entry is achieved in the same way as any other type of module via a package and an active DC.
The pmodel module must then be installed using option 7.3.1 — Install/Deinstall Process Models (you must have process model operations privilege for this).
Successful installation will be confirmed via the LIFESPAN mail system.
Once installed the process model will begin to act upon any module instances entered with the corresponding type and subtype.
It should be noted that only modules of the correct type and subtype entered after the models installation will be effected by the model, not those entered prior to its installation.
In addition modules entered via LIFESPAN ABLE will not be effected by the model.
If you wish to update a process model then you may install a new version of the PMDL for that model again using option 7.3.1 — Install/Deinstall Process Models.
You must however, be the user who installed the current version or have Manager privilege.
In addition, the new version of the model must include all of the states which were included in the old version (ie. states cannot be deleted), otherwise module instances would be left in limbo.
If you wish to inhibit the action of a process model then you must deinstall the model again using option 7.3.1 — Install/Deinstall Process Models.
Once again however, you must be either the user who installed the current version or have Manager privilege.
Once a process model is deinstalled only outstanding actions will be performed including tasks.
Once these have been serviced no further actions will result.
So for an example, having deinstalled a process model, an outstanding task may be replied to and the resulting transition will be performed, but no new actions will result from the newly entered state.
State Inheritance
The PMDL provides support for the concept of inheritance via the keyword INHERIT-UPTO-STATE.
This allows you to specify an inheritance boundary below which newly entered unapproved modules will inherit the state of the current latest version of the module and above which inheritance will not occur and the new version will inherit the inheritance boundary indicated by the INHERIT-UPTO-STATE keyword.
For example, if the inheritance boundary is set to 10 and the latest version of the module is in state 5, then a new unapproved version of the module will inherit state and hence enter state 5.
If on the other hand the latest version of the module had been in state 15 (above the state inheritance boundary) then a new unapproved version of the module would not inherit state and would enter state 10 (the inheritance boundary).
Approved modules do not behave in this manner with respect to inheritance.
Instead, upon formal approval of a module within LIFESPAN, the newly created approved module will automatically inherit the state of the previous unapproved version.
This occurs irrespective of the setting of the inheritance boundary.
Purging Tasks
Via the PMDL it is possible to limit the effect of a process model to the latest version of a module only of the defined type and subtype or to allow all versions to be effected independently.
This is achieved via the setting of the PURGE-TASKS keyword in the PMDL.
If PURGE-TASKS is set to ALL then only the latest version of a module will continue to follow its defined process model.
Upon entry of a new version ALL tasks for the previous version will be deleted.
If PURGE-TASKS is set to NONE then all versions will follow the process model independently.
eg. Entry of a module into a state resulting in a task mail message will be repeated for entry of a new version of the module inheriting that state.
Care should be taken when setting this keyword if a multitude of mail and task mail is to be avoided.
Creating, Entering and Installing A Process Model — A Check List
This paragraph is designed to provide the user with a chronological list of the operations required to affect a process model within LIFESPAN.
sketch out on paper the process model which you want to use within LIFESPAN.
Keep it simple, you can always add to it latter.
decide on the module type and subtype which it is to effect.
ensure that you have process model operations privilege (see your LIFESPAN manager if you do not)
reserve the module name for the pmodel module which you are going to use to define it.
capture your model using the process model definition language and add a LIFESPAN header for the pmodel that you have chosen and whose module name you reserved earlier.
ensure that the pmodel scans both from a LIFESPAN header point of view and from a PMDL syntax point of view.
PMDL.EXE is provided to check the syntax of the PMDL.
This should reside in the LIFESPAN installation directory and may therefore be run by typing the following.
ensure that any roles you have used in your process model definition have been declared in the ROLES.DAT file in your process directory (ie. where the.
fil files reside), are visible from the second page of option 7.2.2 — View One User, and have been assigned to the relevant LIFESPAN users.
Amendments to the ROLES.DAT file should only be performed by the LIFESPAN Manager and roles may only be assigned by users with project administrator privilege using option 7.2.2 — Update User.
You should see your LIFESPAN Manager if you require help on any of these matters.
enter the pmodel module just as you would any other module (ie. via a package and an active DC)
install the model using option 7.3.1 — Install/Deinstall Process Models and confirm that this is successful via mail.
Once the model has been installed any modules of the defined type and subtype will follow the model.
Process Model Options
Six user image options exist to service LIFESPAN's process modelling functionality.
These are described briefly below.
A more detailed explanation of their functionality may be found in the LIFESPAN Reference Guide.
Option 7.3.0 — Process Modelling Operations provides an index page to the process model options available via the user image.
Option 7.3.1 — Install/Deinstall Process Models enables users with process model operations privilege to install and deinstall process models.
Option 7.3.2 — View Process Models enables users to view the state of up to 10 process models which have been installed within LIFESPAN.
Option 7.3.3 — View Individual Task Mail allows users to view any outstanding task mail available for them and respond appropriately or forward it to another user who may be more able to respond.
Option 7.3.4 — View One Process Model allows users to view the details of an installed process model including the pmodel module name and version, the associated user and the date it was installed.
Option 7.3.5 — Format QAO Log allows any user to format the QAO log for a module into a user specified file name in their directory.
LIFESPAN META PI ROUTINES
Introduction
The LIFESPAN Meta PI routines are so called because they provide a VMS command interface to LIFESPAN in a similar way to the Procedural Interface (PI) routines, but unlike PI they are supplied as executables for performing the following specific functions: Update Baseline, Directory Integrity Check, and Type Module.
They are stand-alone routines in that they have no dependencies on each other or to any standard PI function.
The LIFESPAN process on which the routines operate must be running and the LIFESPAN logicals which allow the database to be accessed must be invoked i.e. @SYS$LIFESPAN: <process name>, where <process name> is the name of the LIFESPAN process to be accessed.
The Meta PI routines are available to any LIFESPAN user, provided that user is not already logged into LIFESPAN either interactively or via PI or PMR.
No LIFESPAN privileges or module access rules are violated by the use of these routines.
For example, if a user does not have DC Operations privilege then it will not be possible to generate a Design Change, or if a module is password protected then access to that module will not be automatically given.
The Update Baseline and Directory Integrity Check facilities may be run from a networked remote node provided the executables are copied to the remote LIFESPAN installation directory.
However, Type Module is only accessible from the host node of a networked configuration.
Update Baseline
Update Baseline allows a user to incorporate a specified list of approved modules into a hierarchical package structure, thereby allowing a new approved baseline to be automatically defined.
Update Baseline will determine which packages need updating, generate an active DC for each package, update the packages to reference the specified approved modules, and approve the packages.
Objective of Update Baseline
A LIFESPAN database will typically consist of many hierarchical package structures and within these structures a module instance may be referenced a number of times.
With interactive use of LIFESPAN, if a module is updated and approved in one package, it is likely that the task for managers of other packages which contain that module will, at some time, be to embody that change within their package.
This involves generating a DC for the package, assessing the DC, activating the DC, updating the package to reference the selected approved version of the changed module, and then getting the package approved.
It is this embodiment of updated, approved modules into a related package, and furthermore, the rippling of the resultant changes up a package structure until a specified root package is reached, that is performed automatically by Update Baseline.
For example, consider the package structures shown in Figure 10.1.
If the Parts Manager updates modules WING and WHEELCOVER within the package PARTSPCK and obtains approval, then the Prod Manager could use Update Baseline to incorporate the new versions of WING and WHEELCOVER into the HERBIE package structure i.e. update and approve STYLEPCK, BODYPCK, RELYPCK, and HERBIE.
Update Baseline may be used in two modes: either as a means of checking which packages will be affected, in which case a single log file will be produced but the LIFESPAN database will be left unaltered; or to implement any changes which are identified, in which case two log files will be produced, detailing the processing carried out and the approver's involvement.
The package structure to be updated must define an existing baseline i.e. the root package must be approved, and all sub-packages must be referenced at their latest selected approved versions.
Preparation For Update Baseline
Prior to running Update Baseline, the user must identify which modules within a specified approved package structure (baseline) have later approved versions than are currently referenced and which need to be embodied in order to generate a new baseline.
(Note: The PI utility List Root Package may be used to identify which modules have changed).
The user must then generate a steering file specifying the list of module names.
These modules may be of any type i.e. source, foreign, pmodel or package.
Running Update Baseline
The Update Baseline routine is a stand-alone executable program which should be stored in the LIFESPAN installation directory, and can therefore be invoked as follows:
The following inputs will initially be required:
LIFESPAN User Name A valid LIFESPAN user name through which Update Baseline will access LIFESPAN.
This user must not be already logged into LIFESPAN (either interactively or via PI or PMR) and, if the identified changes are to be implemented, the user must be the manager, or an ascendant, of all packages to be updated.
LIFESPAN User Password The password for the above LIFESPAN user.
For security reasons, the password will not be echoed to the screen.
LIFESPAN User Directory A directory which should contain the steering file and which is used by Update Baseline to store the generated log file for the user.
This directory must exist and the VMS user accessing the routine must have at least read and write access to it.
If no entry is made at this prompt, the current VMS directory will be used by default.
Steering File Name A file containing the list of modules which exist in LIFESPAN at later approved versions than are currently referenced in the package structure.
It should be stored in the User's Directory, so specification of the disk and directory path are not required.
Root Package Name An existing approved package name in LIFESPAN, which defines the root of the structure to be checked/updated.
Once the prepass phase has been completed, the following further inputs will be required.
Update Structure (Y/N)A switch to specify whether the package structure is to be checked or updated.
Enter ‘N’ to exit from the routine, or enter ‘Y’to implement the changes in the structure.
If the structure is to be updated, then the following approver's details will be required.
QA LIFESPAN User Name A valid LIFESPAN user name through which Update Baseline will access LIFESPAN to approve each package which has been updated.
The approver must have LIFESPAN QA privilege but will only be used if the option to modify the structure is chosen (see below).
If this is the case, then the approver must not be already logged into LIFESPAN.
QA LIFESPAN User Password The password for the above QA LIFESPAN User.
For security reasons, the password will not be echoed to the screen.
QA LIFESPAN User's Directory A directory which is used by Update Baseline to store the generated log file for the approver.
This directory must exist and the VMS user accessing the routine must have at least read and write access to it.
(Note: The user's directory and approver's directory may be the same).
If no entry is made at this prompt, the current VMS directory will be used by default.
Processing Performed by Update Baseline
Initially a log file ‘UPDATE_BASELINE.LOG’ is opened in the specified user directory and the results of all processing performed below are output to this log file.
If an error or warning occurs for a particular module then an appropriate message is output to this log file, but processing continues until all modules in the steering file have been examined.
Update Baseline then attempts to log on to LIFESPAN with the specified User Name/Password.
It will only be able to achieve this if the LIFESPAN system is running and available (i.e. logicals are set up correctly), if the User Name/Password are valid, and if that user is not already logged into LIFESPAN (either interactively or via PI or PMR).
The steering file and the modules listed within it are then verified to ensure that:
the steering file exists, is accessible, and contains at least one module name
the module names are known to LIFESPAN
the modules are accessible to the specified user i.e. the LIFESPAN module access rules are satisfied
the modules are approved
the maximum number of modules specified in the steering file is not exceeded (see Limitations below).
The root package specified is checked to ensure that:
the package is known to LIFESPAN as a module of type PACKAGE
the package is approved
the package is accessible to the specified user i.e. the LIFESPAN module access rules are satisfied.
The package structure below the specified root package is then traversed to determine which packages need to be updated to take account of the later versions of modules in the steering file and the consequential impact on all levels of the structure.
In doing so it checks the following:
all packages are approved
all packages are accessible to the specified user i.e. the LIFESPAN module access rules are satisfied
each lower level package is selected at its latest approved version
a package is not referenced in more than the maximum allowed number of packages (see Limitations below)
the maximum number of packages to be approved is not exceeded (see Limitations below)
the modules in the steering file exist within the specified package structure and at a later version than currently referenced.
If the input data specifies that the structure is NOT to be modified then the user's log file is closed and processing terminates.
If the package structure is to be modified then processing continues as outlined below.
A log file ‘QA_USER.LOG’ for the specified Approver is opened in the approver's directory and the approver is logged on to LIFESPAN.
This will only be achieved if the approver's Name/Password are valid and if that user is not already logged into LIFESPAN (either interactively, or via PI or PMR).
The manager of each package to be updated is checked to determine whether the specified user may carry out the changes.
This can only be achieved if the specified user is the manager of the package and if the DC raised to update the package does not need to be assessed by any other users.
Update Baseline attempts to satisfy these conditions by ensuring that each package and the packages referencing it (within the package structure being updated) are managed by the specified user.
Any of these packages which are not currently managed by the specified user are temporarily updated to be so, provided the current manager is a descendant of the specified user.
If this is not the case then an error will be reported.
Secondly, by temporarily switching on the auto-assessment of DCs facility for each package and the packages referencing it.
This can be achieved provided that the LIFESPAN Manager has allowed auto-assessment of DCs in the configuration file, otherwise an error will result.
As the specified user, Update Baseline then modifies each package by creating a DC, updating it with default values, submitting the DC for assessment, activating the DC on the package, updating the package contents (equivalent of LIFESPAN option 1.3.4 — Edit Package Contents), submitting the package to the Approver for approval, and finally, as the specified Approver, preparing the package for approval and granting approval to the package.
These activities can only be completed if:
The specified user has DC Operations privilege
The specified approver has QA privilege
The package module referenced on the DC is not already on an active DC elsewhere.
The DC does not need assessment by a user (other than the specified user), who manages a package outside the structure referencing one of the modules in the steering file.
On completion of the package updates, any modifications to package managers or settings of the auto-assessment flags are reset to their original values.
An example log file for Update Baseline is shown in Section 10.2.6.
Details of any errors which may occur and the possible course of action to follow are given in Section 10.2.7.
Limitations of Update Baseline
The maximum number of modules which may be specified in the steering file for inclusion in a package structure is 100.
The maximum number of packages which can be updated and approved by Update Baseline is also 100.
Any package in the structure which is to be updated and approved must not be contained in more than 30 other packages.
Example Log File For Update Baseline
(a)
Update Baseline accesses LIFESPAN as the specified user
(b)
After traversing the package structure the packages to be updated at the different levels in the structure are identified.
(c)
The processing performed for each of the identified packages to be updated is similar and is described once below for simplicity:
(i)
The manager of the package being processed and all packages at the next level in the structure which reference it are temporarily changed to the specified user.
This can only be achieved if the current manager is the specified user or a descendant of the specified user.
(ii)
A DC for the package is created, updated, submitted, assessed by the specified user, and activated on the package.
(iii)
Any mail messages which already exist in LIFESPAN for the specified user are formatted into a *.
MML file in the User Directory.
(iv)
The package to be updated is read from LIFESPAN, updated to reference the modules to be incorporated in the baseline, and then entered back into LIFESPAN.
(v)
The package is submitted for approval.
The approval processing is detailed in a separate log file QA_USER.LOG.
(vi)
The Manager of the package and those at the next level in the structure which reference it are reset to their original values for the package being updated and all packages which reference it (see (i) above).
Error Details For Update Baseline
Message severity=Warning source=metapi
Duplicate module name in steering file.
Action: Remove one occurrence of the module name from the steering file
Message severity=Warning source=metapi
Specified root package exists in steering file
Action: The root package cannot itself be an updated module — remove it from the steering file
Message severity=Warning source=metapi
Module…selected in package…as latest approved
Action: The specified module is already referenced at its current approved issue in the specified package — no action necessary
Message severity=Warning source=metapi
Module…not found in package structure
Action: Specified module is not in the structure to be updated — remove it from the steering file
Message severity=Error source=metapi
Maximum number of updated modules exceeded
Action: 100 approved modules is the maximum which can be included in a new baseline in one attempt.
Sub-divide the list of modules and run Update Baseline for each portion.
Message severity=Error source=metapi
Maximum number of packages to be approved exceeded
Action: 100 packages only can be updated and approved in a single run of Update Baseline — update the package structure in portions
Message severity=Error source=metapi
Package…contained in too many packages
Action: Any package in the structure to be updated may only be referenced by 30 packages otherwise structure is too complex to update automatically — process interactively
Message severity=Error source=metapi
Module…is not approved
Action: All modules in steering file must be approved already — please check
Message severity=Error source=metapi
No access to module…
Action: Module is password protected and cannot be accessed by this user
Message severity=Error source=metapi
Module…not known
Action: Module is not known to LIFESPAN — please check
Message severity=Error source=metapi
No module names in steering file
Action: Check that the specified steering file is correct
Message severity=Error source=metapi
No packages require to be updated
Action: The modules in the steering file have no impact on the specified package structure — no action necessary
Message severity=Error source=metapi
Root package specified is not approved
Action: The root package must be approved before Update Baseline commences
Message severity=Error source=metapi
Package…is not latest in package…
Action: Updates may only be made to the latest approved baseline for the specified root package — the discrepancy must be resolved manually
Message severity=Error source=metapi
Package…not owned by current user or descendant.
Owner cannot be changed.
Action: The manager of the specified package cannot be changed in order to update the package by the specified user.
Re-assign the manager of the package temporarily to the specified user or change the specified user.
Message severity=Error source=metapi
User…has not assessed the DC
Action: A DC needs to be assessed manually
Message severity=Error source=metapi
Timed out waiting for DC…to be agreed
Action: A DC may need to be assessed by a user outside the specified user's hierarchy
Message severity=Error source=metapi
Error occurred — check log file carefully.
Action: Examine the specified log file to determine the nature of the error
Message severity=Error source=metapi
Error opening user supplied steering file
Action: A corruption has occurred in the user's steering file — please investigate manually
Message severity=Error source=metapi
Error resetting user supplied steering file
Action: A corruption has occurred in the user's steering file — please investigate manually
Message severity=Error source=metapi
Error reading module name from steering file
Action: A corruption has occurred in the user's steering file — please investigate manually
Message severity=Error source=metapi
Unknown error for module…
Action: An unexpected error has occurred e.g. LIFESPAN has been stopped.
Please consult your Lifespan Manager.
Message severity=Error source=metapi
Failed to change manager of package…to current user
Action: An unexpected error has occurred e.g. LIFESPAN has been stopped.
Please consult your Lifespan Manager.
Message severity=Error source=metapi
Failed to change manager of package…back to…
Action: An unexpected error has occurred e.g. LIFESPAN has been stopped.
Please consult your Lifespan Manager.
Directory Integrity Check
Directory Integrity Check compares the contents of a directory or directory structure against the corresponding modules held within a LIFESPAN package structure.
It will determine which modules are the same and which are different, by comparing the current versions from the LIFESPAN headers and also by performing a Cyclic Redundancy Check (CRC).
Furthermore, if there are later versions of modules in a directory, it provides the option to automatically enter them into LIFESPAN, provided the module entry conditions are satisfied (e.g. an active DC exists on a package in the structure, which is owned by the specified user).
Objective of Directory Integrity Check
During software development and integration, it is standard practice for software modules to be withdrawn from LIFESPAN and modified/tested in a local environment.
The return of these changes to LIFESPAN is a critical stage and the developer/integrator needs to be confident that the LIFESPAN database has been fully updated before seeking approval.
It is this confidence that is provided by Directory Integrity Check, since it allows a complete comparison to be made between the files in a directory/directory structure and their corresponding LIFESPAN modules.
Directory Integrity Check provides an option for entering modules which are ‘candidates for entry’ and where a suitable ‘entry point’exists.
A candidate for entry is a module which scans correctly, is at a development version and later than that known to LIFESPAN.
An entry point is a package through which a module may be entered into LIFESPAN i.e. one which is owned by the specified user and has an active DC referencing the module.
Directory Integrity Check also provides two additional features:
It indicates whether any modules are at the same version but with different contents i.e. a module outside LIFESPAN has been modified but the header has not been updated.
It highlights any modules outside LIFESPAN which are at a lower version than currently held within LIFESPAN i.e. modules which have been updated in LIFESPAN since they were withdrawn to the directory of interest.
The facility may be used in two modes: either to only produce a report of the comparison results, or to go further, and enter the updates into LIFESPAN, provided the normal LIFESPAN entry conditions are satisfied.
In practice, therefore, Directory Integrity Check may be run after a period of development/integration, and any updates either entered automatically via the routine or entered manually.
It may also be re-run to ensure that the updates have been successfully entered into LIFESPAN prior to Quality Approval.
Preparation For Directory Integrity Check
Prior to running Directory Integrity Check, the user may wish to identify any files of a particular type in the directory/directory structure which are to be excluded from the comparison e.g. DIR, LOG etc.
The directories should also be purged, otherwise out of date files will be included in the comparison.
Running Directory Integrity Check
The Directory Integrity Check routine is a stand-alone executable program which should be stored in the LIFESPAN installation directory, and can therefore be invoked as follows:
The following inputs will then be required:
LIFESPAN User Name A valid LIFESPAN user name through which Directory Integrity Check will access LIFESPAN.
This user must not be already logged into LIFESPAN (either interactively or via PI or PMR) and, if any identified changes are to be implemented (i.e. Test Mode = FALSE), the user must be the manager of the entry point packages and the associated user for the corresponding active DCs.
LIFESPAN Password The password for the above LIFESPAN user.
For security reasons, the password will not be echoed to the screen.
LIFESPAN User Directory A directory which is used by Directory Integrity Check to store the generated log file (DIR_INTEG_CHK.LOG).
This directory must exist and the VMS user accessing the routine must have at least read and write access to it.
If no entry is made at this prompt, the current VMS directory will be used by default.
Directory to be Checked The directory whose contents are to be compared with LIFESPAN held modules; for a directory structure the directory path should be followed by three dots e.g. dua2:[mydir…].
This directory must exist and the VMS user accessing the routine must have at least read and write access to it.
Root Package Name An existing package name in LIFESPAN, which defines the root of the structure to be checked/updated.
Root Package Password If the above root package is password protected from the specified user, then a password may need to be specified for the LIFESPAN modules to be accessed, if the specified user is not in the same user branch as the module manager or a special link does NOT exist between the two.
The default is no password i.e. may be left blank.
Root Package Selection The version of the root package in LIFESPAN which is to be compared (in format 99.99X).
The default is ‘Latest’ i.e. may be left blank.
Extension Exclusions A list of file type extensions, separated by commas, of any files which are to be excluded from the comparison e.g. DIR, LOG.
Test Mode A switch to specify whether the package structure is to be checked only (True) or updated as well(False).
Processing Performed by Directory Integrity Check
Initially a log file ‘DIR_INTEG_CHK.LOG’ is opened in the specified user directory and the results of all processing performed below are output to this log file.
Directory Integrity Check then attempts to log on to LIFESPAN with the specified User Name/Password.
It will only be able to achieve this if the LIFESPAN system is running and available (i.e. logicals are set up correctly), if the User Name/Password are valid, and if that user is not already logged into LIFESPAN, either interactively or via PI or PMR.
If any LIFESPAN mail exists for that user, it is emptied into a file (*.
MML) in the work directory in the same manner that some PI routines clear mail before any new mail is generated (refer User Guide to LIFESPAN PI, Section 6.3).
The root package specified is checked to ensure that:
the package is known to LIFESPAN as a module of type Package
the package is accessible to the specified user i.e. the LIFESPAN module access rules are satisfied.
Each file in the specified directory/directory structure is then processed, unless it has a file name extension type which is one of the specified exclusions, in which case it is ignored.
The LIFESPAN header of the file is scanned to determine the module name and its latest issue.
If a LIFESPAN header cannot be found or if it is not in the correct format then a ‘scan error’ results.
Directory Integrity Check flags an error if the module name is not known to LIFESPAN.
The latest issue of the module in LIFESPAN is determined and compared with the directory file.
A comparison is made of their version and the CRC signatures are also compared (except for Foreign files).
If the CRCs are different then an error message is output.
If the module versions are the same then that fact is output to the log file; if they are different then the log file is updated with:
a warning indication, if the issue of the module is greater in LIFESPAN than in the directory
a statement that the module is a candidate for entry, if the issue of the module is lower in LIFESPAN than in the directory.
Directory Integrity Check then seeks an entry point in the package structure for each module which has been identified as a candidate for entry i.e. a package which is managed by the specified user and has an active DC for the module.
If there is no such entry point then all packages suitable for DC activation are identified i.e. packages which contain the module and are managed by the specified user.
Directory Integrity Check then enters any modules which are candidates for entry into LIFESPAN provided that:
no errors have occurred with any module checked
the input data specifies that the LIFESPAN database is to be updated i.e. Test Mode is False
a suitable entry point exists.
An example log file for Directory Integrity Check is shown in Section 10.3.6.
Details of any errors which may occur and the possible course of action to follow are given in Section 10.3.7.
Limitations of Directory Integrity Check
Foreign files are not included the CRC signature comparison.
File names are limited to 64 characters.
Example Log File For Directory Integrity Check
(a)
Directory Integrity Check accesses LIFESPAN with the specified user name.
(b)
The scan phase commences and each file in the directory structure, except exclusions, is examined to determine any differences from LIFESPAN held modules.
(c)
A warning is generated if there is a later version of a module in LIFESPAN than that present in the directory.
(d)
An error is generated if the CRC is different.
(e)
A candidate for entry is identified because the version in the directory is later than that known to LIFESPAN.
(f)
For any candidate for entry, all packages in the structure which contain the module are examined to see if an entry point exists ie. an active DC referencing the module.
(g)
A warning is generated if an entry point is not found.
Error Details For Directory Integrity Check
Message severity=Warning source=metapi
…contains a FOREIGN module, cannot calculate its CRC
Action: Directory Integrity Check does not compute the CRC for Foreign modules — difference manually.
Message severity=Warning source=metapi
Module entry point NOT found in the package hierarchy…
Action: Generate an active DC before the updated module can be entered
Message severity=Warning source=metapi
…does not contain the latest version
Action: A later version of this module exists in LIFESPAN — please investigate
Message severity=Warning source=metapi
…contains an unknown issue of a module known to LIFESPAN
Action: The module in the directory is known to LIFESPAN but no version has yet been entered.
Message severity=Warning source=metapi
…a higher VMS version exists of this file
Action: This version of the file should be purged since Directory Integrity Check only compares the latest version
Message severity=Warning source=metapi
The package contains the module in file…but there is no DC for this module via this package
Action: An active DC is required before this module can be entered into LIFESPAN
Message severity=Error source=metapi
…signature is different from that retained by LIFESPAN
Action: The file in the directory is physically different from the same version held in LIFESPAN — does the LIFESPAN header need updating?
Message severity=Error source=metapi
…filename part exceeds LIFESPAN maximum
Action: LIFESPAN only allows 64 character file names — please shorten
Message severity=Error source=metapi
…has scan errors
Action: Run the offline scanner and fix any errors
Message severity=Error source=metapi
Timed out waiting for LIFESPAN mail message…check manually
Action: Examine the LIFESPAN mail message for further details
Message severity=Error source=metapi
Failed to enter the module, see LIFESPAN mail message (in the printed mail)…for details
Action: Examine the LIFESPAN mail message for further details
Message severity=Error source=metapi
Error waiting for LIFESPAN mail message
Action: An unexpected error has occurred e.g. LIFESPAN has stopped.
Please consult your Lifespan Manager.
Message severity=Error source=metapi
…failed to calculate the CRC
Action: An unexpected error has occurred e.g. LIFESPAN has stopped.
Please consult your Lifespan Manager.
Message severity=Error source=metapi
…failed to obtain the module signature due to a LIFESPAN failure
Action: An unexpected error has occurred e.g. LIFESPAN has stopped.
Please consult your Lifespan Manager.
Message severity=Error source=metapi
…failed to obtain the module signature from LIFESPAN, because…
Action: An unexpected error has occurred e.g. LIFESPAN has stopped.
Please consult your Lifespan Manager.
Type Module
The Type Module routine provides a user with the ability to view the contents of a module (excluding Foreigns) without having to withdraw it from LIFESPAN.
Objective of Type Module
Type Module allows a user to quickly display the contents of a LIFESPAN module.
Preparation For Type Module
The LIFESPAN database to be accessed must be accessible (refer Section 10.1).
Running Type Module
The Type Module routine is a stand-alone executable program which should be stored in the LIFESPAN installation directory, and can therefore be invoked as follows:
The following inputs will then be required:
LIFESPAN User Name A valid LIFESPAN user name through which Type Module will access LIFESPAN.
This user must not be already logged into LIFESPAN, either interactively or via PI or PMR.
LIFESPAN User Password The password for the above LIFESPAN user.
For security reasons, the password will not be echoed to the screen.
LIFESPAN User Directory The directory to be used by Type Module to store the generated log file (TYPE_MODULE.LOG).
This directory must exist and the VMS user accessing the routine must have at least read and write access to it.
Module Name An existing module name in LIFESPAN, which can be of type Package, Source, or Pmodel.
Issue Number The version of the module in LIFESPAN which is to be displayed (in format 99.99X).
The default is ‘Latest’ i.e. may be left blank.
Processing Performed by Type Module
Initially a log file, ‘TYPE_MODULE.LOG’, is opened in the specified directory and the outcome of the transaction is output to this log file.
Type Module then attempts to log on to LIFESPAN with the specified User Name/Password.
It will only be able to achieve this if the LIFESPAN system is running and available (i.e. logicals are set up correctly), if the User Name/Password are valid, and if that user is not already logged into LIFESPAN, either interactively or via PI or PMR.
The module specified is checked to ensure that:
the module is known to LIFESPAN
the module is not of type Foreign
the specified issue of the module exists in LIFESPAN
the module is accessible to the specified user i.e. the LIFESPAN module access rules are satisfied.
Type Module then displays the module contents to the screen.
The user should use the ‘Hold Screen’ key to control the output.
An example log file for Type Module is shown in Section 10.4.6.
Details of any errors which may occur and the possible course of action to follow are given in Section 10.4.7.
Limitations of Type Module
Type Module may not be used to display the contents of a FOREIGN module.
Type Module may only be accessed from the host node in a networked configuration.
Example Log File For Type Module
(a)Type Module accesses LIFESPAN using the specified User Name.
If the transaction is successful, then nothing further is added to the log file.
If an error occurs, then details of the error will be specified here.
Error Details For Type Module
Message severity=Error source=metapi
Module unknown…
Action: The module specified is not known to LIFESPAN — check the name
Message severity=Error source=metapi
Invalid issue for…
Action: The specified issue of the module does not exist in LIFESPAN — check in LIFESPAN
Message severity=Error source=metapi
No access to module…
Action: Module is password protected and cannot be displayed for this user
Message severity=Error source=metapi
This utility may not be used for foreign modules
Action: The selected module is of type Foreign and cannot be displayed
Message severity=Error source=metapi
This utility may only be used on the same node as LIFESPAN
Action: Type Module is only available from the LIFESPAN host node
Message severity=Error source=metapi
Error displaying module.
See log file for details
Action: Examine the log file and investigate the error
Message severity=Error source=metapi
Error obtaining filename for…
Action: An unexpected error has occurred e.g. LIFESPAN has been stopped.
Please consult your Lifespan Manager.
Message severity=Error source=metapi
Module details failure for…
Action: An unexpected error has occurred e.g. LIFESPAN has been stopped.
Please consult your Lifespan Manager.
Message severity=Error source=metapi
Unknown error for…
Action: An unexpected error has occurred e.g. LIFESPAN has been stopped.
Please consult your Lifespan Manager.
Message severity=Error source=metapi
Error reading line from file for…
Action: An unexpected error has occurred e.g. LIFESPAN has been stopped.
Please consult your Lifespan Manager.
Message severity=Error source=metapi
Error resetting file for…
Action: An unexpected error has occurred e.g. LIFESPAN has been stopped.
Please consult your Lifespan Manager.
Message severity=Error source=metapi
Error opening file for…
Action: An unexpected error has occurred e.g. LIFESPAN has been stopped.
Please consult your Lifespan Manager.
LIFESPAN SERVICES
To promote the effective use of LIFESPAN, Sema Software Technology (SST) supports and promotes the following services:
LIFESPAN User Group
LIFESPAN User Group Library
Telephone Support
Software Performance Report (SPR) and Software Status Report (SSR) systems
LIFESPAN User Group
This LIFESPAN User Group,(LSUG), was formed in June 1988 with the following objectives:
to provide a forum for the user group
to increase the effective use of the LIFESPAN system
to represent users as a whole
to promote communication and interchange of experience and between users and SST.
Full membership of the organisation is available to all licenced users of LIFESPAN, and may be obtained simply by notifying the secretary of the LIFESPAN User Group.
Meetings of the LSUG take place twice a year, and attendance is available to all full members.
Full members wishing to attend a meeting should upon receipt of an invitation, register their intention in writing to the secretary of the LIFESPAN User Group.
Whilst the agenda of the meeting is formulated by the LSUG committee, SST undertake to organise the venue, refreshments and provide general meeting coordination.
Attendance at LSUG meetings of up to 2 full members from each licenced customer site is available free of charge.
Extra places may be charged at the current commercial rate.
The LSUG has a committee of four, a Chairman, Vice Chairman, Secretary and SST representative.
The Chairman, Vice Chairman and Secretary are elected annually by members attending the User Group Meeting.
The position of the SST representative is filled by a member of the Technical Support section of SST.
The committee acts as the driving body of the user group, keeping records and membership, steering user group meetings and providing minutes of all meetings and all correspondence.
The LSUG is an active body with user group meetings enabling exchange of ideas, experiences, hints, criticisms and recommendations.
It is from these recommendations by the users that many of the recent changes in LIFESPAN have been made.
SST therefore actively encourages membership of the LSUG and representation of each licenced site at user group meetings.
Further details of the organisation may be found in the constitution of the LSUG, available from the Secretary of the LIFESPAN User Group.
LIFESPAN User Group Library
The LSUG library has been set-up to provide a place of safe storage and point of distribution for software pertaining to LIFESPAN.
This includes software written around the LIFESPAN Procedural Interface (PI) routines, useful command routines, extensions to LIFESPAN utilities and documented advice.
The library service is provided by SST at Chippenham.
The contents of the library may be obtained by licenced sites upon making a software contribution to the library.
Subsequent copies may be obtained by making further contributions.
Contributions should be made if possible on TK50 magnetic tapes, and the current contents of the library will be returned on the same tape.
Before releases of the software can be made, it is also necessary to sign a LSUG Library Participation Agreement.
This explains the rules under which the library operates, making it clear that SST simply provides a repository and distribution service for the software and holds no responsibility of its fitness for purpose or the magnetic media on which it is stored.
Telephone Support
Customers who have purchased a LIFESPAN maintenance agreement are entitled to call upon the services of the LIFESPAN help desk.
This is based at the SST offices in Chippenham and is available during normal office working hours, which are 08:30 to 17:30.
Simply phone 0249 656194 and ask for the LIFESPAN Help Desk.
To avoid unnecessary clogging of the support system, queries should first be filtered at site level by the local LIFESPAN expert/manager.
Only queries outstanding after this stage should be referred to the Lifespan Help Desk.
Upon contacting the help desk, your call will be logged and you will be asked to provide information concerning the problem.
In many cases this will simply require consultation via the telephone, however, in others, you may be required to provide certain information by facsimilie eg. the ERROR.LOG file, module headers or validation statistics.
It should be noted that the mail system and ERROR.LOG file often provide the best indication of the cause of the problem.
In all but a few cases, a solution will be provided immediately or within a couple of hours.
However, under the provisions of the Maintenance and Support Services Agreement, if a solution has not been found within 3 working days, you may request a site visit by a SST consultant to expedite a solution.
This will be made within 48 hours of the request.
There will be no charge for such a site visit provided that the problems have been caused by LIFESPAN.
However, if it is found that the problem is unrelated to LIFESPAN, then a charge will be made at the current commercial rates for the labour and expenses incurred.
Software Performance Report (SPR) and Software Status Report (SSR) systems
Customers who have purchased a LIFESPAN maintenance agreement are entitled to make use of the SPR/SSR system.
The Software Performance Report (SPR) provides the user with a vehicle for formal notification of errors and malfunctions in the LIFESPAN system, and of requests for changes to the system.
SST is then able to formally reply to these SPRs via a Software Status Report (SSR).
To avoid unnecessary clogging of the support system, queries should first be filtered at site level by the local LIFESPAN expert/manager, before an SPR is raised.
SPRs should be raised using a standard SST SPR form (provided with the LIFESPAN Documentation) and contain as much information as possible relevant to the query.
Completed SPRs should then be sent to the SST offices in Chippenham.
After due consideration, a reply to the SPR will be generated by SST in the form of an SSR, which will then be sent to the originator of the SPR.
This will advise the user of ways to overcome the problem arising before an amendment can be made to the LIFESPAN package, comment on the suggested changes, and may indicate timescales for corrections to the problem.